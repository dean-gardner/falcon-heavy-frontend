[{"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/index.tsx":"1","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/reportWebVitals.ts":"2","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/serviceWorker.ts":"3","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/App.tsx":"4","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/ColorModeSwitcher.tsx":"5","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Layout/Layout.tsx":"6","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Dashboard.tsx":"7","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Bonds/BuyBond.tsx":"8","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/utils.ts":"9","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Bonds/hooks.ts":"10","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/hooks/useBeacon.ts":"11","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractStorageInfo.tsx":"12","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractAddressInput.tsx":"13","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractBalanceInfo.tsx":"14","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractTransferForm.tsx":"15","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondsList.tsx":"16","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/hooks/usePendingPromise.ts":"17","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/config/index.js":"18","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Preloader.tsx":"19","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondsModal.tsx":"20","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondItem.tsx":"21"},{"size":837,"mtime":1645374163930,"results":"22","hashOfConfig":"23"},{"size":416,"mtime":1645374163930,"results":"24","hashOfConfig":"23"},{"size":5258,"mtime":1645374163930,"results":"25","hashOfConfig":"23"},{"size":537,"mtime":1645374163927,"results":"26","hashOfConfig":"23"},{"size":743,"mtime":1645374163927,"results":"27","hashOfConfig":"23"},{"size":2203,"mtime":1645624044413,"results":"28","hashOfConfig":"23"},{"size":1936,"mtime":1645374163929,"results":"29","hashOfConfig":"23"},{"size":2815,"mtime":1645623982022,"results":"30","hashOfConfig":"23"},{"size":250,"mtime":1645374163931,"results":"31","hashOfConfig":"23"},{"size":2267,"mtime":1645374163928,"results":"32","hashOfConfig":"23"},{"size":2019,"mtime":1645374163929,"results":"33","hashOfConfig":"23"},{"size":917,"mtime":1645374163928,"results":"34","hashOfConfig":"23"},{"size":458,"mtime":1645374163928,"results":"35","hashOfConfig":"23"},{"size":1010,"mtime":1645374163928,"results":"36","hashOfConfig":"23"},{"size":1902,"mtime":1645374163928,"results":"37","hashOfConfig":"23"},{"size":4278,"mtime":1645623780258,"results":"38","hashOfConfig":"23"},{"size":936,"mtime":1645374163929,"results":"39","hashOfConfig":"23"},{"size":881,"mtime":1645548144524,"results":"40","hashOfConfig":"23"},{"size":304,"mtime":1645374163929,"results":"41","hashOfConfig":"23"},{"size":477,"mtime":1645547686975,"results":"42","hashOfConfig":"23"},{"size":699,"mtime":1645624749105,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"kxn1u3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/index.tsx",[],["93","94"],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/reportWebVitals.ts",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/serviceWorker.ts",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/App.tsx",["95"],"import * as React from \"react\";\nimport { ChakraProvider, Box, VStack, Grid, theme } from \"@chakra-ui/react\";\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\nimport { Layout } from \"./components/Layout/Layout\";\n\nimport { Logo } from \"./Logo\";\n\nexport const App = () => (\n  <ChakraProvider theme={theme}>\n    <Box fontSize=\"xl\">\n      <Grid minH=\"100vh\" p={3}>\n        <ColorModeSwitcher justifySelf=\"flex-end\" />\n        <VStack spacing={8}>\n          <Layout />\n        </VStack>\n      </Grid>\n    </Box>\n  </ChakraProvider>\n);\n","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/ColorModeSwitcher.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Layout/Layout.tsx",["96","97"],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Dashboard.tsx",["98"],"import React, { useEffect, useState } from \"react\";\nimport { Button, VStack, Text, Code, Divider } from \"@chakra-ui/react\";\n\nimport useBeacon from \"../hooks/useBeacon\";\nimport { ContractAddressInput } from \"./ContractAddressInput\";\nimport { ContractStorageInfo } from \"./ContractStorageInfo\";\nimport { validateContractAddress } from \"../utils\";\nimport { ContractBalanceInfo } from \"./ContractBalanceInfo\";\nimport { ContractTransferForm } from \"./ContractTransferForm\";\n\nconst AccountInfo: React.FC<{\n  pkh: string;\n}> = ({ pkh }) => (\n  <Text>\n    Your account: <Code>{pkh}</Code>\n  </Text>\n);\n\nexport function Dashboard() {\n  const { connect, pkh, disconnect } = useBeacon();\n  const [contractAddress, setContractAddress] = useState<string>(\n    \"KT19psPK1PZNMkaq8TuU1D77u7ipyFVQ3BmE\"\n  );\n  const [contractValid, setContractValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    setContractValid(validateContractAddress(contractAddress));\n  }, [contractAddress]);\n\n  \n  return (\n    <div className=\"text-center\">\n      {!pkh ? (\n        <Button className=\"btn btn-primary submit-btn\" onClick={connect}>\n          Connect wallet\n        </Button>\n      ) : (\n        <>\n          <Button className=\"btn btn-primary submit-btn\" variant=\"outline\" onClick={disconnect}>\n            Disconnect wallet\n          </Button>\n\n          <AccountInfo pkh={pkh} />\n          <Divider />\n          <ContractAddressInput\n            value={contractAddress}\n            onChange={(e) => setContractAddress(e.target.value)}\n            isInvalid={!contractValid}\n          />\n          {contractValid && contractAddress && (\n            <>\n              <ContractStorageInfo contractAddress={contractAddress} />\n              <ContractBalanceInfo contractAddress={contractAddress} pkh={pkh} />\n              <ContractTransferForm contractAddress={contractAddress} pkh={pkh} />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Bonds/BuyBond.tsx",["99","100","101","102","103","104","105","106"],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/utils.ts",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Bonds/hooks.ts",["107","108","109","110","111","112"],"import { useCallback, useState } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\n\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { NetworkType, PermissionScope } from \"@airgap/beacon-sdk\";\n  \n  import {NETWORK_ADDRESS, TREASURY_CONTRACT_ADDRESS, BOND_CONTRACT_ADDRESS, NETWORK_TYPE, LP_TOKEN_CONTRACT_ADDRESS, LP_TOKEN}\n   from '../../config/index';\n\nconst options = {\n  name: \"Plenty Bonds Marketplace: Falcon Heavy\",\n  network: {\n    type: NETWORK_TYPE,\n  }\n};\n\nexport default function useBonds() {\n  let myAddress: string | undefined;\n\n  const buyBond = useCallback(async () => {\n      // alert('Waiting for back-end');\n      \n      const bondPrice = 1;\n      const LpToken = LP_TOKEN;\n      const LpTokenAmount = 1000;\n      const Slippage = 0.5;\n\n      const Tezos = new TezosToolkit(NETWORK_ADDRESS);\n      const wallet = new BeaconWallet(options);\n\n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount && false) {\n\n        console.log(\"Already connected:\", activeAccount.address);\n        myAddress = activeAccount.address;\n        //const permissions = await wallet.client.requestPermissions(options);\n\n      } else {\n        await wallet.requestPermissions(options);\n        myAddress = await wallet.getPKH();\n        console.log(\"New connection:\", myAddress);\n      }\n\n      Tezos.setWalletProvider(wallet);\n\n      // Tezos.wallet.at(LP_TOKEN_CONTRACT_ADDRESS).then(contract => {\n      //   return contract.methods.approve(TREASURY_CONTRACT_ADDRESS, LpTokenAmount).send({from: myAddress});\n      // } );\n\n      Tezos.wallet.at(BOND_CONTRACT_ADDRESS).then(contract => {\n        // bond_price_requested_in_usd: bondPrice, lp_token : LpToken, \n        //   lp_token_amount: LpTokenAmount, slippage: Slippage\n        return contract.methods.order(bondPrice, LpTokenAmount, LpToken, Slippage).send({from: myAddress});\n          } );\n\n\n      // const batch = await Tezos.wallet.batch()\n      //   .withContractCall(contract.methods.interact('defaul'))\n      //   .withContractCall(contract.methods.wait([['unit']]));\n\n      // const batchOp = await batch.send();\n      // console.log('Operation hash:', batchOp.hash);\n      // await batchOp.confirmation();\n  }, []);\n\n\n\n  return { buyBond };\n}\n","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/hooks/useBeacon.ts",["113","114","115","116"],"import { useCallback, useState } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\n\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { NetworkType, PermissionScope } from \"@airgap/beacon-sdk\";\n\nimport {NETWORK_ADDRESS, BOND_CONTRACT_ADDRESS, NETWORK_TYPE} from '../config/index';\n\nconst options = {\n  name: \"Plenty Bonds Marketplace: Falcon Heavy\",\n  // iconUrl: \"https://tezostaquito.io/img/favicon.png\",\n  // eventHandlers: {\n  //   PERMISSION_REQUEST_SUCCESS: {\n  //     handler: async (data: any) => {\n  //       console.log(\"permission data\", data);\n  //     },\n  //   },\n  // },\n};\n\nclass LambdaViewSigner {\n  async publicKeyHash() {\n    return \"tz1fVQangAfb9J1hRRMP2bSB6LvASD6KpY8A\";\n  }\n\n  async publicKey() {\n    return \"edpkvWbk81uh1DEvdWKR4g1bjyTGhdu1mDvznPUFE2zDwNsLXrEb9K\";\n  }\n\n  async secretKey(): Promise<string> {\n    throw new Error(\"Secret key cannot be exposed\");\n  }\n\n  async sign(): Promise<{\n    bytes: string;\n    sig: string;\n    prefixSig: string;\n    sbytes: string;\n  }> {\n    throw new Error(\"Cannot sign\");\n  }\n}\n\nconst Tezos = new TezosToolkit(NETWORK_ADDRESS);\n\nconst wallet = new BeaconWallet(options);\n\n\nTezos.setWalletProvider(wallet);\n//Tezos.setSignerProvider(new LambdaViewSigner());\n\nexport default function useBeacon() {\n  const [pkh, setUserPkh] = useState<string>();\n\n  const connect = useCallback(async () => {\n    await wallet.requestPermissions({\n      scopes: [\n             PermissionScope.OPERATION_REQUEST,\n             PermissionScope.SIGN,\n             PermissionScope.THRESHOLD,\n           ]\n    });\n\n    // {\n    //   network: { type: NetworkType.DELPHINET },\n    //   scopes: [\n    //     PermissionScope.OPERATION_REQUEST,\n    //     PermissionScope.SIGN,\n    //     PermissionScope.THRESHOLD,\n    //   ],\n    // }\n\n    const _pkh = await wallet.getPKH();\n    setUserPkh(_pkh);\n  }, []);\n\n const disconnect = useCallback(async() => {\n    await wallet.client.removeAllAccounts();\n }, []);\n\n\n  return { connect, disconnect, pkh, Tezos };\n}\n","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractStorageInfo.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractAddressInput.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractBalanceInfo.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractTransferForm.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondsList.tsx",["117","118"],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/hooks/usePendingPromise.ts",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/config/index.js",[],["119","120"],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Preloader.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondsModal.tsx",["121","122","123"],"import React, { useEffect, useState } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport './BondsModal.css';\n\n\n\nexport function BondModal({active,setActive,children}) {\n    return (\n       <div className={active ? 'modal active' : 'modal'} onClick={()=> setActive(false)}>\n           <div className={active ? 'modal__content active' : 'modal__content'} onClick={e => e.stopPropagation()}>\n            {children}\n           </div>\n       </div>\n               )\n\n}","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondItem.tsx",["124","125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":6,"column":10,"nodeType":"132","messageId":"133","endLine":6,"endColumn":14},{"ruleId":"130","severity":1,"message":"134","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"135","line":1,"column":28,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"136","line":2,"column":18,"nodeType":"132","messageId":"133","endLine":2,"endColumn":24},{"ruleId":"130","severity":1,"message":"134","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"135","line":1,"column":28,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"137","line":2,"column":18,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"130","severity":1,"message":"136","line":2,"column":24,"nodeType":"132","messageId":"133","endLine":2,"endColumn":30},{"ruleId":"130","severity":1,"message":"138","line":2,"column":32,"nodeType":"132","messageId":"133","endLine":2,"endColumn":36},{"ruleId":"130","severity":1,"message":"139","line":2,"column":38,"nodeType":"132","messageId":"133","endLine":2,"endColumn":42},{"ruleId":"130","severity":1,"message":"140","line":2,"column":44,"nodeType":"132","messageId":"133","endLine":2,"endColumn":51},{"ruleId":"141","severity":1,"message":"142","line":58,"column":90,"nodeType":"143","endLine":58,"endColumn":105},{"ruleId":"130","severity":1,"message":"135","line":1,"column":23,"nodeType":"132","messageId":"133","endLine":1,"endColumn":31},{"ruleId":"130","severity":1,"message":"144","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":21},{"ruleId":"130","severity":1,"message":"145","line":5,"column":23,"nodeType":"132","messageId":"133","endLine":5,"endColumn":38},{"ruleId":"130","severity":1,"message":"146","line":7,"column":28,"nodeType":"132","messageId":"133","endLine":7,"endColumn":53},{"ruleId":"130","severity":1,"message":"147","line":7,"column":92,"nodeType":"132","messageId":"133","endLine":7,"endColumn":117},{"ruleId":"148","severity":1,"message":"149","line":35,"column":21,"nodeType":"150","endLine":35,"endColumn":42},{"ruleId":"130","severity":1,"message":"144","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":21},{"ruleId":"130","severity":1,"message":"151","line":7,"column":26,"nodeType":"132","messageId":"133","endLine":7,"endColumn":47},{"ruleId":"130","severity":1,"message":"152","line":7,"column":49,"nodeType":"132","messageId":"133","endLine":7,"endColumn":61},{"ruleId":"130","severity":1,"message":"153","line":21,"column":7,"nodeType":"132","messageId":"133","endLine":21,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":16,"column":32,"nodeType":"150","messageId":"156","endLine":16,"endColumn":33,"fix":"157"},{"ruleId":"158","severity":1,"message":"159","line":70,"column":47,"nodeType":"143","endLine":70,"endColumn":60},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"134","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"135","line":1,"column":28,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"160","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":13},{"ruleId":"130","severity":1,"message":"134","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"135","line":1,"column":28,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"@typescript-eslint/no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'VStack' is defined but never used.","'Link' is defined but never used.","'Text' is defined but never used.","'Code' is defined but never used.","'Divider' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'NetworkType' is defined but never used.","'PermissionScope' is defined but never used.","'TREASURY_CONTRACT_ADDRESS' is defined but never used.","'LP_TOKEN_CONTRACT_ADDRESS' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'myAddress' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","MemberExpression","'BOND_CONTRACT_ADDRESS' is defined but never used.","'NETWORK_TYPE' is defined but never used.","'LambdaViewSigner' is defined but never used.","dot-location","Expected dot to be on same line as property.","expectedDotBeforeProperty",{"range":"163","text":"164"},"react/jsx-no-duplicate-props","No duplicate props allowed","'act' is defined but never used.","no-global-assign","no-unsafe-negation",[625,635],"\n        ."]