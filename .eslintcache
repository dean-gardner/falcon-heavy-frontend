[{"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/index.tsx":"1","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/reportWebVitals.ts":"2","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/serviceWorker.ts":"3","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/App.tsx":"4","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/ColorModeSwitcher.tsx":"5","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Layout/Layout.tsx":"6","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Dashboard.tsx":"7","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Bonds/BuyBond.tsx":"8","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/utils.ts":"9","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Bonds/hooks.ts":"10","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/hooks/useBeacon.ts":"11","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractStorageInfo.tsx":"12","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractAddressInput.tsx":"13","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractBalanceInfo.tsx":"14","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractTransferForm.tsx":"15","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondsList.tsx":"16","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/hooks/usePendingPromise.ts":"17","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/config/index.js":"18","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Preloader.tsx":"19","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondsModal.tsx":"20","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondItem.tsx":"21"},{"size":837,"mtime":1645374163930,"results":"22","hashOfConfig":"23"},{"size":416,"mtime":1645374163930,"results":"24","hashOfConfig":"23"},{"size":5258,"mtime":1645374163930,"results":"25","hashOfConfig":"23"},{"size":537,"mtime":1645374163927,"results":"26","hashOfConfig":"23"},{"size":743,"mtime":1645374163927,"results":"27","hashOfConfig":"23"},{"size":1965,"mtime":1645374163929,"results":"28","hashOfConfig":"23"},{"size":1936,"mtime":1645374163929,"results":"29","hashOfConfig":"23"},{"size":2897,"mtime":1645388929583,"results":"30","hashOfConfig":"23"},{"size":250,"mtime":1645374163931,"results":"31","hashOfConfig":"23"},{"size":2267,"mtime":1645374163928,"results":"32","hashOfConfig":"23"},{"size":2019,"mtime":1645374163929,"results":"33","hashOfConfig":"23"},{"size":917,"mtime":1645374163928,"results":"34","hashOfConfig":"23"},{"size":458,"mtime":1645374163928,"results":"35","hashOfConfig":"23"},{"size":1010,"mtime":1645374163928,"results":"36","hashOfConfig":"23"},{"size":1902,"mtime":1645374163928,"results":"37","hashOfConfig":"23"},{"size":4251,"mtime":1645548295311,"results":"38","hashOfConfig":"23"},{"size":936,"mtime":1645374163929,"results":"39","hashOfConfig":"23"},{"size":881,"mtime":1645548144524,"results":"40","hashOfConfig":"23"},{"size":304,"mtime":1645374163929,"results":"41","hashOfConfig":"23"},{"size":477,"mtime":1645547686975,"results":"42","hashOfConfig":"23"},{"size":654,"mtime":1645540462862,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"kxn1u3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/index.tsx",[],["97","98"],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/reportWebVitals.ts",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/serviceWorker.ts",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/App.tsx",["99"],"import * as React from \"react\";\nimport { ChakraProvider, Box, VStack, Grid, theme } from \"@chakra-ui/react\";\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\nimport { Layout } from \"./components/Layout/Layout\";\n\nimport { Logo } from \"./Logo\";\n\nexport const App = () => (\n  <ChakraProvider theme={theme}>\n    <Box fontSize=\"xl\">\n      <Grid minH=\"100vh\" p={3}>\n        <ColorModeSwitcher justifySelf=\"flex-end\" />\n        <VStack spacing={8}>\n          <Layout />\n        </VStack>\n      </Grid>\n    </Box>\n  </ChakraProvider>\n);\n","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/ColorModeSwitcher.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Layout/Layout.tsx",["100","101"],"import React, { useEffect, useState } from \"react\";\nimport { Dashboard } from \"../Dashboard\";\nimport {BuyBond} from \"../Bonds/BuyBond\";\n\nimport {\n  BrowserRouter as Router,\n  Routes ,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './Layout.css';\n\n\nexport function Layout() {\n\n  \n  return (\n    <>\n    <Router>\n       <link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\n  integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\n/>\n\n    <div className=\"main-wrapper\">\n      {/* Header */}\n      <div className=\"header\">\n        <div className=\"header-left\">\n          <a href=\"index.html\" className=\"logo\">\n            <img src=\"assets/img/logo.png\" width={35} height={35} alt=\"\" />{\" \"}\n            <span>Falcon Heavy</span>\n          </a>\n        </div>\n      </div>\n      {/* /Header */}\n\n      {/* Sidebar */}\n      <div className=\"sidebar\" id=\"sidebar\">\n        <div className=\"sidebar-inner slimscroll\">\n          <div id=\"sidebar-menu\" className=\"sidebar-menu\">\n            <ul>\n              <li>\n                <Link to=\"/\">Dashboard</Link>\n              </li>\n              <li >\n                <Link to=\"/buy-bond\">Buy bond</Link>\n              </li>\n          \n            </ul>\n          </div>\n        </div>\n      </div>\n      {/* /Sidebar */}\n\n      {/* Content */}\n      <div className=\"page-wrapper exchange-wrapper bg-wrapper\">\n        <div className=\"content\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n            <Routes >\n                <Route path=\"/buy-bond\"  element={<BuyBond/>}>\n                </Route>\n                <Route path=\"/users\">\n                  <>users</>\n\n                </Route>\n                <Route path=\"/\" element={<Dashboard/>}>\n                </Route>\n           </Routes >\n            \n            </div>\n          </div>\n        </div>\n     \n      </div>\n    </div>\n    </Router>\n  </>\n );\n}\n","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Dashboard.tsx",["102"],"import React, { useEffect, useState } from \"react\";\nimport { Button, VStack, Text, Code, Divider } from \"@chakra-ui/react\";\n\nimport useBeacon from \"../hooks/useBeacon\";\nimport { ContractAddressInput } from \"./ContractAddressInput\";\nimport { ContractStorageInfo } from \"./ContractStorageInfo\";\nimport { validateContractAddress } from \"../utils\";\nimport { ContractBalanceInfo } from \"./ContractBalanceInfo\";\nimport { ContractTransferForm } from \"./ContractTransferForm\";\n\nconst AccountInfo: React.FC<{\n  pkh: string;\n}> = ({ pkh }) => (\n  <Text>\n    Your account: <Code>{pkh}</Code>\n  </Text>\n);\n\nexport function Dashboard() {\n  const { connect, pkh, disconnect } = useBeacon();\n  const [contractAddress, setContractAddress] = useState<string>(\n    \"KT19psPK1PZNMkaq8TuU1D77u7ipyFVQ3BmE\"\n  );\n  const [contractValid, setContractValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    setContractValid(validateContractAddress(contractAddress));\n  }, [contractAddress]);\n\n  \n  return (\n    <div className=\"text-center\">\n      {!pkh ? (\n        <Button className=\"btn btn-primary submit-btn\" onClick={connect}>\n          Connect wallet\n        </Button>\n      ) : (\n        <>\n          <Button className=\"btn btn-primary submit-btn\" variant=\"outline\" onClick={disconnect}>\n            Disconnect wallet\n          </Button>\n\n          <AccountInfo pkh={pkh} />\n          <Divider />\n          <ContractAddressInput\n            value={contractAddress}\n            onChange={(e) => setContractAddress(e.target.value)}\n            isInvalid={!contractValid}\n          />\n          {contractValid && contractAddress && (\n            <>\n              <ContractStorageInfo contractAddress={contractAddress} />\n              <ContractBalanceInfo contractAddress={contractAddress} pkh={pkh} />\n              <ContractTransferForm contractAddress={contractAddress} pkh={pkh} />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Bonds/BuyBond.tsx",["103","104","105","106","107","108","109","110"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Link, VStack, Text, Code, Divider } from \"@chakra-ui/react\";\nimport './BuyBond.css';\nimport useBonds from './hooks';\nimport { BondsList } from \"../BondsList/BondsList\";\n\nexport function BuyBond() {\n  const { buyBond } = useBonds();\n\n  return (\n    <>\n       <div className=\"content\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n\t\t\t\t\t\t<div className=\"crypto-exchange buy-form\">\n\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t<div className=\"card-title text-center\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"text-primary\">Bond: PLENTY-QUIPU LP</h4>\n\t\t\t\t\t\t\t\t</div>\n\n                <div>\n                <div className=\"row\">\n                      <div className=\"col-lg-6 text-center card-title\">\n                        <h4  className=\"text-primary\">Bond Price</h4>\n                        <h2 className=\"text-primary\">$3.03</h2>\n                      </div>\n                      <div className=\"col-lg-6 text-center card-title\">\n                        <h4  className=\"text-primary\">Market Price</h4>\n                        <h2 className=\"text-primary\">$3.01</h2>\n                      </div>\n                    </div>\n                    \n                </div>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n               \n\n\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-12 \">\n\t\t\t\t\t\t\t\t\t\t<div className=\"exchange-form\">\n\t\t\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-row \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-12 offset-lg-3\">\n                          <Button className=\"btn btn-primary btn-lg btn-block\" onClick={buyBond}>\n                            Buy\n                          </Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n                <BondsList />\n\n              <div className=\"row\">\n              <div className=\"col-lg-12 details-contatiner\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-6 \">Your Balance</div>\n                      <div className=\"col-lg-6 text-right\">0 PLENTY-QUIPU LP\n                        <div><a href='https://www.plentydefi.com/liquidity?tokenB=QUIPU' target=\"_blank\" className='gray-link'>Buy PLENTY-QUIPU LP token</a></div>\n                      </div>\n\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6 \">Duration</div>\n                      <div className=\"col-lg-6 text-right\">5 days</div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6 \">ROI</div>\n                      <div className=\"col-lg-6 text-right\">3%</div>\n                    </div>\n                    \n                  </div>\n              </div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n                    </div>\n                </div>\n            </div>\n    </>\n  );\n}\n","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/utils.ts",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Bonds/hooks.ts",["111","112","113","114","115","116"],"import { useCallback, useState } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\n\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { NetworkType, PermissionScope } from \"@airgap/beacon-sdk\";\n  \n  import {NETWORK_ADDRESS, TREASURY_CONTRACT_ADDRESS, BOND_CONTRACT_ADDRESS, NETWORK_TYPE, LP_TOKEN_CONTRACT_ADDRESS, LP_TOKEN}\n   from '../../config/index';\n\nconst options = {\n  name: \"Plenty Bonds Marketplace: Falcon Heavy\",\n  network: {\n    type: NETWORK_TYPE,\n  }\n};\n\nexport default function useBonds() {\n  let myAddress: string | undefined;\n\n  const buyBond = useCallback(async () => {\n      // alert('Waiting for back-end');\n      \n      const bondPrice = 1;\n      const LpToken = LP_TOKEN;\n      const LpTokenAmount = 1000;\n      const Slippage = 0.5;\n\n      const Tezos = new TezosToolkit(NETWORK_ADDRESS);\n      const wallet = new BeaconWallet(options);\n\n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount && false) {\n\n        console.log(\"Already connected:\", activeAccount.address);\n        myAddress = activeAccount.address;\n        //const permissions = await wallet.client.requestPermissions(options);\n\n      } else {\n        await wallet.requestPermissions(options);\n        myAddress = await wallet.getPKH();\n        console.log(\"New connection:\", myAddress);\n      }\n\n      Tezos.setWalletProvider(wallet);\n\n      // Tezos.wallet.at(LP_TOKEN_CONTRACT_ADDRESS).then(contract => {\n      //   return contract.methods.approve(TREASURY_CONTRACT_ADDRESS, LpTokenAmount).send({from: myAddress});\n      // } );\n\n      Tezos.wallet.at(BOND_CONTRACT_ADDRESS).then(contract => {\n        // bond_price_requested_in_usd: bondPrice, lp_token : LpToken, \n        //   lp_token_amount: LpTokenAmount, slippage: Slippage\n        return contract.methods.order(bondPrice, LpTokenAmount, LpToken, Slippage).send({from: myAddress});\n          } );\n\n\n      // const batch = await Tezos.wallet.batch()\n      //   .withContractCall(contract.methods.interact('defaul'))\n      //   .withContractCall(contract.methods.wait([['unit']]));\n\n      // const batchOp = await batch.send();\n      // console.log('Operation hash:', batchOp.hash);\n      // await batchOp.confirmation();\n  }, []);\n\n\n\n  return { buyBond };\n}\n","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/hooks/useBeacon.ts",["117","118","119","120"],"import { useCallback, useState } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\n\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { NetworkType, PermissionScope } from \"@airgap/beacon-sdk\";\n\nimport {NETWORK_ADDRESS, BOND_CONTRACT_ADDRESS, NETWORK_TYPE} from '../config/index';\n\nconst options = {\n  name: \"Plenty Bonds Marketplace: Falcon Heavy\",\n  // iconUrl: \"https://tezostaquito.io/img/favicon.png\",\n  // eventHandlers: {\n  //   PERMISSION_REQUEST_SUCCESS: {\n  //     handler: async (data: any) => {\n  //       console.log(\"permission data\", data);\n  //     },\n  //   },\n  // },\n};\n\nclass LambdaViewSigner {\n  async publicKeyHash() {\n    return \"tz1fVQangAfb9J1hRRMP2bSB6LvASD6KpY8A\";\n  }\n\n  async publicKey() {\n    return \"edpkvWbk81uh1DEvdWKR4g1bjyTGhdu1mDvznPUFE2zDwNsLXrEb9K\";\n  }\n\n  async secretKey(): Promise<string> {\n    throw new Error(\"Secret key cannot be exposed\");\n  }\n\n  async sign(): Promise<{\n    bytes: string;\n    sig: string;\n    prefixSig: string;\n    sbytes: string;\n  }> {\n    throw new Error(\"Cannot sign\");\n  }\n}\n\nconst Tezos = new TezosToolkit(NETWORK_ADDRESS);\n\nconst wallet = new BeaconWallet(options);\n\n\nTezos.setWalletProvider(wallet);\n//Tezos.setSignerProvider(new LambdaViewSigner());\n\nexport default function useBeacon() {\n  const [pkh, setUserPkh] = useState<string>();\n\n  const connect = useCallback(async () => {\n    await wallet.requestPermissions({\n      scopes: [\n             PermissionScope.OPERATION_REQUEST,\n             PermissionScope.SIGN,\n             PermissionScope.THRESHOLD,\n           ]\n    });\n\n    // {\n    //   network: { type: NetworkType.DELPHINET },\n    //   scopes: [\n    //     PermissionScope.OPERATION_REQUEST,\n    //     PermissionScope.SIGN,\n    //     PermissionScope.THRESHOLD,\n    //   ],\n    // }\n\n    const _pkh = await wallet.getPKH();\n    setUserPkh(_pkh);\n  }, []);\n\n const disconnect = useCallback(async() => {\n    await wallet.client.removeAllAccounts();\n }, []);\n\n\n  return { connect, disconnect, pkh, Tezos };\n}\n","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractStorageInfo.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractAddressInput.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractBalanceInfo.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/ContractTransferForm.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondsList.tsx",["121","122"],"import React,{useEffect,useState} from \"react\";\nimport axios from 'axios';\nimport { BondItem } from \"./BondItem\";\nimport {TezosToolkit} from '@taquito/taquito'\nimport './BondsList.css';\nimport {BondModal} from './BondsModal';\n\n\nexport function  BondsList() {\n    const [modalActive,setModalActive]  = useState(false);\n    const [keys,setKeys] = useState([]);\n    const [activeItem,setActiveItem] = useState({} as any);\n    const [tokenAmount, setTokenAmount] = useState(0);\n    const getKeys = async (bigMapId : any = 153491) => {\n       // const endPoint = 'https://api.hangzhou.tzstats.com';\n        const res = await axios.\n        get(`https://api.hangzhou2net.tzkt.io/v1/bigmaps/${bigMapId}/keys`, {\n    headers: {\n        'Access-Control-Allow-Origin': '*',\n    }\n      })\n     return res.data\n    }\n    \n    useEffect(() => {\n      //  getKeys()\n            const tezos = new TezosToolkit('https://hangzhounet.api.tez.ie');\n           tezos.contract.at('KT1AfWJCfbmpGqdSB8rfRCR4Jb1VsBLmhGCV').then(c => {\n               c.storage().then((storage: any) => {\n                const bigmapId = storage.bonds_marketplace.id.c[0]; \n                 console.log('bigmapId',bigmapId)\n                getKeys(bigmapId).then((keys) => {\n                    setKeys(keys)\n                    console.log('keys',keys);\n                    console.log('value',keys[0].value)\n                    const keysValues = keys.map((item: any) => (parseInt(item.key)) );\n                    console.log('keysValues')\n                    console.log('storage.bonds_marketplace',storage.bonds_marketplace.get(keysValues[0]));\n                    console.log('keysValues[0]',keysValues)\n                })\n               })\n           })\n    },[])\n\n\n    return (\n        <>\n        <table>\n        <tr>\n    <th>Item icons</th>\n    <th>Item name</th>\n    <th>Market price USD</th>\n    <th>ROI</th>\n    <th>Duration</th>\n            </tr>\n        { keys.map((key) =>(\n        <BondItem setActiveItem={setActiveItem} setModalActive={setModalActive} item={key.value}/>\n    ))}\n            </table>\n            <BondModal  active={modalActive} setActive={setModalActive}>\n                {console.log('active Item',activeItem)}\n                <div>\n                    <div>TOKENS {activeItem.pair1_token_code} {activeItem.pair2_token_code}</div>\n                    <label className=\"token__label\" for='amount'>Token amount</label>\n                    <input type='number' id='amount' onChange={\n                        (e)=>{\n                            setTokenAmount(e.target.value)\n                        }\n                        } value={tokenAmount} type='number'></input>\n                        {tokenAmount > parseInt(activeItem.max_payout) &&<span>Error</span>}\n                    <div>ROI {tokenAmount * parseInt(activeItem.ROI)}</div>\n                    <div>VESTING period {activeItem.vesting_days_period} months</div>\n                    <div>TBV {activeItem.total_bonds_purchased_price_usd}</div>\n                </div>\n                <div className=\"buttons\">\n                    <button className=\"modal__btn\">Confirm</button>\n                    <button className=\"modal__btn cancel__btn\" onClick={()=>setModalActive(false)}>Cancel</button>\n                </div>\n            </BondModal>\n            </>\n    )\n    \n}\n\n/* \n  При нажатии кнопки Бонд будет попап виндоу где будет Бонд прайс - инпут с к-вом токенов \n    модерация max_payout: \"100\"  чтоб это было  больше чем юзер получит как 110 процентов \n\n   и название токена  в паре \n    pair1_token_code: \"CO1\"\n    pair2_token_code: \"CO2\"\n\n  + Рои в процентах - сумма вознаграждения в зависимости от введеного значения в инпут\n  1 инпут - \n\n\n  --- LATER     рядом 2 поля -   к-во Пленти и к-во второго токена\n\n\n\n  Еще выводим Вестинг период (з сервера берем его)\n  Конфирм Баттон и Баттон Отмена\n  Значение TBV - Total Bonded Value  total_bonds_purchased_price_usd: \"1\"\n*/","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/hooks/usePendingPromise.ts",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/config/index.js",[],["123","124"],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/Preloader.tsx",[],"/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondsModal.tsx",["125","126","127"],"import React, { useEffect, useState } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport './BondsModal.css';\n\n\n\nexport function BondModal({active,setActive,children}) {\n    return (\n       <div className={active ? 'modal active' : 'modal'} onClick={()=> setActive(false)}>\n           <div className={active ? 'modal__content active' : 'modal__content'} onClick={e => e.stopPropagation()}>\n            {children}\n           </div>\n       </div>\n               )\n\n}","/Users/andriibilous/Documents/GitHub/falcon-heavy-frontend/src/components/BondsList/BondItem.tsx",["128","129"],"import React, { useEffect, useState } from \"react\";\nimport './BondItem.css';\n\n\n\n\nexport function BondItem({setActiveItem,setModalActive,item}) {\n\n    console.log('item',item)\n    return (\n        <tr>\n            <td>{item.icon}</td>\n            <td>{item.pair1_token_code} {item.pair2_token_code}</td>\n            <td>{item.market_price_in_usd}</td>\n            <td>{item.ROI}</td>\n            <td>{item.vesting_days_period}</td>\n            <td><button onClick={()=>{\n                setActiveItem(item);\n                setModalActive(true);\n                }} \n                className=\"bond_btn\">Bond</button></td>\n        </tr>\n               )\n\n}",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":14},{"ruleId":"134","severity":1,"message":"138","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"139","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"140","line":2,"column":18,"nodeType":"136","messageId":"137","endLine":2,"endColumn":24},{"ruleId":"134","severity":1,"message":"138","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"139","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"141","line":2,"column":18,"nodeType":"136","messageId":"137","endLine":2,"endColumn":22},{"ruleId":"134","severity":1,"message":"140","line":2,"column":24,"nodeType":"136","messageId":"137","endLine":2,"endColumn":30},{"ruleId":"134","severity":1,"message":"142","line":2,"column":32,"nodeType":"136","messageId":"137","endLine":2,"endColumn":36},{"ruleId":"134","severity":1,"message":"143","line":2,"column":38,"nodeType":"136","messageId":"137","endLine":2,"endColumn":42},{"ruleId":"134","severity":1,"message":"144","line":2,"column":44,"nodeType":"136","messageId":"137","endLine":2,"endColumn":51},{"ruleId":"145","severity":1,"message":"146","line":60,"column":90,"nodeType":"147","endLine":60,"endColumn":105},{"ruleId":"134","severity":1,"message":"139","line":1,"column":23,"nodeType":"136","messageId":"137","endLine":1,"endColumn":31},{"ruleId":"134","severity":1,"message":"148","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":21},{"ruleId":"134","severity":1,"message":"149","line":5,"column":23,"nodeType":"136","messageId":"137","endLine":5,"endColumn":38},{"ruleId":"134","severity":1,"message":"150","line":7,"column":28,"nodeType":"136","messageId":"137","endLine":7,"endColumn":53},{"ruleId":"134","severity":1,"message":"151","line":7,"column":92,"nodeType":"136","messageId":"137","endLine":7,"endColumn":117},{"ruleId":"152","severity":1,"message":"153","line":35,"column":21,"nodeType":"154","endLine":35,"endColumn":42},{"ruleId":"134","severity":1,"message":"148","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":21},{"ruleId":"134","severity":1,"message":"155","line":7,"column":26,"nodeType":"136","messageId":"137","endLine":7,"endColumn":47},{"ruleId":"134","severity":1,"message":"156","line":7,"column":49,"nodeType":"136","messageId":"137","endLine":7,"endColumn":61},{"ruleId":"134","severity":1,"message":"157","line":21,"column":7,"nodeType":"136","messageId":"137","endLine":21,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":16,"column":32,"nodeType":"154","messageId":"160","endLine":16,"endColumn":33,"fix":"161"},{"ruleId":"162","severity":1,"message":"163","line":69,"column":47,"nodeType":"147","endLine":69,"endColumn":60},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"138","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"139","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"164","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"138","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"139","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"@typescript-eslint/no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'VStack' is defined but never used.","'Link' is defined but never used.","'Text' is defined but never used.","'Code' is defined but never used.","'Divider' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'NetworkType' is defined but never used.","'PermissionScope' is defined but never used.","'TREASURY_CONTRACT_ADDRESS' is defined but never used.","'LP_TOKEN_CONTRACT_ADDRESS' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'myAddress' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","MemberExpression","'BOND_CONTRACT_ADDRESS' is defined but never used.","'NETWORK_TYPE' is defined but never used.","'LambdaViewSigner' is defined but never used.","dot-location","Expected dot to be on same line as property.","expectedDotBeforeProperty",{"range":"167","text":"168"},"react/jsx-no-duplicate-props","No duplicate props allowed","'act' is defined but never used.","no-global-assign","no-unsafe-negation",[625,635],"\n        ."]