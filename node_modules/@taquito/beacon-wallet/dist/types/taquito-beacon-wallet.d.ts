import { DAppClient, DAppClientOptions, RequestPermissionInput, PermissionScope } from '@airgap/beacon-sdk';
import { WalletDelegateParams, WalletOriginateParams, WalletProvider, WalletTransferParams } from '@taquito/taquito';
export declare class BeaconWalletNotInitialized implements Error {
    name: string;
    message: string;
}
export declare class MissingRequiredScopes implements Error {
    requiredScopes: PermissionScope[];
    name: string;
    message: string;
    constructor(requiredScopes: PermissionScope[]);
}
export declare class BeaconWallet implements WalletProvider {
    client: DAppClient;
    private permissions?;
    constructor(options: DAppClientOptions);
    private getPermissionOrFail;
    private validateRequiredScopesOrFail;
    requestPermissions(request?: RequestPermissionInput): Promise<void>;
    private removeFeeAndLimit;
    getPKH(): Promise<string>;
    mapTransferParamsToWalletParams(params: WalletTransferParams): Promise<import("@taquito/taquito/dist/types/operations/types").RPCTransferOperation>;
    mapOriginateParamsToWalletParams(params: WalletOriginateParams): Promise<import("@taquito/taquito/dist/types/operations/types").RPCOriginationOperation>;
    mapDelegateParamsToWalletParams(params: WalletDelegateParams): Promise<import("@taquito/taquito/dist/types/operations/types").RPCDelegateOperation>;
    sendOperations(params: any[]): Promise<string>;
}
