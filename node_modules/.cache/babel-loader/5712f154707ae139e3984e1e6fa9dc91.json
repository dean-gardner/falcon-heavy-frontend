{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { chakra } from \"@chakra-ui/system\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nvar MotionSvg = motion.custom(chakra.svg);\n\nvar CheckIcon = props => /*#__PURE__*/React.createElement(MotionSvg, _extends({\n  width: \"1.2em\",\n  viewBox: \"0 0 12 10\",\n  variants: {\n    unchecked: {\n      opacity: 0,\n      strokeDashoffset: 16\n    },\n    checked: {\n      opacity: 1,\n      strokeDashoffset: 0,\n      transition: {\n        duration: 0.2\n      }\n    }\n  },\n  style: {\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeDasharray: 16\n  }\n}, props), /*#__PURE__*/React.createElement(\"polyline\", {\n  points: \"1.5 6 4.5 9 10.5 1\"\n}));\n\nvar IndeterminateIcon = props => {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = _ref => {\n  var {\n    open,\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\n\n\nexport var CheckboxIcon = props => {\n  var {\n    isIndeterminate,\n    isChecked\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"isIndeterminate\", \"isChecked\"]);\n\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, isIndeterminate ? /*#__PURE__*/React.createElement(IndeterminateIcon, rest) : /*#__PURE__*/React.createElement(CheckIcon, rest));\n};","map":{"version":3,"mappings":"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","names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","chakra","AnimatePresence","motion","React","MotionSvg","custom","svg","CheckIcon","props","createElement","width","viewBox","variants","unchecked","opacity","strokeDashoffset","checked","transition","duration","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","_ref","open","children","initial","div","scale","animate","exit","display","alignItems","justifyContent","height","CheckboxIcon","isIndeterminate","isChecked","rest"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/checkbox/dist/esm/checkbox-icon.js"],"sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { chakra } from \"@chakra-ui/system\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nvar MotionSvg = motion.custom(chakra.svg);\n\nvar CheckIcon = props => /*#__PURE__*/React.createElement(MotionSvg, _extends({\n  width: \"1.2em\",\n  viewBox: \"0 0 12 10\",\n  variants: {\n    unchecked: {\n      opacity: 0,\n      strokeDashoffset: 16\n    },\n    checked: {\n      opacity: 1,\n      strokeDashoffset: 0,\n      transition: {\n        duration: 0.2\n      }\n    }\n  },\n  style: {\n    fill: \"none\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    strokeDasharray: 16\n  }\n}, props), /*#__PURE__*/React.createElement(\"polyline\", {\n  points: \"1.5 6 4.5 9 10.5 1\"\n}));\n\nvar IndeterminateIcon = props => {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = (_ref) => {\n  var {\n    open,\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nexport var CheckboxIcon = props => {\n  var {\n    isIndeterminate,\n    isChecked\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"isIndeterminate\", \"isChecked\"]);\n\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, isIndeterminate ? /*#__PURE__*/React.createElement(IndeterminateIcon, rest) : /*#__PURE__*/React.createElement(CheckIcon, rest));\n};\n//# sourceMappingURL=checkbox-icon.js.map"]},"metadata":{},"sourceType":"module"}