{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n  var hasSeed = false;\n\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source) {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nvar ScanOperator = /*@__PURE__*/function () {\n  function ScanOperator(accumulator, seed, hasSeed) {\n    if (hasSeed === void 0) {\n      hasSeed = false;\n    }\n\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.hasSeed = hasSeed;\n  }\n\n  ScanOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  };\n\n  return ScanOperator;\n}();\n\nvar ScanSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ScanSubscriber, _super);\n\n  function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.accumulator = accumulator;\n    _this._seed = _seed;\n    _this.hasSeed = hasSeed;\n    _this.index = 0;\n    return _this;\n  }\n\n  Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n    get: function () {\n      return this._seed;\n    },\n    set: function (value) {\n      this.hasSeed = true;\n      this._seed = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ScanSubscriber.prototype._next = function (value) {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  };\n\n  ScanSubscriber.prototype._tryNext = function (value) {\n    var index = this.index++;\n    var result;\n\n    try {\n      result = this.accumulator(this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n\n    this.seed = result;\n    this.destination.next(result);\n  };\n\n  return ScanSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":"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","names":["tslib_1","Subscriber","scan","accumulator","seed","hasSeed","arguments","length","scanOperatorFunction","source","lift","ScanOperator","prototype","call","subscriber","subscribe","ScanSubscriber","_super","__extends","destination","_seed","_this","index","Object","defineProperty","get","set","value","enumerable","configurable","_next","next","_tryNext","result","err","error"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/scan.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n    var hasSeed = false;\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nvar ScanOperator = /*@__PURE__*/ (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) {\n            hasSeed = false;\n        }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\nvar ScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber));\n//# sourceMappingURL=scan.js.map\n"]},"metadata":{},"sourceType":"module"}