{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useBoolean, useDisclosure, useFocusOnHide, useFocusOnShow, useIds, useOutsideClick } from \"@chakra-ui/hooks\";\nimport { usePopper } from \"@chakra-ui/popper\";\nimport { useColorModeValue, useToken } from \"@chakra-ui/system\";\nimport { callAllHandlers, mergeRefs, mergeWith } from \"@chakra-ui/utils\";\nimport { useCallback, useEffect, useRef } from \"react\";\nvar TRIGGER = {\n  click: \"click\",\n  hover: \"hover\"\n};\nexport function usePopover(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    placement: placementProp,\n    gutter,\n    id,\n    arrowSize,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowShadowColor,\n    modifiers,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy\n  } = props;\n  var {\n    isOpen,\n    onClose,\n    onOpen,\n    onToggle\n  } = useDisclosure(props);\n  var triggerRef = useRef(null);\n  var popoverRef = useRef(null);\n  var isHoveringRef = useRef(false);\n  var [hasHeader, setHasHeader] = useBoolean();\n  var [hasBody, setHasBody] = useBoolean();\n  var [triggerId, popoverId, headerId, bodyId] = useIds(id, \"popover-trigger\", \"popover-content\", \"popover-header\", \"popover-body\");\n  var fallbackShadowColor = useColorModeValue(\"gray.200\", \"whiteAlpha.300\");\n  var shadowColor = arrowShadowColor != null ? arrowShadowColor : fallbackShadowColor;\n  var arrowColor = useToken(\"colors\", shadowColor, arrowShadowColor);\n  var popper = usePopper({\n    placement: placementProp,\n    gutter,\n    arrowSize,\n    arrowShadowColor: arrowColor,\n    modifiers\n  });\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click\n  });\n  useFocusOnShow(popoverRef, {\n    visible: isOpen,\n    focusRef: initialFocusRef,\n    shouldFocus: autoFocus && trigger === TRIGGER.click\n  });\n  useOutsideClick({\n    ref: popoverRef,\n    handler: event => {\n      var _triggerRef$current;\n\n      if (isOpen && trigger === TRIGGER.click && closeOnBlur && !((_triggerRef$current = triggerRef.current) == null ? void 0 : _triggerRef$current.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  var getPopoverProps = useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    var popoverProps = _extends({}, props, {\n      style: _extends({}, props.style, {\n        transformOrigin: popper.transformOrigin\n      }),\n      ref: mergeRefs(popoverRef, _ref),\n      children: !isLazy || isOpen ? props.children : null,\n      id: popoverId,\n      tabIndex: -1,\n      role: \"dialog\",\n      onKeyDown: callAllHandlers(props.onKeyDown, event => {\n        if (closeOnEsc && event.key === \"Escape\") {\n          onClose();\n        }\n      }),\n      onBlur: callAllHandlers(props.onBlur, event => {\n        var _event$relatedTarget, _popoverRef$current, _triggerRef$current2;\n\n        var element = (_event$relatedTarget = event.relatedTarget) != null ? _event$relatedTarget : document.activeElement;\n\n        if (isOpen && closeOnBlur && !((_popoverRef$current = popoverRef.current) == null ? void 0 : _popoverRef$current.contains(element)) && !((_triggerRef$current2 = triggerRef.current) == null ? void 0 : _triggerRef$current2.contains(element))) {\n          onClose();\n        }\n      }),\n      \"aria-labelledby\": hasHeader ? headerId : undefined,\n      \"aria-describedby\": hasBody ? bodyId : undefined\n    });\n\n    if (trigger === TRIGGER.hover) {\n      popoverProps.role = \"tooltip\";\n      popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n        isHoveringRef.current = true;\n      });\n      popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n        isHoveringRef.current = false;\n        setTimeout(onClose, closeDelay);\n      });\n    }\n\n    return popoverProps;\n  }, [isLazy, isOpen, popoverId, hasHeader, headerId, hasBody, bodyId, trigger, popper, closeOnEsc, onClose, closeDelay, closeOnBlur]);\n\n  var getPopoverPositionerProps = function getPopoverPositionerProps(props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return getPopperProps(mergeWith(props, {\n      style: {\n        visibility: isOpen ? \"visible\" : \"hidden\"\n      }\n    }), _ref);\n  };\n\n  var openTimeout = useRef();\n  var closeTimeout = useRef();\n  var getTriggerProps = useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    var triggerProps = _extends({}, props, {\n      id: triggerId,\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": popoverId\n    });\n\n    if (trigger === TRIGGER.click) {\n      triggerProps.onClick = callAllHandlers(props.onClick, onToggle);\n    }\n\n    if (trigger === TRIGGER.hover) {\n      /**\n       * Any content that shows on pointer hover should also show on keyboard focus.\n       * Consider focus and blur to be the `hover` for keyboard users.\n       *\n       * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n       */\n      triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen);\n      triggerProps.onBlur = callAllHandlers(props.onBlur, onClose);\n      /**\n       * Any content that shows on hover or focus must be dismissible.\n       * This case pressing `Escape` will dismiss the popover\n       */\n\n      triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, event => {\n        if (event.key === \"Escape\") {\n          onClose();\n        }\n      });\n      triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n        isHoveringRef.current = true;\n        openTimeout.current = window.setTimeout(onOpen, openDelay);\n      });\n      triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n        isHoveringRef.current = false;\n\n        if (openTimeout.current) {\n          clearTimeout(openTimeout.current);\n          openTimeout.current = undefined;\n        }\n\n        closeTimeout.current = window.setTimeout(() => {\n          if (isHoveringRef.current === false) {\n            onClose();\n          }\n        }, closeDelay);\n      });\n    }\n\n    return popper.getReferenceProps(triggerProps, mergeRefs(triggerRef, _ref));\n  }, [triggerId, isOpen, popoverId, trigger, popper, onToggle, onOpen, onClose, openDelay, closeDelay]);\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) clearTimeout(openTimeout.current);\n      if (closeTimeout.current) clearTimeout(closeTimeout.current);\n    };\n  }, []);\n  var {\n    getArrowProps,\n    getArrowWrapperProps,\n    getPopperProps\n  } = popper;\n\n  var onTransitionEnd = () => {\n    var _popoverRef$current2;\n\n    (_popoverRef$current2 = popoverRef.current) == null ? void 0 : _popoverRef$current2.dispatchEvent(new Event(\"transitionend\"));\n  };\n\n  return {\n    forceUpdate: popper.forceUpdate,\n    isOpen,\n    onClose,\n    headerId,\n    hasHeader,\n    setHasHeader,\n    bodyId,\n    hasBody,\n    setHasBody,\n    onTransitionEnd,\n    getArrowProps,\n    getArrowPositionerProps: getArrowWrapperProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps\n  };\n}","map":{"version":3,"mappings":"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","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useBoolean","useDisclosure","useFocusOnHide","useFocusOnShow","useIds","useOutsideClick","usePopper","useColorModeValue","useToken","callAllHandlers","mergeRefs","mergeWith","useCallback","useEffect","useRef","TRIGGER","click","hover","usePopover","props","closeOnBlur","closeOnEsc","initialFocusRef","placement","placementProp","gutter","id","arrowSize","returnFocusOnClose","autoFocus","arrowShadowColor","modifiers","trigger","openDelay","closeDelay","isLazy","isOpen","onClose","onOpen","onToggle","triggerRef","popoverRef","isHoveringRef","hasHeader","setHasHeader","hasBody","setHasBody","triggerId","popoverId","headerId","bodyId","fallbackShadowColor","shadowColor","arrowColor","popper","focusRef","visible","shouldFocus","ref","handler","event","_triggerRef$current","current","contains","getPopoverProps","_ref","popoverProps","style","transformOrigin","children","tabIndex","role","onKeyDown","onBlur","_event$relatedTarget","_popoverRef$current","_triggerRef$current2","element","relatedTarget","document","activeElement","undefined","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","getPopperProps","visibility","openTimeout","closeTimeout","getTriggerProps","triggerProps","onClick","onFocus","window","clearTimeout","getReferenceProps","getArrowProps","getArrowWrapperProps","onTransitionEnd","_popoverRef$current2","dispatchEvent","Event","forceUpdate","getArrowPositionerProps"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/popover/dist/esm/use-popover.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useBoolean, useDisclosure, useFocusOnHide, useFocusOnShow, useIds, useOutsideClick } from \"@chakra-ui/hooks\";\nimport { usePopper } from \"@chakra-ui/popper\";\nimport { useColorModeValue, useToken } from \"@chakra-ui/system\";\nimport { callAllHandlers, mergeRefs, mergeWith } from \"@chakra-ui/utils\";\nimport { useCallback, useEffect, useRef } from \"react\";\nvar TRIGGER = {\n  click: \"click\",\n  hover: \"hover\"\n};\nexport function usePopover(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    placement: placementProp,\n    gutter,\n    id,\n    arrowSize,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowShadowColor,\n    modifiers,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy\n  } = props;\n  var {\n    isOpen,\n    onClose,\n    onOpen,\n    onToggle\n  } = useDisclosure(props);\n  var triggerRef = useRef(null);\n  var popoverRef = useRef(null);\n  var isHoveringRef = useRef(false);\n  var [hasHeader, setHasHeader] = useBoolean();\n  var [hasBody, setHasBody] = useBoolean();\n  var [triggerId, popoverId, headerId, bodyId] = useIds(id, \"popover-trigger\", \"popover-content\", \"popover-header\", \"popover-body\");\n  var fallbackShadowColor = useColorModeValue(\"gray.200\", \"whiteAlpha.300\");\n  var shadowColor = arrowShadowColor != null ? arrowShadowColor : fallbackShadowColor;\n  var arrowColor = useToken(\"colors\", shadowColor, arrowShadowColor);\n  var popper = usePopper({\n    placement: placementProp,\n    gutter,\n    arrowSize,\n    arrowShadowColor: arrowColor,\n    modifiers\n  });\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click\n  });\n  useFocusOnShow(popoverRef, {\n    visible: isOpen,\n    focusRef: initialFocusRef,\n    shouldFocus: autoFocus && trigger === TRIGGER.click\n  });\n  useOutsideClick({\n    ref: popoverRef,\n    handler: event => {\n      var _triggerRef$current;\n\n      if (isOpen && trigger === TRIGGER.click && closeOnBlur && !((_triggerRef$current = triggerRef.current) == null ? void 0 : _triggerRef$current.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  var getPopoverProps = useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    var popoverProps = _extends({}, props, {\n      style: _extends({}, props.style, {\n        transformOrigin: popper.transformOrigin\n      }),\n      ref: mergeRefs(popoverRef, _ref),\n      children: !isLazy || isOpen ? props.children : null,\n      id: popoverId,\n      tabIndex: -1,\n      role: \"dialog\",\n      onKeyDown: callAllHandlers(props.onKeyDown, event => {\n        if (closeOnEsc && event.key === \"Escape\") {\n          onClose();\n        }\n      }),\n      onBlur: callAllHandlers(props.onBlur, event => {\n        var _event$relatedTarget, _popoverRef$current, _triggerRef$current2;\n\n        var element = (_event$relatedTarget = event.relatedTarget) != null ? _event$relatedTarget : document.activeElement;\n\n        if (isOpen && closeOnBlur && !((_popoverRef$current = popoverRef.current) == null ? void 0 : _popoverRef$current.contains(element)) && !((_triggerRef$current2 = triggerRef.current) == null ? void 0 : _triggerRef$current2.contains(element))) {\n          onClose();\n        }\n      }),\n      \"aria-labelledby\": hasHeader ? headerId : undefined,\n      \"aria-describedby\": hasBody ? bodyId : undefined\n    });\n\n    if (trigger === TRIGGER.hover) {\n      popoverProps.role = \"tooltip\";\n      popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n        isHoveringRef.current = true;\n      });\n      popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n        isHoveringRef.current = false;\n        setTimeout(onClose, closeDelay);\n      });\n    }\n\n    return popoverProps;\n  }, [isLazy, isOpen, popoverId, hasHeader, headerId, hasBody, bodyId, trigger, popper, closeOnEsc, onClose, closeDelay, closeOnBlur]);\n\n  var getPopoverPositionerProps = function getPopoverPositionerProps(props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return getPopperProps(mergeWith(props, {\n      style: {\n        visibility: isOpen ? \"visible\" : \"hidden\"\n      }\n    }), _ref);\n  };\n\n  var openTimeout = useRef();\n  var closeTimeout = useRef();\n  var getTriggerProps = useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    var triggerProps = _extends({}, props, {\n      id: triggerId,\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": popoverId\n    });\n\n    if (trigger === TRIGGER.click) {\n      triggerProps.onClick = callAllHandlers(props.onClick, onToggle);\n    }\n\n    if (trigger === TRIGGER.hover) {\n      /**\n       * Any content that shows on pointer hover should also show on keyboard focus.\n       * Consider focus and blur to be the `hover` for keyboard users.\n       *\n       * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n       */\n      triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen);\n      triggerProps.onBlur = callAllHandlers(props.onBlur, onClose);\n      /**\n       * Any content that shows on hover or focus must be dismissible.\n       * This case pressing `Escape` will dismiss the popover\n       */\n\n      triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, event => {\n        if (event.key === \"Escape\") {\n          onClose();\n        }\n      });\n      triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n        isHoveringRef.current = true;\n        openTimeout.current = window.setTimeout(onOpen, openDelay);\n      });\n      triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n        isHoveringRef.current = false;\n\n        if (openTimeout.current) {\n          clearTimeout(openTimeout.current);\n          openTimeout.current = undefined;\n        }\n\n        closeTimeout.current = window.setTimeout(() => {\n          if (isHoveringRef.current === false) {\n            onClose();\n          }\n        }, closeDelay);\n      });\n    }\n\n    return popper.getReferenceProps(triggerProps, mergeRefs(triggerRef, _ref));\n  }, [triggerId, isOpen, popoverId, trigger, popper, onToggle, onOpen, onClose, openDelay, closeDelay]);\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) clearTimeout(openTimeout.current);\n      if (closeTimeout.current) clearTimeout(closeTimeout.current);\n    };\n  }, []);\n  var {\n    getArrowProps,\n    getArrowWrapperProps,\n    getPopperProps\n  } = popper;\n\n  var onTransitionEnd = () => {\n    var _popoverRef$current2;\n\n    (_popoverRef$current2 = popoverRef.current) == null ? void 0 : _popoverRef$current2.dispatchEvent(new Event(\"transitionend\"));\n  };\n\n  return {\n    forceUpdate: popper.forceUpdate,\n    isOpen,\n    onClose,\n    headerId,\n    hasHeader,\n    setHasHeader,\n    bodyId,\n    hasBody,\n    setHasBody,\n    onTransitionEnd,\n    getArrowProps,\n    getArrowPositionerProps: getArrowWrapperProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps\n  };\n}\n//# sourceMappingURL=use-popover.js.map"]},"metadata":{},"sourceType":"module"}