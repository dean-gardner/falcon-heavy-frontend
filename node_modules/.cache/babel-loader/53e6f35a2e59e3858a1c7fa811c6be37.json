{"ast":null,"code":"/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\nexport function elementAt(index, defaultValue) {\n  if (index < 0) {\n    throw new ArgumentOutOfRangeError();\n  }\n\n  var hasDefaultValue = arguments.length >= 2;\n  return function (source) {\n    return source.pipe(filter(function (v, i) {\n      return i === index;\n    }), take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () {\n      return new ArgumentOutOfRangeError();\n    }));\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,uBAAT,QAAwC,iCAAxC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,YAA1B,EAAwC;AAC3C,MAAID,KAAK,GAAG,CAAZ,EAAe;AACX,UAAM,IAAIN,uBAAJ,EAAN;AACH;;AACD,MAAIQ,eAAe,GAAGC,SAAS,CAACC,MAAV,IAAoB,CAA1C;AACA,SAAO,UAAUC,MAAV,EAAkB;AACrB,WAAOA,MAAM,CAACC,IAAP,CAAYX,MAAM,CAAC,UAAUY,CAAV,EAAaC,CAAb,EAAgB;AAAE,aAAOA,CAAC,KAAKR,KAAb;AAAqB,KAAxC,CAAlB,EAA6DF,IAAI,CAAC,CAAD,CAAjE,EAAsEI,eAAe,GACtFL,cAAc,CAACI,YAAD,CADwE,GAEtFL,YAAY,CAAC,YAAY;AAAE,aAAO,IAAIF,uBAAJ,EAAP;AAAuC,KAAtD,CAFX,CAAP;AAGH,GAJD;AAKH","names":["ArgumentOutOfRangeError","filter","throwIfEmpty","defaultIfEmpty","take","elementAt","index","defaultValue","hasDefaultValue","arguments","length","source","pipe","v","i"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/elementAt.js"],"sourcesContent":["/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\nexport function elementAt(index, defaultValue) {\n    if (index < 0) {\n        throw new ArgumentOutOfRangeError();\n    }\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) {\n        return source.pipe(filter(function (v, i) { return i === index; }), take(1), hasDefaultValue\n            ? defaultIfEmpty(defaultValue)\n            : throwIfEmpty(function () { return new ArgumentOutOfRangeError(); }));\n    };\n}\n//# sourceMappingURL=elementAt.js.map\n"]},"metadata":{},"sourceType":"module"}