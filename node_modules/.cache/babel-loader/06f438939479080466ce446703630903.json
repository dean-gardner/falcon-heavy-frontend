{"ast":null,"code":"import { createParser, system } from \"@styled-system/core\";\n/**\n * The parser configuration for common border properties\n */\n\nvar config = {\n  border: {\n    property: \"border\",\n    scale: \"borders\"\n  },\n  borderWidth: {\n    property: \"borderWidth\",\n    scale: \"borderWidths\"\n  },\n  borderStyle: {\n    property: \"borderStyle\",\n    scale: \"borderStyles\"\n  },\n  borderColor: {\n    property: \"borderColor\",\n    scale: \"colors\"\n  },\n  borderRadius: {\n    property: \"borderRadius\",\n    scale: \"radii\"\n  },\n  rounded: {\n    property: \"borderRadius\",\n    scale: \"radii\"\n  },\n  borderTop: {\n    property: \"borderTop\",\n    scale: \"borders\"\n  },\n  borderTopLeftRadius: {\n    property: \"borderTopLeftRadius\",\n    scale: \"radii\"\n  },\n  roundedTopLeft: {\n    property: \"borderTopLeftRadius\",\n    scale: \"radii\"\n  },\n  borderTopRightRadius: {\n    property: \"borderTopRightRadius\",\n    scale: \"radii\"\n  },\n  roundedTopRight: {\n    property: \"borderTopRightRadius\",\n    scale: \"radii\"\n  },\n  borderRight: {\n    property: \"borderRight\",\n    scale: \"borders\"\n  },\n  borderBottom: {\n    property: \"borderBottom\",\n    scale: \"borders\"\n  },\n  borderBottomLeftRadius: {\n    property: \"borderBottomLeftRadius\",\n    scale: \"radii\"\n  },\n  roundedBottomLeft: {\n    property: \"borderBottomLeftRadius\",\n    scale: \"radii\"\n  },\n  borderBottomRightRadius: {\n    property: \"borderBottomRightRadius\",\n    scale: \"radii\"\n  },\n  roundedBottomRight: {\n    property: \"borderBottomRightRadius\",\n    scale: \"radii\"\n  },\n  borderLeft: {\n    property: \"borderLeft\",\n    scale: \"borders\"\n  },\n  borderX: {\n    properties: [\"borderLeft\", \"borderRight\"],\n    scale: \"borders\"\n  },\n  borderY: {\n    properties: [\"borderTop\", \"borderBottom\"],\n    scale: \"borders\"\n  },\n  borderTopWidth: {\n    property: \"borderTopWidth\",\n    scale: \"borderWidths\"\n  },\n  borderTopColor: {\n    property: \"borderTopColor\",\n    scale: \"colors\"\n  },\n  borderTopStyle: {\n    property: \"borderTopStyle\",\n    scale: \"borderStyles\"\n  },\n  borderBottomWidth: {\n    property: \"borderBottomWidth\",\n    scale: \"borderWidths\"\n  },\n  borderBottomColor: {\n    property: \"borderBottomColor\",\n    scale: \"colors\"\n  },\n  borderBottomStyle: {\n    property: \"borderBottomStyle\",\n    scale: \"borderStyles\"\n  },\n  borderLeftWidth: {\n    property: \"borderLeftWidth\",\n    scale: \"borderWidths\"\n  },\n  borderLeftColor: {\n    property: \"borderLeftColor\",\n    scale: \"colors\"\n  },\n  borderLeftStyle: {\n    property: \"borderLeftStyle\",\n    scale: \"borderStyles\"\n  },\n  borderRightWidth: {\n    property: \"borderRightWidth\",\n    scale: \"borderWidths\"\n  },\n  borderRightColor: {\n    property: \"borderRightColor\",\n    scale: \"colors\"\n  },\n  borderRightStyle: {\n    property: \"borderRightStyle\",\n    scale: \"borderStyles\"\n  },\n  borderTopRadius: {\n    properties: [\"borderTopLeftRadius\", \"borderTopRightRadius\"],\n    scale: \"radii\"\n  },\n  roundedTop: {\n    properties: [\"borderTopLeftRadius\", \"borderTopRightRadius\"],\n    scale: \"radii\"\n  },\n  borderBottomRadius: {\n    properties: [\"borderBottomLeftRadius\", \"borderBottomRightRadius\"],\n    scale: \"radii\"\n  },\n  roundedBottom: {\n    properties: [\"borderBottomLeftRadius\", \"borderBottomRightRadius\"],\n    scale: \"radii\"\n  },\n  borderLeftRadius: {\n    properties: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n    scale: \"radii\"\n  },\n  roundedLeft: {\n    properties: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n    scale: \"radii\"\n  },\n  borderRightRadius: {\n    properties: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n    scale: \"radii\"\n  },\n  roundedRight: {\n    properties: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n    scale: \"radii\"\n  }\n};\n/**\n * The prop types for border properties listed above\n */\n\nexport var border = system(config);\nexport var borderParser = createParser(config);","map":{"version":3,"mappings":"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","names":["createParser","system","config","border","property","scale","borderWidth","borderStyle","borderColor","borderRadius","rounded","borderTop","borderTopLeftRadius","roundedTopLeft","borderTopRightRadius","roundedTopRight","borderRight","borderBottom","borderBottomLeftRadius","roundedBottomLeft","borderBottomRightRadius","roundedBottomRight","borderLeft","borderX","properties","borderY","borderTopWidth","borderTopColor","borderTopStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","borderRightWidth","borderRightColor","borderRightStyle","borderTopRadius","roundedTop","borderBottomRadius","roundedBottom","borderLeftRadius","roundedLeft","borderRightRadius","roundedRight","borderParser"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/config/border.js"],"sourcesContent":["import { createParser, system } from \"@styled-system/core\";\n\n/**\n * The parser configuration for common border properties\n */\nvar config = {\n  border: {\n    property: \"border\",\n    scale: \"borders\"\n  },\n  borderWidth: {\n    property: \"borderWidth\",\n    scale: \"borderWidths\"\n  },\n  borderStyle: {\n    property: \"borderStyle\",\n    scale: \"borderStyles\"\n  },\n  borderColor: {\n    property: \"borderColor\",\n    scale: \"colors\"\n  },\n  borderRadius: {\n    property: \"borderRadius\",\n    scale: \"radii\"\n  },\n  rounded: {\n    property: \"borderRadius\",\n    scale: \"radii\"\n  },\n  borderTop: {\n    property: \"borderTop\",\n    scale: \"borders\"\n  },\n  borderTopLeftRadius: {\n    property: \"borderTopLeftRadius\",\n    scale: \"radii\"\n  },\n  roundedTopLeft: {\n    property: \"borderTopLeftRadius\",\n    scale: \"radii\"\n  },\n  borderTopRightRadius: {\n    property: \"borderTopRightRadius\",\n    scale: \"radii\"\n  },\n  roundedTopRight: {\n    property: \"borderTopRightRadius\",\n    scale: \"radii\"\n  },\n  borderRight: {\n    property: \"borderRight\",\n    scale: \"borders\"\n  },\n  borderBottom: {\n    property: \"borderBottom\",\n    scale: \"borders\"\n  },\n  borderBottomLeftRadius: {\n    property: \"borderBottomLeftRadius\",\n    scale: \"radii\"\n  },\n  roundedBottomLeft: {\n    property: \"borderBottomLeftRadius\",\n    scale: \"radii\"\n  },\n  borderBottomRightRadius: {\n    property: \"borderBottomRightRadius\",\n    scale: \"radii\"\n  },\n  roundedBottomRight: {\n    property: \"borderBottomRightRadius\",\n    scale: \"radii\"\n  },\n  borderLeft: {\n    property: \"borderLeft\",\n    scale: \"borders\"\n  },\n  borderX: {\n    properties: [\"borderLeft\", \"borderRight\"],\n    scale: \"borders\"\n  },\n  borderY: {\n    properties: [\"borderTop\", \"borderBottom\"],\n    scale: \"borders\"\n  },\n  borderTopWidth: {\n    property: \"borderTopWidth\",\n    scale: \"borderWidths\"\n  },\n  borderTopColor: {\n    property: \"borderTopColor\",\n    scale: \"colors\"\n  },\n  borderTopStyle: {\n    property: \"borderTopStyle\",\n    scale: \"borderStyles\"\n  },\n  borderBottomWidth: {\n    property: \"borderBottomWidth\",\n    scale: \"borderWidths\"\n  },\n  borderBottomColor: {\n    property: \"borderBottomColor\",\n    scale: \"colors\"\n  },\n  borderBottomStyle: {\n    property: \"borderBottomStyle\",\n    scale: \"borderStyles\"\n  },\n  borderLeftWidth: {\n    property: \"borderLeftWidth\",\n    scale: \"borderWidths\"\n  },\n  borderLeftColor: {\n    property: \"borderLeftColor\",\n    scale: \"colors\"\n  },\n  borderLeftStyle: {\n    property: \"borderLeftStyle\",\n    scale: \"borderStyles\"\n  },\n  borderRightWidth: {\n    property: \"borderRightWidth\",\n    scale: \"borderWidths\"\n  },\n  borderRightColor: {\n    property: \"borderRightColor\",\n    scale: \"colors\"\n  },\n  borderRightStyle: {\n    property: \"borderRightStyle\",\n    scale: \"borderStyles\"\n  },\n  borderTopRadius: {\n    properties: [\"borderTopLeftRadius\", \"borderTopRightRadius\"],\n    scale: \"radii\"\n  },\n  roundedTop: {\n    properties: [\"borderTopLeftRadius\", \"borderTopRightRadius\"],\n    scale: \"radii\"\n  },\n  borderBottomRadius: {\n    properties: [\"borderBottomLeftRadius\", \"borderBottomRightRadius\"],\n    scale: \"radii\"\n  },\n  roundedBottom: {\n    properties: [\"borderBottomLeftRadius\", \"borderBottomRightRadius\"],\n    scale: \"radii\"\n  },\n  borderLeftRadius: {\n    properties: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n    scale: \"radii\"\n  },\n  roundedLeft: {\n    properties: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n    scale: \"radii\"\n  },\n  borderRightRadius: {\n    properties: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n    scale: \"radii\"\n  },\n  roundedRight: {\n    properties: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n    scale: \"radii\"\n  }\n};\n/**\n * The prop types for border properties listed above\n */\n\nexport var border = system(config);\nexport var borderParser = createParser(config);\n//# sourceMappingURL=border.js.map"]},"metadata":{},"sourceType":"module"}