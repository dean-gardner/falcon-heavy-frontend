{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n  var scheduler = async;\n  var windowCreationInterval = null;\n  var maxWindowSize = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = Number(arguments[2]);\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = Number(arguments[1]);\n  }\n\n  return function windowTimeOperatorFunction(source) {\n    return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nvar WindowTimeOperator = /*@__PURE__*/function () {\n  function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n    this.windowTimeSpan = windowTimeSpan;\n    this.windowCreationInterval = windowCreationInterval;\n    this.maxWindowSize = maxWindowSize;\n    this.scheduler = scheduler;\n  }\n\n  WindowTimeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n  };\n\n  return WindowTimeOperator;\n}();\n\nvar CountedSubject = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(CountedSubject, _super);\n\n  function CountedSubject() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._numberOfNextedValues = 0;\n    return _this;\n  }\n\n  CountedSubject.prototype.next = function (value) {\n    this._numberOfNextedValues++;\n\n    _super.prototype.next.call(this, value);\n  };\n\n  Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n    get: function () {\n      return this._numberOfNextedValues;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CountedSubject;\n}(Subject);\n\nvar WindowTimeSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WindowTimeSubscriber, _super);\n\n  function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.destination = destination;\n    _this.windowTimeSpan = windowTimeSpan;\n    _this.windowCreationInterval = windowCreationInterval;\n    _this.maxWindowSize = maxWindowSize;\n    _this.scheduler = scheduler;\n    _this.windows = [];\n\n    var window = _this.openWindow();\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      var closeState = {\n        subscriber: _this,\n        window: window,\n        context: null\n      };\n      var creationState = {\n        windowTimeSpan: windowTimeSpan,\n        windowCreationInterval: windowCreationInterval,\n        subscriber: _this,\n        scheduler: scheduler\n      };\n\n      _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n\n      _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      var timeSpanOnlyState = {\n        subscriber: _this,\n        window: window,\n        windowTimeSpan: windowTimeSpan\n      };\n\n      _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n\n    return _this;\n  }\n\n  WindowTimeSubscriber.prototype._next = function (value) {\n    var windows = this.windows;\n    var len = windows.length;\n\n    for (var i = 0; i < len; i++) {\n      var window_1 = windows[i];\n\n      if (!window_1.closed) {\n        window_1.next(value);\n\n        if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window_1);\n        }\n      }\n    }\n  };\n\n  WindowTimeSubscriber.prototype._error = function (err) {\n    var windows = this.windows;\n\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n\n    this.destination.error(err);\n  };\n\n  WindowTimeSubscriber.prototype._complete = function () {\n    var windows = this.windows;\n\n    while (windows.length > 0) {\n      var window_2 = windows.shift();\n\n      if (!window_2.closed) {\n        window_2.complete();\n      }\n    }\n\n    this.destination.complete();\n  };\n\n  WindowTimeSubscriber.prototype.openWindow = function () {\n    var window = new CountedSubject();\n    this.windows.push(window);\n    var destination = this.destination;\n    destination.next(window);\n    return window;\n  };\n\n  WindowTimeSubscriber.prototype.closeWindow = function (window) {\n    window.complete();\n    var windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  };\n\n  return WindowTimeSubscriber;\n}(Subscriber);\n\nfunction dispatchWindowTimeSpanOnly(state) {\n  var subscriber = state.subscriber,\n      windowTimeSpan = state.windowTimeSpan,\n      window = state.window;\n\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation(state) {\n  var windowTimeSpan = state.windowTimeSpan,\n      subscriber = state.subscriber,\n      scheduler = state.scheduler,\n      windowCreationInterval = state.windowCreationInterval;\n  var window = subscriber.openWindow();\n  var action = this;\n  var context = {\n    action: action,\n    subscription: null\n  };\n  var timeSpanState = {\n    subscriber: subscriber,\n    window: window,\n    context: context\n  };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose(state) {\n  var subscriber = state.subscriber,\n      window = state.window,\n      context = state.context;\n\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n\n  subscriber.closeWindow(window);\n}","map":{"version":3,"mappings":"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","names":["tslib_1","Subject","async","Subscriber","isNumeric","isScheduler","windowTime","windowTimeSpan","scheduler","windowCreationInterval","maxWindowSize","Number","POSITIVE_INFINITY","arguments","windowTimeOperatorFunction","source","lift","WindowTimeOperator","prototype","call","subscriber","subscribe","WindowTimeSubscriber","CountedSubject","_super","__extends","_this","apply","_numberOfNextedValues","next","value","Object","defineProperty","get","enumerable","configurable","destination","windows","window","openWindow","closeState","context","creationState","add","schedule","dispatchWindowClose","dispatchWindowCreation","timeSpanOnlyState","dispatchWindowTimeSpanOnly","_next","len","length","i","window_1","closed","numberOfNextedValues","closeWindow","_error","err","shift","error","_complete","window_2","complete","push","splice","indexOf","state","action","subscription","timeSpanState","remove"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/windowTime.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    var scheduler = async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = Number(arguments[2]);\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = Number(arguments[1]);\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nvar WindowTimeOperator = /*@__PURE__*/ (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CountedSubject, _super);\n    function CountedSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._numberOfNextedValues = 0;\n        return _this;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject));\nvar WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowTimeSpan = windowTimeSpan;\n        _this.windowCreationInterval = windowCreationInterval;\n        _this.maxWindowSize = maxWindowSize;\n        _this.scheduler = scheduler;\n        _this.windows = [];\n        var window = _this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: _this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };\n            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n        return _this;\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map\n"]},"metadata":{},"sourceType":"module"}