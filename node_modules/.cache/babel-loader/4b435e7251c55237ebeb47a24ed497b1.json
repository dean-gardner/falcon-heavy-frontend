{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscription,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function bufferWhen(closingSelector) {\n  return function (source) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nvar BufferWhenOperator = /*@__PURE__*/function () {\n  function BufferWhenOperator(closingSelector) {\n    this.closingSelector = closingSelector;\n  }\n\n  BufferWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  };\n\n  return BufferWhenOperator;\n}();\n\nvar BufferWhenSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(BufferWhenSubscriber, _super);\n\n  function BufferWhenSubscriber(destination, closingSelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.closingSelector = closingSelector;\n    _this.subscribing = false;\n\n    _this.openBuffer();\n\n    return _this;\n  }\n\n  BufferWhenSubscriber.prototype._next = function (value) {\n    this.buffer.push(value);\n  };\n\n  BufferWhenSubscriber.prototype._complete = function () {\n    var buffer = this.buffer;\n\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n\n    _super.prototype._complete.call(this);\n  };\n\n  BufferWhenSubscriber.prototype._unsubscribe = function () {\n    this.buffer = undefined;\n    this.subscribing = false;\n  };\n\n  BufferWhenSubscriber.prototype.notifyNext = function () {\n    this.openBuffer();\n  };\n\n  BufferWhenSubscriber.prototype.notifyComplete = function () {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  };\n\n  BufferWhenSubscriber.prototype.openBuffer = function () {\n    var closingSubscription = this.closingSubscription;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    var buffer = this.buffer;\n\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n    var closingNotifier;\n\n    try {\n      var closingSelector = this.closingSelector;\n      closingNotifier = closingSelector();\n    } catch (err) {\n      return this.error(err);\n    }\n\n    closingSubscription = new Subscription();\n    this.closingSubscription = closingSubscription;\n    this.add(closingSubscription);\n    this.subscribing = true;\n    closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n    this.subscribing = false;\n  };\n\n  return BufferWhenSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":"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","names":["tslib_1","Subscription","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","bufferWhen","closingSelector","source","lift","BufferWhenOperator","prototype","call","subscriber","subscribe","BufferWhenSubscriber","_super","__extends","destination","_this","subscribing","openBuffer","_next","value","buffer","push","_complete","next","_unsubscribe","undefined","notifyNext","notifyComplete","complete","closingSubscription","remove","unsubscribe","closingNotifier","err","error","add"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/bufferWhen.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscription,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nvar BufferWhenOperator = /*@__PURE__*/ (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\nvar BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.closingSelector = closingSelector;\n        _this.subscribing = false;\n        _this.openBuffer();\n        return _this;\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = undefined;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function () {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier;\n        try {\n            var closingSelector = this.closingSelector;\n            closingNotifier = closingSelector();\n        }\n        catch (err) {\n            return this.error(err);\n        }\n        closingSubscription = new Subscription();\n        this.closingSubscription = closingSubscription;\n        this.add(closingSubscription);\n        this.subscribing = true;\n        closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n        this.subscribing = false;\n    };\n    return BufferWhenSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map\n"]},"metadata":{},"sourceType":"module"}