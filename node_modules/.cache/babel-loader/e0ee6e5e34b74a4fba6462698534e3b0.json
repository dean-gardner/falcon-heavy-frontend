{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { StorageKey } from '..';\nimport { StorageManager } from './StorageManager';\nexport class PeerManager {\n  constructor(storage) {\n    this.storageManager = new StorageManager(storage, StorageKey.TRANSPORT_P2P_PEERS);\n  }\n\n  hasPeer(publicKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.getPeer(publicKey)) ? true : false;\n    });\n  }\n\n  getPeers() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.getAll();\n    });\n  }\n\n  getPeer(publicKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.getOne(peer => peer.publicKey === publicKey);\n    });\n  }\n\n  addPeer(peerInfo) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.addOne(peerInfo, peer => peer.publicKey === peerInfo.publicKey);\n    });\n  }\n\n  removePeer(publicKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.remove(peer => peer.publicKey === publicKey);\n    });\n  }\n\n  removePeers(publicKeys) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.remove(peer => publicKeys.includes(peer.publicKey));\n    });\n  }\n\n  removeAllPeers() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.removeAll();\n    });\n  }\n\n}","map":{"version":3,"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,aAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,YAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,cAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,YAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,cAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,YAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,QAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,SAASO,UAAT,QAA2B,IAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,aAAW,CAACC,OAAD,EAAU;AACjB,SAAKC,cAAL,GAAsB,IAAIJ,cAAJ,CAAmBG,OAAnB,EAA4BJ,UAAU,CAACM,mBAAvC,CAAtB;AACH;;AACDC,SAAO,CAACC,SAAD,EAAY;AACf,WAAO3B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,aAAO,CAAC,MAAM,KAAK4B,OAAL,CAAaD,SAAb,CAAP,IAAkC,IAAlC,GAAyC,KAAhD;AACH,KAFe,CAAhB;AAGH;;AACDE,UAAQ,GAAG;AACP,WAAO7B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,aAAO,KAAKwB,cAAL,CAAoBM,MAApB,EAAP;AACH,KAFe,CAAhB;AAGH;;AACDF,SAAO,CAACD,SAAD,EAAY;AACf,WAAO3B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,aAAO,KAAKwB,cAAL,CAAoBO,MAApB,CAA4BC,IAAD,IAAUA,IAAI,CAACL,SAAL,KAAmBA,SAAxD,CAAP;AACH,KAFe,CAAhB;AAGH;;AACDM,SAAO,CAACC,QAAD,EAAW;AACd,WAAOlC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,aAAO,KAAKwB,cAAL,CAAoBW,MAApB,CAA2BD,QAA3B,EAAsCF,IAAD,IAAUA,IAAI,CAACL,SAAL,KAAmBO,QAAQ,CAACP,SAA3E,CAAP;AACH,KAFe,CAAhB;AAGH;;AACDS,YAAU,CAACT,SAAD,EAAY;AAClB,WAAO3B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,aAAO,KAAKwB,cAAL,CAAoBa,MAApB,CAA4BL,IAAD,IAAUA,IAAI,CAACL,SAAL,KAAmBA,SAAxD,CAAP;AACH,KAFe,CAAhB;AAGH;;AACDW,aAAW,CAACC,UAAD,EAAa;AACpB,WAAOvC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,aAAO,KAAKwB,cAAL,CAAoBa,MAApB,CAA4BL,IAAD,IAAUO,UAAU,CAACC,QAAX,CAAoBR,IAAI,CAACL,SAAzB,CAArC,CAAP;AACH,KAFe,CAAhB;AAGH;;AACDc,gBAAc,GAAG;AACb,WAAOzC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,aAAO,KAAKwB,cAAL,CAAoBkB,SAApB,EAAP;AACH,KAFe,CAAhB;AAGH;;AAtCoB","names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","StorageKey","StorageManager","PeerManager","constructor","storage","storageManager","TRANSPORT_P2P_PEERS","hasPeer","publicKey","getPeer","getPeers","getAll","getOne","peer","addPeer","peerInfo","addOne","removePeer","remove","removePeers","publicKeys","includes","removeAllPeers","removeAll"],"sourceRoot":"","sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@airgap/beacon-sdk/dist/esm/managers/PeerManager.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageKey } from '..';\nimport { StorageManager } from './StorageManager';\nexport class PeerManager {\n    constructor(storage) {\n        this.storageManager = new StorageManager(storage, StorageKey.TRANSPORT_P2P_PEERS);\n    }\n    hasPeer(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.getPeer(publicKey)) ? true : false;\n        });\n    }\n    getPeers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.getAll();\n        });\n    }\n    getPeer(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.getOne((peer) => peer.publicKey === publicKey);\n        });\n    }\n    addPeer(peerInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.addOne(peerInfo, (peer) => peer.publicKey === peerInfo.publicKey);\n        });\n    }\n    removePeer(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.remove((peer) => peer.publicKey === publicKey);\n        });\n    }\n    removePeers(publicKeys) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.remove((peer) => publicKeys.includes(peer.publicKey));\n        });\n    }\n    removeAllPeers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.removeAll();\n        });\n    }\n}\n//# sourceMappingURL=PeerManager.js.map"]},"metadata":{},"sourceType":"module"}