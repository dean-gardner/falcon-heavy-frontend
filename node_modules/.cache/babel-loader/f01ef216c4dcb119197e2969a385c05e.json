{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cx, filterUndefined, getValidChildren, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { baseStyle } from \"./avatar\";\n/**\n * AvatarGroup displays a number of avatars grouped together in a stack.\n */\n\nexport var AvatarGroup = /*#__PURE__*/forwardRef(function AvatarGroup(props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      {\n    children,\n    borderColor,\n    max,\n    spacing = \"-0.75rem\",\n    borderRadius = \"full\"\n  } = _omitThemingProps,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"children\", \"borderColor\", \"max\", \"spacing\", \"borderRadius\"]);\n\n  var validChildren = getValidChildren(children);\n  /**\n   * get the avatars within the max\n   */\n\n  var childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  /**\n   * get the remaining avatar count\n   */\n\n  var excess = max != null && validChildren.length - max;\n  /**\n   * Reversing the children is a great way to avoid using zIndex\n   * to overlap the avatars\n   */\n\n  var reversedChildren = childrenWithinMax.reverse();\n  var clones = reversedChildren.map((child, index) => {\n    var isFirstAvatar = index === 0;\n    var childProps = {\n      mr: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: child.props.borderColor || borderColor,\n      showBorder: true\n    };\n    return /*#__PURE__*/React.cloneElement(child, filterUndefined(childProps));\n  });\n  var groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\"\n  };\n\n  var excessStyles = _extends({\n    borderRadius,\n    ml: spacing\n  }, baseStyle, styles.excessLabel);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    role: \"group\",\n    __css: groupStyles\n  }, rest, {\n    className: cx(\"chakra-avatar__group\", props.className)\n  }), excess > 0 && /*#__PURE__*/React.createElement(chakra.span, {\n    className: \"chakra-avatar__excess\",\n    __css: excessStyles\n  }, \"+\" + excess), clones);\n});\n\nif (__DEV__) {\n  AvatarGroup.displayName = \"AvatarGroup\";\n}","map":{"version":3,"mappings":"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","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cx","filterUndefined","getValidChildren","__DEV__","React","baseStyle","AvatarGroup","props","ref","styles","_omitThemingProps","children","borderColor","max","spacing","borderRadius","rest","validChildren","childrenWithinMax","slice","excess","reversedChildren","reverse","clones","map","child","index","isFirstAvatar","childProps","mr","size","showBorder","cloneElement","groupStyles","display","alignItems","justifyContent","flexDirection","excessStyles","ml","excessLabel","createElement","div","role","__css","className","span","displayName"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/avatar/dist/esm/avatar-group.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cx, filterUndefined, getValidChildren, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { baseStyle } from \"./avatar\";\n\n/**\n * AvatarGroup displays a number of avatars grouped together in a stack.\n */\nexport var AvatarGroup = /*#__PURE__*/forwardRef(function AvatarGroup(props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      {\n    children,\n    borderColor,\n    max,\n    spacing = \"-0.75rem\",\n    borderRadius = \"full\"\n  } = _omitThemingProps,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"children\", \"borderColor\", \"max\", \"spacing\", \"borderRadius\"]);\n\n  var validChildren = getValidChildren(children);\n  /**\n   * get the avatars within the max\n   */\n\n  var childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  /**\n   * get the remaining avatar count\n   */\n\n  var excess = max != null && validChildren.length - max;\n  /**\n   * Reversing the children is a great way to avoid using zIndex\n   * to overlap the avatars\n   */\n\n  var reversedChildren = childrenWithinMax.reverse();\n  var clones = reversedChildren.map((child, index) => {\n    var isFirstAvatar = index === 0;\n    var childProps = {\n      mr: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: child.props.borderColor || borderColor,\n      showBorder: true\n    };\n    return /*#__PURE__*/React.cloneElement(child, filterUndefined(childProps));\n  });\n  var groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\"\n  };\n\n  var excessStyles = _extends({\n    borderRadius,\n    ml: spacing\n  }, baseStyle, styles.excessLabel);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    role: \"group\",\n    __css: groupStyles\n  }, rest, {\n    className: cx(\"chakra-avatar__group\", props.className)\n  }), excess > 0 && /*#__PURE__*/React.createElement(chakra.span, {\n    className: \"chakra-avatar__excess\",\n    __css: excessStyles\n  }, \"+\" + excess), clones);\n});\n\nif (__DEV__) {\n  AvatarGroup.displayName = \"AvatarGroup\";\n}\n//# sourceMappingURL=avatar-group.js.map"]},"metadata":{},"sourceType":"module"}