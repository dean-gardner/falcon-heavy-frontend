{"ast":null,"code":"import * as React from \"react\";\nimport { createContext, __DEV__ } from \"@chakra-ui/utils\";\nimport { useSafeLayoutEffect, useForceUpdate } from \"@chakra-ui/hooks\";\nvar [PortalManagerContextProvider, usePortalManager] = createContext({\n  strict: false,\n  name: \"PortalManagerContext\"\n});\nexport { usePortalManager };\n/**\n * PortalManager\n *\n * Used to manage multiple portals within an application.\n * It must be render only once, at the root of your application.\n *\n * Inspired by BaseWeb's LayerManager component\n */\n\nexport var PortalManager = props => {\n  var {\n    children,\n    zIndex\n  } = props;\n  /**\n   * The element that wraps the stacked layers\n   */\n\n  var ref = React.useRef(null);\n  var forceUpdate = useForceUpdate();\n  /**\n   * force an update on mount so the Provider works correctly\n   */\n\n  useSafeLayoutEffect(() => {\n    forceUpdate();\n  }, []);\n  /**\n   * let's detect if use has mutiple instances of this component\n   */\n\n  var parentManager = usePortalManager();\n  var context = {\n    node: (parentManager == null ? void 0 : parentManager.node) || ref.current,\n    zIndex\n  };\n  return /*#__PURE__*/React.createElement(PortalManagerContextProvider, {\n    value: context\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chakra-portal-manager\",\n    ref: ref\n  }));\n};\n\nif (__DEV__) {\n  PortalManager.displayName = \"PortalManager\";\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,kBAAvC;AACA,SAASC,mBAAT,EAA8BC,cAA9B,QAAoD,kBAApD;AACA,IAAI,CAACC,4BAAD,EAA+BC,gBAA/B,IAAmDL,aAAa,CAAC;AACnEM,QAAM,EAAE,KAD2D;AAEnEC,MAAI,EAAE;AAF6D,CAAD,CAApE;AAIA,SAASF,gBAAT;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIG,aAAa,GAAGC,KAAK,IAAI;AAClC,MAAI;AACFC,YADE;AAEFC;AAFE,MAGAF,KAHJ;AAIA;AACF;AACA;;AAEE,MAAIG,GAAG,GAAGb,KAAK,CAACc,MAAN,CAAa,IAAb,CAAV;AACA,MAAIC,WAAW,GAAGX,cAAc,EAAhC;AACA;AACF;AACA;;AAEED,qBAAmB,CAAC,MAAM;AACxBY,eAAW;AACZ,GAFkB,EAEhB,EAFgB,CAAnB;AAGA;AACF;AACA;;AAEE,MAAIC,aAAa,GAAGV,gBAAgB,EAApC;AACA,MAAIW,OAAO,GAAG;AACZC,QAAI,EAAE,CAACF,aAAa,IAAI,IAAjB,GAAwB,KAAK,CAA7B,GAAiCA,aAAa,CAACE,IAAhD,KAAyDL,GAAG,CAACM,OADvD;AAEZP;AAFY,GAAd;AAIA,SAAO,aAAaZ,KAAK,CAACoB,aAAN,CAAoBf,4BAApB,EAAkD;AACpEgB,SAAK,EAAEJ;AAD6D,GAAlD,EAEjBN,QAFiB,EAEP,aAAaX,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AACnDE,aAAS,EAAE,uBADwC;AAEnDT,OAAG,EAAEA;AAF8C,GAA3B,CAFN,CAApB;AAMD,CAjCM;;AAmCP,IAAIX,OAAJ,EAAa;AACXO,eAAa,CAACc,WAAd,GAA4B,eAA5B;AACD","names":["React","createContext","__DEV__","useSafeLayoutEffect","useForceUpdate","PortalManagerContextProvider","usePortalManager","strict","name","PortalManager","props","children","zIndex","ref","useRef","forceUpdate","parentManager","context","node","current","createElement","value","className","displayName"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/portal/dist/esm/portal-manager.js"],"sourcesContent":["import * as React from \"react\";\nimport { createContext, __DEV__ } from \"@chakra-ui/utils\";\nimport { useSafeLayoutEffect, useForceUpdate } from \"@chakra-ui/hooks\";\nvar [PortalManagerContextProvider, usePortalManager] = createContext({\n  strict: false,\n  name: \"PortalManagerContext\"\n});\nexport { usePortalManager };\n\n/**\n * PortalManager\n *\n * Used to manage multiple portals within an application.\n * It must be render only once, at the root of your application.\n *\n * Inspired by BaseWeb's LayerManager component\n */\nexport var PortalManager = props => {\n  var {\n    children,\n    zIndex\n  } = props;\n  /**\n   * The element that wraps the stacked layers\n   */\n\n  var ref = React.useRef(null);\n  var forceUpdate = useForceUpdate();\n  /**\n   * force an update on mount so the Provider works correctly\n   */\n\n  useSafeLayoutEffect(() => {\n    forceUpdate();\n  }, []);\n  /**\n   * let's detect if use has mutiple instances of this component\n   */\n\n  var parentManager = usePortalManager();\n  var context = {\n    node: (parentManager == null ? void 0 : parentManager.node) || ref.current,\n    zIndex\n  };\n  return /*#__PURE__*/React.createElement(PortalManagerContextProvider, {\n    value: context\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chakra-portal-manager\",\n    ref: ref\n  }));\n};\n\nif (__DEV__) {\n  PortalManager.displayName = \"PortalManager\";\n}\n//# sourceMappingURL=portal-manager.js.map"]},"metadata":{},"sourceType":"module"}