{"ast":null,"code":"import { HttpBackend } from '@taquito/http-utils';\nimport BigNumber from 'bignumber.js';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nvar getByPath = require('lodash/get');\n\nvar setByPath = require('lodash/set');\n/**\r\n * Casts object/array items to BigNumber\r\n * keys support lodash path notation\r\n * @param data input object or array\r\n * @param keys keys for processing or all items if not defined\r\n *\r\n * @see https://lodash.com/docs/#get\r\n *\r\n */\n\n\nfunction castToBigNumber(data, keys) {\n  var returnArray = Array.isArray(data);\n\n  if (typeof keys === 'undefined') {\n    keys = Object.keys(data);\n  }\n\n  var response = returnArray ? [] : {};\n  keys.forEach(function (key) {\n    var item = getByPath(data, key);\n    var res;\n\n    if (typeof item === 'undefined') {\n      return;\n    }\n\n    if (Array.isArray(item)) {\n      res = castToBigNumber(item);\n      setByPath(response, key, res);\n      return;\n    }\n\n    res = new BigNumber(item);\n    setByPath(response, key, res);\n  });\n  return response;\n}\n\nvar OpKind;\n\n(function (OpKind) {\n  OpKind[\"ORIGINATION\"] = \"origination\";\n  OpKind[\"DELEGATION\"] = \"delegation\";\n  OpKind[\"REVEAL\"] = \"reveal\";\n  OpKind[\"TRANSACTION\"] = \"transaction\";\n  OpKind[\"ACTIVATION\"] = \"activate_account\";\n  OpKind[\"ENDORSEMENT\"] = \"endorsement\";\n  OpKind[\"SEED_NONCE_REVELATION\"] = \"seed_nonce_revelation\";\n  OpKind[\"DOUBLE_ENDORSEMENT_EVIDENCE\"] = \"double_endorsement_evidence\";\n  OpKind[\"DOUBLE_BAKING_EVIDENCE\"] = \"double_baking_evidence\";\n  OpKind[\"PROPOSALS\"] = \"proposals\";\n  OpKind[\"BALLOT\"] = \"ballot\";\n})(OpKind || (OpKind = {}));\n\nvar defaultChain = 'main';\nvar defaultRPCOptions = {\n  block: 'head'\n};\n/***\r\n * @description RpcClient allows interaction with Tezos network through an rpc node\r\n */\n\nvar RpcClient =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param url rpc root url\r\n   * @param chain chain (default main)\r\n   * @param httpBackend Http backend that issue http request.\r\n   * You can override it by providing your own if you which to hook in the request/response\r\n   *\r\n   * @example new RpcClient('https://api.tez.ie/rpc/mainnet', 'main') this will use https://api.tez.ie/rpc/mainnet/chains/main\r\n   */\n  function RpcClient(url, chain, httpBackend) {\n    if (chain === void 0) {\n      chain = defaultChain;\n    }\n\n    if (httpBackend === void 0) {\n      httpBackend = new HttpBackend();\n    }\n\n    this.url = url;\n    this.chain = chain;\n    this.httpBackend = httpBackend;\n  }\n\n  RpcClient.prototype.createURL = function (path) {\n    // Trim trailing slashes because it is assumed to be included in path\n    return \"\" + this.url.replace(/\\/+$/g, '') + path;\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Get the block's hash, its unique identifier.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-hash\r\n   */\n\n\n  RpcClient.prototype.getBlockHash = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var hash;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/hash\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            hash = _b.sent();\n            return [2\n            /*return*/\n            , hash];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description List the ancestors of the given block which, if referred to as the branch in an operation header, are recent enough for that operation to be included in the current block.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-live-blocks\r\n   */\n\n\n  RpcClient.prototype.getLiveBlocks = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var blocks;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/live_blocks\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            blocks = _b.sent();\n            return [2\n            /*return*/\n            , blocks];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param address address from which we want to retrieve the balance\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Access the balance of a contract.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-balance\r\n   */\n\n\n  RpcClient.prototype.getBalance = function (address, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var balance;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/balance\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            balance = _b.sent();\n            return [2\n            /*return*/\n            , new BigNumber(balance)];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param address contract address from which we want to retrieve the storage\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Access the data of the contract.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-storage\r\n   */\n\n\n  RpcClient.prototype.getStorage = function (address, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        return [2\n        /*return*/\n        , this.httpBackend.createRequest({\n          url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/storage\"),\n          method: 'GET'\n        })];\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param address contract address from which we want to retrieve the script\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Access the code and data of the contract.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\r\n   */\n\n\n  RpcClient.prototype.getScript = function (address, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        return [2\n        /*return*/\n        , this.httpBackend.createRequest({\n          url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/script\"),\n          method: 'GET'\n        })];\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param address contract address from which we want to retrieve\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Access the complete status of a contract.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id\r\n   */\n\n\n  RpcClient.prototype.getContract = function (address, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var contractResponse;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address),\n              method: 'GET'\n            })];\n\n          case 1:\n            contractResponse = _b.sent();\n            return [2\n            /*return*/\n            , __assign(__assign({}, contractResponse), {\n              balance: new BigNumber(contractResponse.balance)\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param address contract address from which we want to retrieve the manager\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Access the manager key of a contract.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-manager-key\r\n   */\n\n\n  RpcClient.prototype.getManagerKey = function (address, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        return [2\n        /*return*/\n        , this.httpBackend.createRequest({\n          url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/manager_key\"),\n          method: 'GET'\n        })];\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param address contract address from which we want to retrieve the delegate (baker)\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Access the delegate of a contract, if any.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-delegate\r\n   */\n\n\n  RpcClient.prototype.getDelegate = function (address, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        return [2\n        /*return*/\n        , this.httpBackend.createRequest({\n          url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/delegate\"),\n          method: 'GET'\n        })];\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param address contract address from which we want to retrieve the big map key\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Access the value associated with a key in the big map storage of the contract.\r\n   *\r\n   * @deprecated Deprecated in favor of getBigMapKeyByID\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\r\n   */\n\n\n  RpcClient.prototype.getBigMapKey = function (address, key, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        return [2\n        /*return*/\n        , this.httpBackend.createRequest({\n          url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/big_map_get\"),\n          method: 'POST'\n        }, key)];\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param id Big Map ID\r\n   * @param expr Expression hash to query (A b58check encoded Blake2b hash of the expression (The expression can be packed using the pack_data method))\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Access the value associated with a key in a big map.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-big-maps-big-map-id-script-expr\r\n   */\n\n\n  RpcClient.prototype.getBigMapExpr = function (id, expr, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        return [2\n        /*return*/\n        , this.httpBackend.createRequest({\n          url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/big_maps/\" + id + \"/\" + expr),\n          method: 'GET'\n        })];\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param address delegate address which we want to retrieve\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Fetches information about a delegate from RPC.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-delegates-pkh\r\n   */\n\n\n  RpcClient.prototype.getDelegates = function (address, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/delegates/\" + address),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , {\n              deactivated: response.deactivated,\n              balance: new BigNumber(response.balance),\n              frozen_balance: new BigNumber(response.frozen_balance),\n              frozen_balance_by_cycle: response.frozen_balance_by_cycle.map(function (_a) {\n                var deposit = _a.deposit,\n                    fees = _a.fees,\n                    rewards = _a.rewards,\n                    rest = __rest(_a, [\"deposit\", \"fees\", \"rewards\"]);\n\n                return __assign(__assign({}, rest), {\n                  deposit: new BigNumber(deposit),\n                  fees: new BigNumber(fees),\n                  rewards: new BigNumber(rewards)\n                });\n              }),\n              staking_balance: new BigNumber(response.staking_balance),\n              delegated_contracts: response.delegated_contracts,\n              delegated_balance: new BigNumber(response.delegated_balance),\n              grace_period: response.grace_period\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description All constants\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-constants\r\n   */\n\n\n  RpcClient.prototype.getConstants = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response, castedResponse;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/constants\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            castedResponse = castToBigNumber(response, ['time_between_blocks', 'hard_gas_limit_per_operation', 'hard_gas_limit_per_block', 'proof_of_work_threshold', 'tokens_per_roll', 'seed_nonce_revelation_tip', 'block_security_deposit', 'endorsement_security_deposit', 'block_reward', 'endorsement_reward', 'cost_per_byte', 'hard_storage_limit_per_operation', 'test_chain_duration', 'baking_reward_per_endorsement', 'delay_per_missing_endorsement']);\n            return [2\n            /*return*/\n            , __assign(__assign({}, response), castedResponse)];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls. See examples for various available sytaxes.\r\n   *\r\n   * @description All the information about a block\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id\r\n   * @example getBlock() will default to /main/chains/block/head.\r\n   * @example getBlock({ block: head~2 }) will return an offset of 2 blocks.\r\n   * @example getBlock({ block: BL8fTiWcSxWCjiMVnDkbh6EuhqVPZzgWheJ2dqwrxYRm9AephXh~2 }) will return an offset of 2 blocks from given block hash..\r\n   */\n\n\n  RpcClient.prototype.getBlock = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description The whole block header\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-header\r\n   */\n\n\n  RpcClient.prototype.getBlockHeader = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/header\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description All the metadata associated to the block\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-metadata\r\n   */\n\n\n  RpcClient.prototype.getBlockMetadata = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/metadata\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param args contains optional query arguments\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Retrieves the list of delegates allowed to bake a block.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-helpers-baking-rights\r\n   */\n\n\n  RpcClient.prototype.getBakingRights = function (args, _a) {\n    if (args === void 0) {\n      args = {};\n    }\n\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/baking_rights\"),\n              method: 'GET',\n              query: args\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param args contains optional query arguments\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Retrieves the list of delegates allowed to bake a block.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-helpers-endorsing-rights\r\n   */\n\n\n  RpcClient.prototype.getEndorsingRights = function (args, _a) {\n    if (args === void 0) {\n      args = {};\n    }\n\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/endorsing_rights\"),\n              method: 'GET',\n              query: args\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Ballots casted so far during a voting period\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-ballot-list\r\n   */\n\n\n  RpcClient.prototype.getBallotList = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/ballot_list\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Sum of ballots casted so far during a voting period.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-ballots\r\n   */\n\n\n  RpcClient.prototype.getBallots = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/ballots\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Current period kind.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-period-kind\r\n   */\n\n\n  RpcClient.prototype.getCurrentPeriodKind = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/current_period_kind\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Current proposal under evaluation.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-proposal\r\n   */\n\n\n  RpcClient.prototype.getCurrentProposal = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/current_proposal\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Current expected quorum.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-quorum\r\n   */\n\n\n  RpcClient.prototype.getCurrentQuorum = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/current_quorum\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description List of delegates with their voting weight, in number of rolls.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-listings\r\n   */\n\n\n  RpcClient.prototype.getVotesListings = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/listings\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description List of proposals with number of supporters.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-proposals\r\n   */\n\n\n  RpcClient.prototype.getProposals = function (_a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/proposals\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param data operation contents to forge\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Forge an operation returning the unsigned bytes\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-forge-operations\r\n   */\n\n\n  RpcClient.prototype.forgeOperations = function (data, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        return [2\n        /*return*/\n        , this.httpBackend.createRequest({\n          url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/forge/operations\"),\n          method: 'POST'\n        }, data)];\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param signedOpBytes signed bytes to inject\r\n   *\r\n   * @description Inject an operation in node and broadcast it. Returns the ID of the operation. The `signedOperationContents` should be constructed using a contextual RPCs from the latest block and signed by the client. By default, the RPC will wait for the operation to be (pre-)validated before answering. See RPCs under /blocks/prevalidation for more details on the prevalidation context.\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#post-injection-operation\r\n   */\n\n\n  RpcClient.prototype.injectOperation = function (signedOpBytes) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.httpBackend.createRequest({\n          url: this.createURL(\"/injection/operation\"),\n          method: 'POST'\n        }, signedOpBytes)];\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param ops Operations to apply\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Simulate the validation of an operation\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-preapply-operations\r\n   */\n\n\n  RpcClient.prototype.preapplyOperations = function (ops, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/preapply/operations\"),\n              method: 'POST'\n            }, ops)];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param contract address of the contract we want to get the entrypoints of\r\n   *\r\n   * @description Return the list of entrypoints of the contract\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-entrypoints\r\n   *\r\n   * @version 005_PsBABY5H\r\n   */\n\n\n  RpcClient.prototype.getEntrypoints = function (contract, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var contractResponse;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + contract + \"/entrypoints\"),\n              method: 'GET'\n            })];\n\n          case 1:\n            contractResponse = _b.sent();\n            return [2\n            /*return*/\n            , contractResponse];\n        }\n      });\n    });\n  };\n  /**\r\n   * @param op Operation to run\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Run an operation without signature checks\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-scripts-run-operation\r\n   */\n\n\n  RpcClient.prototype.runOperation = function (op, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/scripts/run_operation\"),\n              method: 'POST'\n            }, op)];\n\n          case 1:\n            response = _b.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n\n  RpcClient.prototype.getChainId = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.httpBackend.createRequest({\n          url: this.createURL(\"/chains/\" + this.chain + \"/chain_id\"),\n          method: 'GET'\n        })];\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param data Data to pack\r\n   * @param options contains generic configuration for rpc calls\r\n   *\r\n   * @description Computes the serialized version of a data expression using the same algorithm as script instruction PACK\r\n   *\r\n   * @example packData({ data: { string: \"test\" }, type: { prim: \"string\" } })\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-scripts-pack-data\r\n   */\n\n\n  RpcClient.prototype.packData = function (data, _a) {\n    var block = (_a === void 0 ? defaultRPCOptions : _a).block;\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, gas, rest, formattedGas, tryBigNumber;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpBackend.createRequest({\n              url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/scripts/pack_data\"),\n              method: 'POST'\n            }, data)];\n\n          case 1:\n            _b = _c.sent(), gas = _b.gas, rest = __rest(_b, [\"gas\"]);\n            formattedGas = gas;\n            tryBigNumber = new BigNumber(gas || '');\n\n            if (!tryBigNumber.isNaN()) {\n              formattedGas = tryBigNumber;\n            }\n\n            return [2\n            /*return*/\n            , __assign({\n              gas: formattedGas\n            }, rest)];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Return rpc root url\r\n   */\n\n\n  RpcClient.prototype.getRpcUrl = function () {\n    return this.url;\n  };\n\n  return RpcClient;\n}();\n\nexport { OpKind, RpcClient };","map":{"version":3,"mappings":"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","names":["HttpBackend","BigNumber","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","getByPath","require","setByPath","castToBigNumber","data","keys","returnArray","Array","isArray","response","forEach","key","item","res","OpKind","defaultChain","defaultRPCOptions","block","RpcClient","url","chain","httpBackend","createURL","path","replace","getBlockHash","_a","hash","_b","createRequest","method","getLiveBlocks","blocks","getBalance","address","balance","getStorage","getScript","getContract","contractResponse","getManagerKey","getDelegate","getBigMapKey","getBigMapExpr","id","expr","getDelegates","deactivated","frozen_balance","frozen_balance_by_cycle","map","deposit","fees","rewards","rest","staking_balance","delegated_contracts","delegated_balance","grace_period","getConstants","castedResponse","getBlock","getBlockHeader","getBlockMetadata","getBakingRights","args","query","getEndorsingRights","getBallotList","getBallots","getCurrentPeriodKind","getCurrentProposal","getCurrentQuorum","getVotesListings","getProposals","forgeOperations","injectOperation","signedOpBytes","preapplyOperations","getEntrypoints","contract","runOperation","getChainId","packData","gas","formattedGas","tryBigNumber","_c","isNaN","getRpcUrl"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@taquito/rpc/dist/taquito-rpc.es5.js"],"sourcesContent":["import { HttpBackend } from '@taquito/http-utils';\nimport BigNumber from 'bignumber.js';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nvar getByPath = require('lodash/get');\r\nvar setByPath = require('lodash/set');\r\n/**\r\n * Casts object/array items to BigNumber\r\n * keys support lodash path notation\r\n * @param data input object or array\r\n * @param keys keys for processing or all items if not defined\r\n *\r\n * @see https://lodash.com/docs/#get\r\n *\r\n */\r\nfunction castToBigNumber(data, keys) {\r\n    var returnArray = Array.isArray(data);\r\n    if (typeof keys === 'undefined') {\r\n        keys = Object.keys(data);\r\n    }\r\n    var response = returnArray ? [] : {};\r\n    keys.forEach(function (key) {\r\n        var item = getByPath(data, key);\r\n        var res;\r\n        if (typeof item === 'undefined') {\r\n            return;\r\n        }\r\n        if (Array.isArray(item)) {\r\n            res = castToBigNumber(item);\r\n            setByPath(response, key, res);\r\n            return;\r\n        }\r\n        res = new BigNumber(item);\r\n        setByPath(response, key, res);\r\n    });\r\n    return response;\r\n}\n\nvar OpKind;\r\n(function (OpKind) {\r\n    OpKind[\"ORIGINATION\"] = \"origination\";\r\n    OpKind[\"DELEGATION\"] = \"delegation\";\r\n    OpKind[\"REVEAL\"] = \"reveal\";\r\n    OpKind[\"TRANSACTION\"] = \"transaction\";\r\n    OpKind[\"ACTIVATION\"] = \"activate_account\";\r\n    OpKind[\"ENDORSEMENT\"] = \"endorsement\";\r\n    OpKind[\"SEED_NONCE_REVELATION\"] = \"seed_nonce_revelation\";\r\n    OpKind[\"DOUBLE_ENDORSEMENT_EVIDENCE\"] = \"double_endorsement_evidence\";\r\n    OpKind[\"DOUBLE_BAKING_EVIDENCE\"] = \"double_baking_evidence\";\r\n    OpKind[\"PROPOSALS\"] = \"proposals\";\r\n    OpKind[\"BALLOT\"] = \"ballot\";\r\n})(OpKind || (OpKind = {}));\n\nvar defaultChain = 'main';\r\nvar defaultRPCOptions = { block: 'head' };\r\n/***\r\n * @description RpcClient allows interaction with Tezos network through an rpc node\r\n */\r\nvar RpcClient = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param url rpc root url\r\n     * @param chain chain (default main)\r\n     * @param httpBackend Http backend that issue http request.\r\n     * You can override it by providing your own if you which to hook in the request/response\r\n     *\r\n     * @example new RpcClient('https://api.tez.ie/rpc/mainnet', 'main') this will use https://api.tez.ie/rpc/mainnet/chains/main\r\n     */\r\n    function RpcClient(url, chain, httpBackend) {\r\n        if (chain === void 0) { chain = defaultChain; }\r\n        if (httpBackend === void 0) { httpBackend = new HttpBackend(); }\r\n        this.url = url;\r\n        this.chain = chain;\r\n        this.httpBackend = httpBackend;\r\n    }\r\n    RpcClient.prototype.createURL = function (path) {\r\n        // Trim trailing slashes because it is assumed to be included in path\r\n        return \"\" + this.url.replace(/\\/+$/g, '') + path;\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Get the block's hash, its unique identifier.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-hash\r\n     */\r\n    RpcClient.prototype.getBlockHash = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var hash;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/hash\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        hash = _b.sent();\r\n                        return [2 /*return*/, hash];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description List the ancestors of the given block which, if referred to as the branch in an operation header, are recent enough for that operation to be included in the current block.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-live-blocks\r\n     */\r\n    RpcClient.prototype.getLiveBlocks = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var blocks;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/live_blocks\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        blocks = _b.sent();\r\n                        return [2 /*return*/, blocks];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param address address from which we want to retrieve the balance\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Access the balance of a contract.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-balance\r\n     */\r\n    RpcClient.prototype.getBalance = function (address, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var balance;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/balance\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        balance = _b.sent();\r\n                        return [2 /*return*/, new BigNumber(balance)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param address contract address from which we want to retrieve the storage\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Access the data of the contract.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-storage\r\n     */\r\n    RpcClient.prototype.getStorage = function (address, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_b) {\r\n                return [2 /*return*/, this.httpBackend.createRequest({\r\n                        url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/storage\"),\r\n                        method: 'GET',\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param address contract address from which we want to retrieve the script\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Access the code and data of the contract.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\r\n     */\r\n    RpcClient.prototype.getScript = function (address, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_b) {\r\n                return [2 /*return*/, this.httpBackend.createRequest({\r\n                        url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/script\"),\r\n                        method: 'GET',\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param address contract address from which we want to retrieve\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Access the complete status of a contract.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id\r\n     */\r\n    RpcClient.prototype.getContract = function (address, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contractResponse;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        contractResponse = _b.sent();\r\n                        return [2 /*return*/, __assign(__assign({}, contractResponse), { balance: new BigNumber(contractResponse.balance) })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param address contract address from which we want to retrieve the manager\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Access the manager key of a contract.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-manager-key\r\n     */\r\n    RpcClient.prototype.getManagerKey = function (address, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_b) {\r\n                return [2 /*return*/, this.httpBackend.createRequest({\r\n                        url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/manager_key\"),\r\n                        method: 'GET',\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param address contract address from which we want to retrieve the delegate (baker)\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Access the delegate of a contract, if any.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-delegate\r\n     */\r\n    RpcClient.prototype.getDelegate = function (address, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_b) {\r\n                return [2 /*return*/, this.httpBackend.createRequest({\r\n                        url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/delegate\"),\r\n                        method: 'GET',\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param address contract address from which we want to retrieve the big map key\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Access the value associated with a key in the big map storage of the contract.\r\n     *\r\n     * @deprecated Deprecated in favor of getBigMapKeyByID\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\r\n     */\r\n    RpcClient.prototype.getBigMapKey = function (address, key, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_b) {\r\n                return [2 /*return*/, this.httpBackend.createRequest({\r\n                        url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + address + \"/big_map_get\"),\r\n                        method: 'POST',\r\n                    }, key)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param id Big Map ID\r\n     * @param expr Expression hash to query (A b58check encoded Blake2b hash of the expression (The expression can be packed using the pack_data method))\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Access the value associated with a key in a big map.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-big-maps-big-map-id-script-expr\r\n     */\r\n    RpcClient.prototype.getBigMapExpr = function (id, expr, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_b) {\r\n                return [2 /*return*/, this.httpBackend.createRequest({\r\n                        url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/big_maps/\" + id + \"/\" + expr),\r\n                        method: 'GET',\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param address delegate address which we want to retrieve\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Fetches information about a delegate from RPC.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-delegates-pkh\r\n     */\r\n    RpcClient.prototype.getDelegates = function (address, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/delegates/\" + address),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, {\r\n                                deactivated: response.deactivated,\r\n                                balance: new BigNumber(response.balance),\r\n                                frozen_balance: new BigNumber(response.frozen_balance),\r\n                                frozen_balance_by_cycle: response.frozen_balance_by_cycle.map(function (_a) {\r\n                                    var deposit = _a.deposit, fees = _a.fees, rewards = _a.rewards, rest = __rest(_a, [\"deposit\", \"fees\", \"rewards\"]);\r\n                                    return (__assign(__assign({}, rest), { deposit: new BigNumber(deposit), fees: new BigNumber(fees), rewards: new BigNumber(rewards) }));\r\n                                }),\r\n                                staking_balance: new BigNumber(response.staking_balance),\r\n                                delegated_contracts: response.delegated_contracts,\r\n                                delegated_balance: new BigNumber(response.delegated_balance),\r\n                                grace_period: response.grace_period,\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description All constants\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-constants\r\n     */\r\n    RpcClient.prototype.getConstants = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, castedResponse;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/constants\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        castedResponse = castToBigNumber(response, [\r\n                            'time_between_blocks',\r\n                            'hard_gas_limit_per_operation',\r\n                            'hard_gas_limit_per_block',\r\n                            'proof_of_work_threshold',\r\n                            'tokens_per_roll',\r\n                            'seed_nonce_revelation_tip',\r\n                            'block_security_deposit',\r\n                            'endorsement_security_deposit',\r\n                            'block_reward',\r\n                            'endorsement_reward',\r\n                            'cost_per_byte',\r\n                            'hard_storage_limit_per_operation',\r\n                            'test_chain_duration',\r\n                            'baking_reward_per_endorsement',\r\n                            'delay_per_missing_endorsement'\r\n                        ]);\r\n                        return [2 /*return*/, __assign(__assign({}, response), castedResponse)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls. See examples for various available sytaxes.\r\n     *\r\n     * @description All the information about a block\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id\r\n     * @example getBlock() will default to /main/chains/block/head.\r\n     * @example getBlock({ block: head~2 }) will return an offset of 2 blocks.\r\n     * @example getBlock({ block: BL8fTiWcSxWCjiMVnDkbh6EuhqVPZzgWheJ2dqwrxYRm9AephXh~2 }) will return an offset of 2 blocks from given block hash..\r\n     */\r\n    RpcClient.prototype.getBlock = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description The whole block header\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-header\r\n     */\r\n    RpcClient.prototype.getBlockHeader = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/header\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description All the metadata associated to the block\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-metadata\r\n     */\r\n    RpcClient.prototype.getBlockMetadata = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/metadata\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param args contains optional query arguments\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Retrieves the list of delegates allowed to bake a block.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-helpers-baking-rights\r\n     */\r\n    RpcClient.prototype.getBakingRights = function (args, _a) {\r\n        if (args === void 0) { args = {}; }\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/baking_rights\"),\r\n                            method: 'GET',\r\n                            query: args,\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param args contains optional query arguments\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Retrieves the list of delegates allowed to bake a block.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-helpers-endorsing-rights\r\n     */\r\n    RpcClient.prototype.getEndorsingRights = function (args, _a) {\r\n        if (args === void 0) { args = {}; }\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/endorsing_rights\"),\r\n                            method: 'GET',\r\n                            query: args,\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Ballots casted so far during a voting period\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-ballot-list\r\n     */\r\n    RpcClient.prototype.getBallotList = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/ballot_list\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Sum of ballots casted so far during a voting period.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-ballots\r\n     */\r\n    RpcClient.prototype.getBallots = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/ballots\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Current period kind.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-period-kind\r\n     */\r\n    RpcClient.prototype.getCurrentPeriodKind = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/current_period_kind\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Current proposal under evaluation.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-proposal\r\n     */\r\n    RpcClient.prototype.getCurrentProposal = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/current_proposal\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Current expected quorum.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-quorum\r\n     */\r\n    RpcClient.prototype.getCurrentQuorum = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/current_quorum\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description List of delegates with their voting weight, in number of rolls.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-listings\r\n     */\r\n    RpcClient.prototype.getVotesListings = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/listings\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description List of proposals with number of supporters.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-proposals\r\n     */\r\n    RpcClient.prototype.getProposals = function (_a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/votes/proposals\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param data operation contents to forge\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Forge an operation returning the unsigned bytes\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-forge-operations\r\n     */\r\n    RpcClient.prototype.forgeOperations = function (data, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_b) {\r\n                return [2 /*return*/, this.httpBackend.createRequest({\r\n                        url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/forge/operations\"),\r\n                        method: 'POST',\r\n                    }, data)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param signedOpBytes signed bytes to inject\r\n     *\r\n     * @description Inject an operation in node and broadcast it. Returns the ID of the operation. The `signedOperationContents` should be constructed using a contextual RPCs from the latest block and signed by the client. By default, the RPC will wait for the operation to be (pre-)validated before answering. See RPCs under /blocks/prevalidation for more details on the prevalidation context.\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#post-injection-operation\r\n     */\r\n    RpcClient.prototype.injectOperation = function (signedOpBytes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.httpBackend.createRequest({\r\n                        url: this.createURL(\"/injection/operation\"),\r\n                        method: 'POST',\r\n                    }, signedOpBytes)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param ops Operations to apply\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Simulate the validation of an operation\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-preapply-operations\r\n     */\r\n    RpcClient.prototype.preapplyOperations = function (ops, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/preapply/operations\"),\r\n                            method: 'POST',\r\n                        }, ops)];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param contract address of the contract we want to get the entrypoints of\r\n     *\r\n     * @description Return the list of entrypoints of the contract\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-entrypoints\r\n     *\r\n     * @version 005_PsBABY5H\r\n     */\r\n    RpcClient.prototype.getEntrypoints = function (contract, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contractResponse;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/context/contracts/\" + contract + \"/entrypoints\"),\r\n                            method: 'GET',\r\n                        })];\r\n                    case 1:\r\n                        contractResponse = _b.sent();\r\n                        return [2 /*return*/, contractResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param op Operation to run\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Run an operation without signature checks\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-scripts-run-operation\r\n     */\r\n    RpcClient.prototype.runOperation = function (op, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/scripts/run_operation\"),\r\n                            method: 'POST',\r\n                        }, op)];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RpcClient.prototype.getChainId = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.httpBackend.createRequest({\r\n                        url: this.createURL(\"/chains/\" + this.chain + \"/chain_id\"),\r\n                        method: 'GET',\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param data Data to pack\r\n     * @param options contains generic configuration for rpc calls\r\n     *\r\n     * @description Computes the serialized version of a data expression using the same algorithm as script instruction PACK\r\n     *\r\n     * @example packData({ data: { string: \"test\" }, type: { prim: \"string\" } })\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-scripts-pack-data\r\n     */\r\n    RpcClient.prototype.packData = function (data, _a) {\r\n        var block = (_a === void 0 ? defaultRPCOptions : _a).block;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _b, gas, rest, formattedGas, tryBigNumber;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0: return [4 /*yield*/, this.httpBackend.createRequest({\r\n                            url: this.createURL(\"/chains/\" + this.chain + \"/blocks/\" + block + \"/helpers/scripts/pack_data\"),\r\n                            method: 'POST',\r\n                        }, data)];\r\n                    case 1:\r\n                        _b = _c.sent(), gas = _b.gas, rest = __rest(_b, [\"gas\"]);\r\n                        formattedGas = gas;\r\n                        tryBigNumber = new BigNumber(gas || '');\r\n                        if (!tryBigNumber.isNaN()) {\r\n                            formattedGas = tryBigNumber;\r\n                        }\r\n                        return [2 /*return*/, __assign({ gas: formattedGas }, rest)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Return rpc root url\r\n     */\r\n    RpcClient.prototype.getRpcUrl = function () {\r\n        return this.url;\r\n    };\r\n    return RpcClient;\r\n}());\n\nexport { OpKind, RpcClient };\n//# sourceMappingURL=taquito-rpc.es5.js.map\n"]},"metadata":{},"sourceType":"module"}