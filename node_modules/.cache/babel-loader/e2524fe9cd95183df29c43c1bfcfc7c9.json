{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n  return function (source) {\n    return source.lift(new SequenceEqualOperator(compareTo, comparator));\n  };\n}\n\nvar SequenceEqualOperator = /*@__PURE__*/function () {\n  function SequenceEqualOperator(compareTo, comparator) {\n    this.compareTo = compareTo;\n    this.comparator = comparator;\n  }\n\n  SequenceEqualOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n  };\n\n  return SequenceEqualOperator;\n}();\n\nexport { SequenceEqualOperator };\n\nvar SequenceEqualSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SequenceEqualSubscriber, _super);\n\n  function SequenceEqualSubscriber(destination, compareTo, comparator) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.compareTo = compareTo;\n    _this.comparator = comparator;\n    _this._a = [];\n    _this._b = [];\n    _this._oneComplete = false;\n\n    _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n\n    return _this;\n  }\n\n  SequenceEqualSubscriber.prototype._next = function (value) {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n\n      this.checkValues();\n    }\n  };\n\n  SequenceEqualSubscriber.prototype._complete = function () {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n\n    this.unsubscribe();\n  };\n\n  SequenceEqualSubscriber.prototype.checkValues = function () {\n    var _c = this,\n        _a = _c._a,\n        _b = _c._b,\n        comparator = _c.comparator;\n\n    while (_a.length > 0 && _b.length > 0) {\n      var a = _a.shift();\n\n      var b = _b.shift();\n\n      var areEqual = false;\n\n      try {\n        areEqual = comparator ? comparator(a, b) : a === b;\n      } catch (e) {\n        this.destination.error(e);\n      }\n\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  };\n\n  SequenceEqualSubscriber.prototype.emit = function (value) {\n    var destination = this.destination;\n    destination.next(value);\n    destination.complete();\n  };\n\n  SequenceEqualSubscriber.prototype.nextB = function (value) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n\n      this.checkValues();\n    }\n  };\n\n  SequenceEqualSubscriber.prototype.completeB = function () {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  };\n\n  return SequenceEqualSubscriber;\n}(Subscriber);\n\nexport { SequenceEqualSubscriber };\n\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n\n  function SequenceEqualCompareToSubscriber(destination, parent) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.parent = parent;\n    return _this;\n  }\n\n  SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n    this.parent.nextB(value);\n  };\n\n  SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n    this.parent.error(err);\n    this.unsubscribe();\n  };\n\n  SequenceEqualCompareToSubscriber.prototype._complete = function () {\n    this.parent.completeB();\n    this.unsubscribe();\n  };\n\n  return SequenceEqualCompareToSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,UAAlC,EAA8C;AACjD,SAAO,UAAUC,MAAV,EAAkB;AAAE,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,qBAAJ,CAA0BJ,SAA1B,EAAqCC,UAArC,CAAZ,CAAP;AAAuE,GAAlG;AACH;;AACD,IAAIG,qBAAqB,GAAG,aAAe,YAAY;AACnD,WAASA,qBAAT,CAA+BJ,SAA/B,EAA0CC,UAA1C,EAAsD;AAClD,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACH;;AACDG,uBAAqB,CAACC,SAAtB,CAAgCC,IAAhC,GAAuC,UAAUC,UAAV,EAAsBL,MAAtB,EAA8B;AACjE,WAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,uBAAJ,CAA4BF,UAA5B,EAAwC,KAAKP,SAA7C,EAAwD,KAAKC,UAA7D,CAAjB,CAAP;AACH,GAFD;;AAGA,SAAOG,qBAAP;AACH,CAT0C,EAA3C;;AAUA,SAASA,qBAAT;;AACA,IAAIK,uBAAuB,GAAG,aAAe,UAAUC,MAAV,EAAkB;AAC3Db,SAAO,CAACc,SAAR,CAAkBF,uBAAlB,EAA2CC,MAA3C;;AACA,WAASD,uBAAT,CAAiCG,WAAjC,EAA8CZ,SAA9C,EAAyDC,UAAzD,EAAqE;AACjE,QAAIY,KAAK,GAAGH,MAAM,CAACJ,IAAP,CAAY,IAAZ,EAAkBM,WAAlB,KAAkC,IAA9C;;AACAC,SAAK,CAACb,SAAN,GAAkBA,SAAlB;AACAa,SAAK,CAACZ,UAAN,GAAmBA,UAAnB;AACAY,SAAK,CAACC,EAAN,GAAW,EAAX;AACAD,SAAK,CAACE,EAAN,GAAW,EAAX;AACAF,SAAK,CAACG,YAAN,GAAqB,KAArB;;AACAH,SAAK,CAACD,WAAN,CAAkBK,GAAlB,CAAsBjB,SAAS,CAACQ,SAAV,CAAoB,IAAIU,gCAAJ,CAAqCN,WAArC,EAAkDC,KAAlD,CAApB,CAAtB;;AACA,WAAOA,KAAP;AACH;;AACDJ,yBAAuB,CAACJ,SAAxB,CAAkCc,KAAlC,GAA0C,UAAUC,KAAV,EAAiB;AACvD,QAAI,KAAKJ,YAAL,IAAqB,KAAKD,EAAL,CAAQM,MAAR,KAAmB,CAA5C,EAA+C;AAC3C,WAAKC,IAAL,CAAU,KAAV;AACH,KAFD,MAGK;AACD,WAAKR,EAAL,CAAQS,IAAR,CAAaH,KAAb;;AACA,WAAKI,WAAL;AACH;AACJ,GARD;;AASAf,yBAAuB,CAACJ,SAAxB,CAAkCoB,SAAlC,GAA8C,YAAY;AACtD,QAAI,KAAKT,YAAT,EAAuB;AACnB,WAAKM,IAAL,CAAU,KAAKR,EAAL,CAAQO,MAAR,KAAmB,CAAnB,IAAwB,KAAKN,EAAL,CAAQM,MAAR,KAAmB,CAArD;AACH,KAFD,MAGK;AACD,WAAKL,YAAL,GAAoB,IAApB;AACH;;AACD,SAAKU,WAAL;AACH,GARD;;AASAjB,yBAAuB,CAACJ,SAAxB,CAAkCmB,WAAlC,GAAgD,YAAY;AACxD,QAAIG,EAAE,GAAG,IAAT;AAAA,QAAeb,EAAE,GAAGa,EAAE,CAACb,EAAvB;AAAA,QAA2BC,EAAE,GAAGY,EAAE,CAACZ,EAAnC;AAAA,QAAuCd,UAAU,GAAG0B,EAAE,CAAC1B,UAAvD;;AACA,WAAOa,EAAE,CAACO,MAAH,GAAY,CAAZ,IAAiBN,EAAE,CAACM,MAAH,GAAY,CAApC,EAAuC;AACnC,UAAIO,CAAC,GAAGd,EAAE,CAACe,KAAH,EAAR;;AACA,UAAIC,CAAC,GAAGf,EAAE,CAACc,KAAH,EAAR;;AACA,UAAIE,QAAQ,GAAG,KAAf;;AACA,UAAI;AACAA,gBAAQ,GAAG9B,UAAU,GAAGA,UAAU,CAAC2B,CAAD,EAAIE,CAAJ,CAAb,GAAsBF,CAAC,KAAKE,CAAjD;AACH,OAFD,CAGA,OAAOE,CAAP,EAAU;AACN,aAAKpB,WAAL,CAAiBqB,KAAjB,CAAuBD,CAAvB;AACH;;AACD,UAAI,CAACD,QAAL,EAAe;AACX,aAAKT,IAAL,CAAU,KAAV;AACH;AACJ;AACJ,GAhBD;;AAiBAb,yBAAuB,CAACJ,SAAxB,CAAkCiB,IAAlC,GAAyC,UAAUF,KAAV,EAAiB;AACtD,QAAIR,WAAW,GAAG,KAAKA,WAAvB;AACAA,eAAW,CAACsB,IAAZ,CAAiBd,KAAjB;AACAR,eAAW,CAACuB,QAAZ;AACH,GAJD;;AAKA1B,yBAAuB,CAACJ,SAAxB,CAAkC+B,KAAlC,GAA0C,UAAUhB,KAAV,EAAiB;AACvD,QAAI,KAAKJ,YAAL,IAAqB,KAAKF,EAAL,CAAQO,MAAR,KAAmB,CAA5C,EAA+C;AAC3C,WAAKC,IAAL,CAAU,KAAV;AACH,KAFD,MAGK;AACD,WAAKP,EAAL,CAAQQ,IAAR,CAAaH,KAAb;;AACA,WAAKI,WAAL;AACH;AACJ,GARD;;AASAf,yBAAuB,CAACJ,SAAxB,CAAkCgC,SAAlC,GAA8C,YAAY;AACtD,QAAI,KAAKrB,YAAT,EAAuB;AACnB,WAAKM,IAAL,CAAU,KAAKR,EAAL,CAAQO,MAAR,KAAmB,CAAnB,IAAwB,KAAKN,EAAL,CAAQM,MAAR,KAAmB,CAArD;AACH,KAFD,MAGK;AACD,WAAKL,YAAL,GAAoB,IAApB;AACH;AACJ,GAPD;;AAQA,SAAOP,uBAAP;AACH,CAtE4C,CAsE3CX,UAtE2C,CAA7C;;AAuEA,SAASW,uBAAT;;AACA,IAAIS,gCAAgC,GAAG,aAAe,UAAUR,MAAV,EAAkB;AACpEb,SAAO,CAACc,SAAR,CAAkBO,gCAAlB,EAAoDR,MAApD;;AACA,WAASQ,gCAAT,CAA0CN,WAA1C,EAAuD0B,MAAvD,EAA+D;AAC3D,QAAIzB,KAAK,GAAGH,MAAM,CAACJ,IAAP,CAAY,IAAZ,EAAkBM,WAAlB,KAAkC,IAA9C;;AACAC,SAAK,CAACyB,MAAN,GAAeA,MAAf;AACA,WAAOzB,KAAP;AACH;;AACDK,kCAAgC,CAACb,SAAjC,CAA2Cc,KAA3C,GAAmD,UAAUC,KAAV,EAAiB;AAChE,SAAKkB,MAAL,CAAYF,KAAZ,CAAkBhB,KAAlB;AACH,GAFD;;AAGAF,kCAAgC,CAACb,SAAjC,CAA2CkC,MAA3C,GAAoD,UAAUC,GAAV,EAAe;AAC/D,SAAKF,MAAL,CAAYL,KAAZ,CAAkBO,GAAlB;AACA,SAAKd,WAAL;AACH,GAHD;;AAIAR,kCAAgC,CAACb,SAAjC,CAA2CoB,SAA3C,GAAuD,YAAY;AAC/D,SAAKa,MAAL,CAAYD,SAAZ;AACA,SAAKX,WAAL;AACH,GAHD;;AAIA,SAAOR,gCAAP;AACH,CAnBqD,CAmBpDpB,UAnBoD,CAAtD","names":["tslib_1","Subscriber","sequenceEqual","compareTo","comparator","source","lift","SequenceEqualOperator","prototype","call","subscriber","subscribe","SequenceEqualSubscriber","_super","__extends","destination","_this","_a","_b","_oneComplete","add","SequenceEqualCompareToSubscriber","_next","value","length","emit","push","checkValues","_complete","unsubscribe","_c","a","shift","b","areEqual","e","error","next","complete","nextB","completeB","parent","_error","err"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparator)); };\n}\nvar SequenceEqualOperator = /*@__PURE__*/ (function () {\n    function SequenceEqualOperator(compareTo, comparator) {\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n    };\n    return SequenceEqualOperator;\n}());\nexport { SequenceEqualOperator };\nvar SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparator) {\n        var _this = _super.call(this, destination) || this;\n        _this.compareTo = compareTo;\n        _this.comparator = comparator;\n        _this._a = [];\n        _this._b = [];\n        _this._oneComplete = false;\n        _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n        return _this;\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n        this.unsubscribe();\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparator = _c.comparator;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            try {\n                areEqual = comparator ? comparator(a, b) : a === b;\n            }\n            catch (e) {\n                this.destination.error(e);\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype.completeB = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber));\nexport { SequenceEqualSubscriber };\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n        this.unsubscribe();\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent.completeB();\n        this.unsubscribe();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map\n"]},"metadata":{},"sourceType":"module"}