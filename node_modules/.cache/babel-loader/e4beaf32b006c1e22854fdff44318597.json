{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_.._internal_symbol_iterator,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n\n  var resultSelector = observables[observables.length - 1];\n\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nvar ZipOperator = /*@__PURE__*/function () {\n  function ZipOperator(resultSelector) {\n    this.resultSelector = resultSelector;\n  }\n\n  ZipOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  };\n\n  return ZipOperator;\n}();\n\nexport { ZipOperator };\n\nvar ZipSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ZipSubscriber, _super);\n\n  function ZipSubscriber(destination, resultSelector, values) {\n    if (values === void 0) {\n      values = Object.create(null);\n    }\n\n    var _this = _super.call(this, destination) || this;\n\n    _this.resultSelector = resultSelector;\n    _this.iterators = [];\n    _this.active = 0;\n    _this.resultSelector = typeof resultSelector === 'function' ? resultSelector : undefined;\n    return _this;\n  }\n\n  ZipSubscriber.prototype._next = function (value) {\n    var iterators = this.iterators;\n\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  };\n\n  ZipSubscriber.prototype._complete = function () {\n    var iterators = this.iterators;\n    var len = iterators.length;\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n\n      if (iterator.stillUnsubscribed) {\n        var destination = this.destination;\n        destination.add(iterator.subscribe());\n      } else {\n        this.active--;\n      }\n    }\n  };\n\n  ZipSubscriber.prototype.notifyInactive = function () {\n    this.active--;\n\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  };\n\n  ZipSubscriber.prototype.checkIterators = function () {\n    var iterators = this.iterators;\n    var len = iterators.length;\n    var destination = this.destination;\n\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    var shouldComplete = false;\n    var args = [];\n\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n      var result = iterator.next();\n\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  };\n\n  ZipSubscriber.prototype._tryresultSelector = function (args) {\n    var result;\n\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return ZipSubscriber;\n}(Subscriber);\n\nexport { ZipSubscriber };\n\nvar StaticIterator = /*@__PURE__*/function () {\n  function StaticIterator(iterator) {\n    this.iterator = iterator;\n    this.nextResult = iterator.next();\n  }\n\n  StaticIterator.prototype.hasValue = function () {\n    return true;\n  };\n\n  StaticIterator.prototype.next = function () {\n    var result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  };\n\n  StaticIterator.prototype.hasCompleted = function () {\n    var nextResult = this.nextResult;\n    return Boolean(nextResult && nextResult.done);\n  };\n\n  return StaticIterator;\n}();\n\nvar StaticArrayIterator = /*@__PURE__*/function () {\n  function StaticArrayIterator(array) {\n    this.array = array;\n    this.index = 0;\n    this.length = 0;\n    this.length = array.length;\n  }\n\n  StaticArrayIterator.prototype[Symbol_iterator] = function () {\n    return this;\n  };\n\n  StaticArrayIterator.prototype.next = function (value) {\n    var i = this.index++;\n    var array = this.array;\n    return i < this.length ? {\n      value: array[i],\n      done: false\n    } : {\n      value: null,\n      done: true\n    };\n  };\n\n  StaticArrayIterator.prototype.hasValue = function () {\n    return this.array.length > this.index;\n  };\n\n  StaticArrayIterator.prototype.hasCompleted = function () {\n    return this.array.length === this.index;\n  };\n\n  return StaticArrayIterator;\n}();\n\nvar ZipBufferIterator = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ZipBufferIterator, _super);\n\n  function ZipBufferIterator(destination, parent, observable) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.parent = parent;\n    _this.observable = observable;\n    _this.stillUnsubscribed = true;\n    _this.buffer = [];\n    _this.isComplete = false;\n    return _this;\n  }\n\n  ZipBufferIterator.prototype[Symbol_iterator] = function () {\n    return this;\n  };\n\n  ZipBufferIterator.prototype.next = function () {\n    var buffer = this.buffer;\n\n    if (buffer.length === 0 && this.isComplete) {\n      return {\n        value: null,\n        done: true\n      };\n    } else {\n      return {\n        value: buffer.shift(),\n        done: false\n      };\n    }\n  };\n\n  ZipBufferIterator.prototype.hasValue = function () {\n    return this.buffer.length > 0;\n  };\n\n  ZipBufferIterator.prototype.hasCompleted = function () {\n    return this.buffer.length === 0 && this.isComplete;\n  };\n\n  ZipBufferIterator.prototype.notifyComplete = function () {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  };\n\n  ZipBufferIterator.prototype.notifyNext = function (innerValue) {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  };\n\n  ZipBufferIterator.prototype.subscribe = function () {\n    return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n  };\n\n  return ZipBufferIterator;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAQ,IAAIC,eAArB,QAA4C,gCAA5C;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,EAAuDC,cAAvD,QAA6E,mBAA7E;AACA,OAAO,SAASC,GAAT,GAAe;AAClB,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,eAAW,CAACC,EAAD,CAAX,GAAkBC,SAAS,CAACD,EAAD,CAA3B;AACH;;AACD,MAAIG,cAAc,GAAGJ,WAAW,CAACA,WAAW,CAACG,MAAZ,GAAqB,CAAtB,CAAhC;;AACA,MAAI,OAAOC,cAAP,KAA0B,UAA9B,EAA0C;AACtCJ,eAAW,CAACK,GAAZ;AACH;;AACD,SAAOd,SAAS,CAACS,WAAD,EAAcM,SAAd,CAAT,CAAkCC,IAAlC,CAAuC,IAAIC,WAAJ,CAAgBJ,cAAhB,CAAvC,CAAP;AACH;;AACD,IAAII,WAAW,GAAG,aAAe,YAAY;AACzC,WAASA,WAAT,CAAqBJ,cAArB,EAAqC;AACjC,SAAKA,cAAL,GAAsBA,cAAtB;AACH;;AACDI,aAAW,CAACC,SAAZ,CAAsBC,IAAtB,GAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8B;AACvD,WAAOA,MAAM,CAACC,SAAP,CAAiB,IAAIC,aAAJ,CAAkBH,UAAlB,EAA8B,KAAKP,cAAnC,CAAjB,CAAP;AACH,GAFD;;AAGA,SAAOI,WAAP;AACH,CARgC,EAAjC;;AASA,SAASA,WAAT;;AACA,IAAIM,aAAa,GAAG,aAAe,UAAUC,MAAV,EAAkB;AACjDzB,SAAO,CAAC0B,SAAR,CAAkBF,aAAlB,EAAiCC,MAAjC;;AACA,WAASD,aAAT,CAAuBG,WAAvB,EAAoCb,cAApC,EAAoDc,MAApD,EAA4D;AACxD,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AACnBA,YAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAT;AACH;;AACD,QAAIC,KAAK,GAAGN,MAAM,CAACL,IAAP,CAAY,IAAZ,EAAkBO,WAAlB,KAAkC,IAA9C;;AACAI,SAAK,CAACjB,cAAN,GAAuBA,cAAvB;AACAiB,SAAK,CAACC,SAAN,GAAkB,EAAlB;AACAD,SAAK,CAACE,MAAN,GAAe,CAAf;AACAF,SAAK,CAACjB,cAAN,GAAwB,OAAOA,cAAP,KAA0B,UAA3B,GAAyCA,cAAzC,GAA0DE,SAAjF;AACA,WAAOe,KAAP;AACH;;AACDP,eAAa,CAACL,SAAd,CAAwBe,KAAxB,GAAgC,UAAUC,KAAV,EAAiB;AAC7C,QAAIH,SAAS,GAAG,KAAKA,SAArB;;AACA,QAAI9B,OAAO,CAACiC,KAAD,CAAX,EAAoB;AAChBH,eAAS,CAACI,IAAV,CAAe,IAAIC,mBAAJ,CAAwBF,KAAxB,CAAf;AACH,KAFD,MAGK,IAAI,OAAOA,KAAK,CAAC9B,eAAD,CAAZ,KAAkC,UAAtC,EAAkD;AACnD2B,eAAS,CAACI,IAAV,CAAe,IAAIE,cAAJ,CAAmBH,KAAK,CAAC9B,eAAD,CAAL,EAAnB,CAAf;AACH,KAFI,MAGA;AACD2B,eAAS,CAACI,IAAV,CAAe,IAAIG,iBAAJ,CAAsB,KAAKZ,WAA3B,EAAwC,IAAxC,EAA8CQ,KAA9C,CAAf;AACH;AACJ,GAXD;;AAYAX,eAAa,CAACL,SAAd,CAAwBqB,SAAxB,GAAoC,YAAY;AAC5C,QAAIR,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIS,GAAG,GAAGT,SAAS,CAACnB,MAApB;AACA,SAAK6B,WAAL;;AACA,QAAID,GAAG,KAAK,CAAZ,EAAe;AACX,WAAKd,WAAL,CAAiBgB,QAAjB;AACA;AACH;;AACD,SAAKV,MAAL,GAAcQ,GAAd;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;AAC1B,UAAIxC,QAAQ,GAAG4B,SAAS,CAACY,CAAD,CAAxB;;AACA,UAAIxC,QAAQ,CAACyC,iBAAb,EAAgC;AAC5B,YAAIlB,WAAW,GAAG,KAAKA,WAAvB;AACAA,mBAAW,CAACmB,GAAZ,CAAgB1C,QAAQ,CAACmB,SAAT,EAAhB;AACH,OAHD,MAIK;AACD,aAAKU,MAAL;AACH;AACJ;AACJ,GAnBD;;AAoBAT,eAAa,CAACL,SAAd,CAAwB4B,cAAxB,GAAyC,YAAY;AACjD,SAAKd,MAAL;;AACA,QAAI,KAAKA,MAAL,KAAgB,CAApB,EAAuB;AACnB,WAAKN,WAAL,CAAiBgB,QAAjB;AACH;AACJ,GALD;;AAMAnB,eAAa,CAACL,SAAd,CAAwB6B,cAAxB,GAAyC,YAAY;AACjD,QAAIhB,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIS,GAAG,GAAGT,SAAS,CAACnB,MAApB;AACA,QAAIc,WAAW,GAAG,KAAKA,WAAvB;;AACA,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;AAC1B,UAAIxC,QAAQ,GAAG4B,SAAS,CAACY,CAAD,CAAxB;;AACA,UAAI,OAAOxC,QAAQ,CAAC6C,QAAhB,KAA6B,UAA7B,IAA2C,CAAC7C,QAAQ,CAAC6C,QAAT,EAAhD,EAAqE;AACjE;AACH;AACJ;;AACD,QAAIC,cAAc,GAAG,KAArB;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;AAC1B,UAAIxC,QAAQ,GAAG4B,SAAS,CAACY,CAAD,CAAxB;AACA,UAAIQ,MAAM,GAAGhD,QAAQ,CAACiD,IAAT,EAAb;;AACA,UAAIjD,QAAQ,CAACkD,YAAT,EAAJ,EAA6B;AACzBJ,sBAAc,GAAG,IAAjB;AACH;;AACD,UAAIE,MAAM,CAACG,IAAX,EAAiB;AACb5B,mBAAW,CAACgB,QAAZ;AACA;AACH;;AACDQ,UAAI,CAACf,IAAL,CAAUgB,MAAM,CAACjB,KAAjB;AACH;;AACD,QAAI,KAAKrB,cAAT,EAAyB;AACrB,WAAK0C,kBAAL,CAAwBL,IAAxB;AACH,KAFD,MAGK;AACDxB,iBAAW,CAAC0B,IAAZ,CAAiBF,IAAjB;AACH;;AACD,QAAID,cAAJ,EAAoB;AAChBvB,iBAAW,CAACgB,QAAZ;AACH;AACJ,GAjCD;;AAkCAnB,eAAa,CAACL,SAAd,CAAwBqC,kBAAxB,GAA6C,UAAUL,IAAV,EAAgB;AACzD,QAAIC,MAAJ;;AACA,QAAI;AACAA,YAAM,GAAG,KAAKtC,cAAL,CAAoB2C,KAApB,CAA0B,IAA1B,EAAgCN,IAAhC,CAAT;AACH,KAFD,CAGA,OAAOO,GAAP,EAAY;AACR,WAAK/B,WAAL,CAAiBgC,KAAjB,CAAuBD,GAAvB;AACA;AACH;;AACD,SAAK/B,WAAL,CAAiB0B,IAAjB,CAAsBD,MAAtB;AACH,GAVD;;AAWA,SAAO5B,aAAP;AACH,CAjGkC,CAiGjCrB,UAjGiC,CAAnC;;AAkGA,SAASqB,aAAT;;AACA,IAAIc,cAAc,GAAG,aAAe,YAAY;AAC5C,WAASA,cAAT,CAAwBlC,QAAxB,EAAkC;AAC9B,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKwD,UAAL,GAAkBxD,QAAQ,CAACiD,IAAT,EAAlB;AACH;;AACDf,gBAAc,CAACnB,SAAf,CAAyB8B,QAAzB,GAAoC,YAAY;AAC5C,WAAO,IAAP;AACH,GAFD;;AAGAX,gBAAc,CAACnB,SAAf,CAAyBkC,IAAzB,GAAgC,YAAY;AACxC,QAAID,MAAM,GAAG,KAAKQ,UAAlB;AACA,SAAKA,UAAL,GAAkB,KAAKxD,QAAL,CAAciD,IAAd,EAAlB;AACA,WAAOD,MAAP;AACH,GAJD;;AAKAd,gBAAc,CAACnB,SAAf,CAAyBmC,YAAzB,GAAwC,YAAY;AAChD,QAAIM,UAAU,GAAG,KAAKA,UAAtB;AACA,WAAOC,OAAO,CAACD,UAAU,IAAIA,UAAU,CAACL,IAA1B,CAAd;AACH,GAHD;;AAIA,SAAOjB,cAAP;AACH,CAlBmC,EAApC;;AAmBA,IAAID,mBAAmB,GAAG,aAAe,YAAY;AACjD,WAASA,mBAAT,CAA6ByB,KAA7B,EAAoC;AAChC,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKlD,MAAL,GAAc,CAAd;AACA,SAAKA,MAAL,GAAciD,KAAK,CAACjD,MAApB;AACH;;AACDwB,qBAAmB,CAAClB,SAApB,CAA8Bd,eAA9B,IAAiD,YAAY;AACzD,WAAO,IAAP;AACH,GAFD;;AAGAgC,qBAAmB,CAAClB,SAApB,CAA8BkC,IAA9B,GAAqC,UAAUlB,KAAV,EAAiB;AAClD,QAAIS,CAAC,GAAG,KAAKmB,KAAL,EAAR;AACA,QAAID,KAAK,GAAG,KAAKA,KAAjB;AACA,WAAOlB,CAAC,GAAG,KAAK/B,MAAT,GAAkB;AAAEsB,WAAK,EAAE2B,KAAK,CAAClB,CAAD,CAAd;AAAmBW,UAAI,EAAE;AAAzB,KAAlB,GAAqD;AAAEpB,WAAK,EAAE,IAAT;AAAeoB,UAAI,EAAE;AAArB,KAA5D;AACH,GAJD;;AAKAlB,qBAAmB,CAAClB,SAApB,CAA8B8B,QAA9B,GAAyC,YAAY;AACjD,WAAO,KAAKa,KAAL,CAAWjD,MAAX,GAAoB,KAAKkD,KAAhC;AACH,GAFD;;AAGA1B,qBAAmB,CAAClB,SAApB,CAA8BmC,YAA9B,GAA6C,YAAY;AACrD,WAAO,KAAKQ,KAAL,CAAWjD,MAAX,KAAsB,KAAKkD,KAAlC;AACH,GAFD;;AAGA,SAAO1B,mBAAP;AACH,CAtBwC,EAAzC;;AAuBA,IAAIE,iBAAiB,GAAG,aAAe,UAAUd,MAAV,EAAkB;AACrDzB,SAAO,CAAC0B,SAAR,CAAkBa,iBAAlB,EAAqCd,MAArC;;AACA,WAASc,iBAAT,CAA2BZ,WAA3B,EAAwCqC,MAAxC,EAAgDC,UAAhD,EAA4D;AACxD,QAAIlC,KAAK,GAAGN,MAAM,CAACL,IAAP,CAAY,IAAZ,EAAkBO,WAAlB,KAAkC,IAA9C;;AACAI,SAAK,CAACiC,MAAN,GAAeA,MAAf;AACAjC,SAAK,CAACkC,UAAN,GAAmBA,UAAnB;AACAlC,SAAK,CAACc,iBAAN,GAA0B,IAA1B;AACAd,SAAK,CAACmC,MAAN,GAAe,EAAf;AACAnC,SAAK,CAACoC,UAAN,GAAmB,KAAnB;AACA,WAAOpC,KAAP;AACH;;AACDQ,mBAAiB,CAACpB,SAAlB,CAA4Bd,eAA5B,IAA+C,YAAY;AACvD,WAAO,IAAP;AACH,GAFD;;AAGAkC,mBAAiB,CAACpB,SAAlB,CAA4BkC,IAA5B,GAAmC,YAAY;AAC3C,QAAIa,MAAM,GAAG,KAAKA,MAAlB;;AACA,QAAIA,MAAM,CAACrD,MAAP,KAAkB,CAAlB,IAAuB,KAAKsD,UAAhC,EAA4C;AACxC,aAAO;AAAEhC,aAAK,EAAE,IAAT;AAAeoB,YAAI,EAAE;AAArB,OAAP;AACH,KAFD,MAGK;AACD,aAAO;AAAEpB,aAAK,EAAE+B,MAAM,CAACE,KAAP,EAAT;AAAyBb,YAAI,EAAE;AAA/B,OAAP;AACH;AACJ,GARD;;AASAhB,mBAAiB,CAACpB,SAAlB,CAA4B8B,QAA5B,GAAuC,YAAY;AAC/C,WAAO,KAAKiB,MAAL,CAAYrD,MAAZ,GAAqB,CAA5B;AACH,GAFD;;AAGA0B,mBAAiB,CAACpB,SAAlB,CAA4BmC,YAA5B,GAA2C,YAAY;AACnD,WAAO,KAAKY,MAAL,CAAYrD,MAAZ,KAAuB,CAAvB,IAA4B,KAAKsD,UAAxC;AACH,GAFD;;AAGA5B,mBAAiB,CAACpB,SAAlB,CAA4BkD,cAA5B,GAA6C,YAAY;AACrD,QAAI,KAAKH,MAAL,CAAYrD,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,WAAKsD,UAAL,GAAkB,IAAlB;AACA,WAAKH,MAAL,CAAYjB,cAAZ;AACH,KAHD,MAIK;AACD,WAAKpB,WAAL,CAAiBgB,QAAjB;AACH;AACJ,GARD;;AASAJ,mBAAiB,CAACpB,SAAlB,CAA4BmD,UAA5B,GAAyC,UAAUC,UAAV,EAAsB;AAC3D,SAAKL,MAAL,CAAY9B,IAAZ,CAAiBmC,UAAjB;AACA,SAAKP,MAAL,CAAYhB,cAAZ;AACH,GAHD;;AAIAT,mBAAiB,CAACpB,SAAlB,CAA4BI,SAA5B,GAAwC,YAAY;AAChD,WAAOf,cAAc,CAAC,KAAKyD,UAAN,EAAkB,IAAI1D,qBAAJ,CAA0B,IAA1B,CAAlB,CAArB;AACH,GAFD;;AAGA,SAAOgC,iBAAP;AACH,CA9CsC,CA8CrCjC,qBA9CqC,CAAvC","names":["tslib_1","fromArray","isArray","Subscriber","iterator","Symbol_iterator","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","zip","observables","_i","arguments","length","resultSelector","pop","undefined","lift","ZipOperator","prototype","call","subscriber","source","subscribe","ZipSubscriber","_super","__extends","destination","values","Object","create","_this","iterators","active","_next","value","push","StaticArrayIterator","StaticIterator","ZipBufferIterator","_complete","len","unsubscribe","complete","i","stillUnsubscribed","add","notifyInactive","checkIterators","hasValue","shouldComplete","args","result","next","hasCompleted","done","_tryresultSelector","apply","err","error","nextResult","Boolean","array","index","parent","observable","buffer","isComplete","shift","notifyComplete","notifyNext","innerValue"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/zip.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_.._internal_symbol_iterator,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nvar ZipOperator = /*@__PURE__*/ (function () {\n    function ZipOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    };\n    return ZipOperator;\n}());\nexport { ZipOperator };\nvar ZipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, resultSelector, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                var destination = this.destination;\n                destination.add(iterator.subscribe());\n            }\n            else {\n                this.active--;\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nexport { ZipSubscriber };\nvar StaticIterator = /*@__PURE__*/ (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return Boolean(nextResult && nextResult.done);\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\nvar ZipBufferIterator = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (innerValue) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function () {\n        return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n    };\n    return ZipBufferIterator;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=zip.js.map\n"]},"metadata":{},"sourceType":"module"}