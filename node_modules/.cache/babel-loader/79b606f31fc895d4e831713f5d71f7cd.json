{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/* eslint-disable prefer-arrow/prefer-arrow-functions */\n\n\nfunction fixArrayType(array) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return array;\n}\n/* eslint-enable prefer-arrow/prefer-arrow-functions */\n\n\nexport class StorageManager {\n  constructor(storage, storageKey) {\n    this.storage = storage;\n    this.storageKey = storageKey;\n  }\n\n  getAll() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storage.get(this.storageKey);\n    });\n  }\n\n  getOne(predicate) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const entities = yield this.storage.get(this.storageKey);\n      return fixArrayType(entities).find(predicate);\n    });\n  }\n\n  addOne(element, predicate) {\n    let overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    return __awaiter(this, void 0, void 0, function* () {\n      const entities = yield this.storage.get(this.storageKey);\n\n      if (!fixArrayType(entities).some(predicate)) {\n        fixArrayType(entities).push(element);\n      } else if (overwrite) {\n        for (let i = 0; i < entities.length; i++) {\n          if (predicate(fixArrayType(entities)[i])) {\n            entities[i] = element;\n          }\n        }\n      }\n\n      return this.storage.set(this.storageKey, entities);\n    });\n  }\n\n  remove(predicate) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const entities = yield this.storage.get(this.storageKey);\n      const filteredEntities = fixArrayType(entities).filter(entity => !predicate(entity)); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      return this.storage.set(this.storageKey, filteredEntities);\n    });\n  }\n\n  removeAll() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storage.delete(this.storageKey);\n    });\n  }\n\n}","map":{"version":3,"mappings":"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","names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","fixArrayType","array","StorageManager","constructor","storage","storageKey","getAll","get","getOne","predicate","entities","find","addOne","element","overwrite","some","push","i","length","set","remove","filteredEntities","filter","entity","removeAll","delete"],"sourceRoot":"","sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@airgap/beacon-sdk/dist/esm/managers/StorageManager.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable prefer-arrow/prefer-arrow-functions */\nfunction fixArrayType(array) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return array;\n}\n/* eslint-enable prefer-arrow/prefer-arrow-functions */\nexport class StorageManager {\n    constructor(storage, storageKey) {\n        this.storage = storage;\n        this.storageKey = storageKey;\n    }\n    getAll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.get(this.storageKey);\n        });\n    }\n    getOne(predicate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entities = yield this.storage.get(this.storageKey);\n            return fixArrayType(entities).find(predicate);\n        });\n    }\n    addOne(element, predicate, overwrite = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entities = yield this.storage.get(this.storageKey);\n            if (!fixArrayType(entities).some(predicate)) {\n                fixArrayType(entities).push(element);\n            }\n            else if (overwrite) {\n                for (let i = 0; i < entities.length; i++) {\n                    if (predicate(fixArrayType(entities)[i])) {\n                        entities[i] = element;\n                    }\n                }\n            }\n            return this.storage.set(this.storageKey, entities);\n        });\n    }\n    remove(predicate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entities = yield this.storage.get(this.storageKey);\n            const filteredEntities = fixArrayType(entities).filter((entity) => !predicate(entity));\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return this.storage.set(this.storageKey, filteredEntities);\n        });\n    }\n    removeAll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.delete(this.storageKey);\n        });\n    }\n}\n//# sourceMappingURL=StorageManager.js.map"]},"metadata":{},"sourceType":"module"}