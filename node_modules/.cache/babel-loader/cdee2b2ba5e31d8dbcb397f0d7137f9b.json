{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { filterUndefined, memoizedGet as get, mergeWith, runIfFn } from \"@chakra-ui/utils\";\nimport { useMemo, useRef } from \"react\";\nimport isEqual from \"react-fast-compare\";\nimport { useTheme } from \"./providers\";\nimport { omitThemingProps } from \"./system.utils\";\nexport function useChakra() {\n  var colorModeResult = useColorMode();\n  var theme = useTheme();\n  return _extends({}, colorModeResult, {\n    theme\n  });\n}\nexport function useToken(scale, token, fallback) {\n  var theme = useTheme();\n\n  if (Array.isArray(token)) {\n    var fallbackArr = [];\n\n    if (fallback) {\n      fallbackArr = Array.isArray(fallback) ? fallback : [fallback];\n    }\n\n    return token.map((token, index) => {\n      var _fallbackArr$index;\n\n      var path = scale + \".\" + token;\n      return get(theme, path, (_fallbackArr$index = fallbackArr[index]) != null ? _fallbackArr$index : token);\n    });\n  }\n\n  var path = scale + \".\" + token;\n  return get(theme, path, fallback != null ? fallback : token);\n}\nexport function useProps(themeKey, props) {\n  var _theme$components, _styleConfig$defaultP;\n\n  var {\n    theme,\n    colorMode\n  } = useChakra();\n  var styleConfig = props.styleConfig || ((_theme$components = theme.components) == null ? void 0 : _theme$components[themeKey]);\n  var defaultProps = (_styleConfig$defaultP = styleConfig == null ? void 0 : styleConfig.defaultProps) != null ? _styleConfig$defaultP : {};\n\n  var propsWithDefault = _extends({}, defaultProps, filterUndefined(props));\n\n  var stylesRef = useRef({});\n  var mergedProps = mergeWith({}, propsWithDefault, {\n    theme,\n    colorMode\n  });\n  var memoizedStyles = useMemo(() => {\n    if (styleConfig) {\n      var _styleConfig$baseStyl, _styleConfig$variants, _styleConfig$variants2, _styleConfig$sizes, _styleConfig$sizes2;\n\n      var baseStyles = runIfFn((_styleConfig$baseStyl = styleConfig.baseStyle) != null ? _styleConfig$baseStyl : {}, mergedProps);\n      var variants = runIfFn((_styleConfig$variants = (_styleConfig$variants2 = styleConfig.variants) == null ? void 0 : _styleConfig$variants2[mergedProps.variant]) != null ? _styleConfig$variants : {}, mergedProps);\n      var sizes = runIfFn((_styleConfig$sizes = (_styleConfig$sizes2 = styleConfig.sizes) == null ? void 0 : _styleConfig$sizes2[mergedProps.size]) != null ? _styleConfig$sizes : {}, mergedProps);\n      var styles = mergeWith(baseStyles, sizes, variants);\n\n      if (styleConfig.parts) {\n        styleConfig.parts.forEach(part => {\n          var _styles$part;\n\n          styles[part] = (_styles$part = styles[part]) != null ? _styles$part : {};\n        });\n      }\n\n      var isStyleEqual = isEqual(stylesRef.current, styles);\n\n      if (!isStyleEqual) {\n        stylesRef.current = styles;\n      }\n    }\n\n    return stylesRef.current;\n  }, [styleConfig, mergedProps]);\n  return {\n    styles: memoizedStyles,\n    props: omitThemingProps(propsWithDefault)\n  };\n}","map":{"version":3,"mappings":"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","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useColorMode","filterUndefined","memoizedGet","get","mergeWith","runIfFn","useMemo","useRef","isEqual","useTheme","omitThemingProps","useChakra","colorModeResult","theme","useToken","scale","token","fallback","Array","isArray","fallbackArr","map","index","_fallbackArr$index","path","useProps","themeKey","props","_theme$components","_styleConfig$defaultP","colorMode","styleConfig","components","defaultProps","propsWithDefault","stylesRef","mergedProps","memoizedStyles","_styleConfig$baseStyl","_styleConfig$variants","_styleConfig$variants2","_styleConfig$sizes","_styleConfig$sizes2","baseStyles","baseStyle","variants","variant","sizes","size","styles","parts","forEach","part","_styles$part","isStyleEqual","current"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/skeleton/node_modules/@chakra-ui/system/dist/esm/hooks.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { filterUndefined, memoizedGet as get, mergeWith, runIfFn } from \"@chakra-ui/utils\";\nimport { useMemo, useRef } from \"react\";\nimport isEqual from \"react-fast-compare\";\nimport { useTheme } from \"./providers\";\nimport { omitThemingProps } from \"./system.utils\";\nexport function useChakra() {\n  var colorModeResult = useColorMode();\n  var theme = useTheme();\n  return _extends({}, colorModeResult, {\n    theme\n  });\n}\nexport function useToken(scale, token, fallback) {\n  var theme = useTheme();\n\n  if (Array.isArray(token)) {\n    var fallbackArr = [];\n\n    if (fallback) {\n      fallbackArr = Array.isArray(fallback) ? fallback : [fallback];\n    }\n\n    return token.map((token, index) => {\n      var _fallbackArr$index;\n\n      var path = scale + \".\" + token;\n      return get(theme, path, (_fallbackArr$index = fallbackArr[index]) != null ? _fallbackArr$index : token);\n    });\n  }\n\n  var path = scale + \".\" + token;\n  return get(theme, path, fallback != null ? fallback : token);\n}\nexport function useProps(themeKey, props) {\n  var _theme$components, _styleConfig$defaultP;\n\n  var {\n    theme,\n    colorMode\n  } = useChakra();\n  var styleConfig = props.styleConfig || ((_theme$components = theme.components) == null ? void 0 : _theme$components[themeKey]);\n  var defaultProps = (_styleConfig$defaultP = styleConfig == null ? void 0 : styleConfig.defaultProps) != null ? _styleConfig$defaultP : {};\n\n  var propsWithDefault = _extends({}, defaultProps, filterUndefined(props));\n\n  var stylesRef = useRef({});\n  var mergedProps = mergeWith({}, propsWithDefault, {\n    theme,\n    colorMode\n  });\n  var memoizedStyles = useMemo(() => {\n    if (styleConfig) {\n      var _styleConfig$baseStyl, _styleConfig$variants, _styleConfig$variants2, _styleConfig$sizes, _styleConfig$sizes2;\n\n      var baseStyles = runIfFn((_styleConfig$baseStyl = styleConfig.baseStyle) != null ? _styleConfig$baseStyl : {}, mergedProps);\n      var variants = runIfFn((_styleConfig$variants = (_styleConfig$variants2 = styleConfig.variants) == null ? void 0 : _styleConfig$variants2[mergedProps.variant]) != null ? _styleConfig$variants : {}, mergedProps);\n      var sizes = runIfFn((_styleConfig$sizes = (_styleConfig$sizes2 = styleConfig.sizes) == null ? void 0 : _styleConfig$sizes2[mergedProps.size]) != null ? _styleConfig$sizes : {}, mergedProps);\n      var styles = mergeWith(baseStyles, sizes, variants);\n\n      if (styleConfig.parts) {\n        styleConfig.parts.forEach(part => {\n          var _styles$part;\n\n          styles[part] = (_styles$part = styles[part]) != null ? _styles$part : {};\n        });\n      }\n\n      var isStyleEqual = isEqual(stylesRef.current, styles);\n\n      if (!isStyleEqual) {\n        stylesRef.current = styles;\n      }\n    }\n\n    return stylesRef.current;\n  }, [styleConfig, mergedProps]);\n  return {\n    styles: memoizedStyles,\n    props: omitThemingProps(propsWithDefault)\n  };\n}\n//# sourceMappingURL=hooks.js.map"]},"metadata":{},"sourceType":"module"}