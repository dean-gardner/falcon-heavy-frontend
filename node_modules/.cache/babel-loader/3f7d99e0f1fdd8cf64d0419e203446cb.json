{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery) {\n  if (startWindowEvery === void 0) {\n    startWindowEvery = 0;\n  }\n\n  return function windowCountOperatorFunction(source) {\n    return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n  };\n}\n\nvar WindowCountOperator = /*@__PURE__*/function () {\n  function WindowCountOperator(windowSize, startWindowEvery) {\n    this.windowSize = windowSize;\n    this.startWindowEvery = startWindowEvery;\n  }\n\n  WindowCountOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  };\n\n  return WindowCountOperator;\n}();\n\nvar WindowCountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WindowCountSubscriber, _super);\n\n  function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.destination = destination;\n    _this.windowSize = windowSize;\n    _this.startWindowEvery = startWindowEvery;\n    _this.windows = [new Subject()];\n    _this.count = 0;\n    destination.next(_this.windows[0]);\n    return _this;\n  }\n\n  WindowCountSubscriber.prototype._next = function (value) {\n    var startWindowEvery = this.startWindowEvery > 0 ? this.startWindowEvery : this.windowSize;\n    var destination = this.destination;\n    var windowSize = this.windowSize;\n    var windows = this.windows;\n    var len = windows.length;\n\n    for (var i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n\n    var c = this.count - windowSize + 1;\n\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      var window_1 = new Subject();\n      windows.push(window_1);\n      destination.next(window_1);\n    }\n  };\n\n  WindowCountSubscriber.prototype._error = function (err) {\n    var windows = this.windows;\n\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n\n    this.destination.error(err);\n  };\n\n  WindowCountSubscriber.prototype._complete = function () {\n    var windows = this.windows;\n\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n\n    this.destination.complete();\n  };\n\n  WindowCountSubscriber.prototype._unsubscribe = function () {\n    this.count = 0;\n    this.windows = null;\n  };\n\n  return WindowCountSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":"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","names":["tslib_1","Subscriber","Subject","windowCount","windowSize","startWindowEvery","windowCountOperatorFunction","source","lift","WindowCountOperator","prototype","call","subscriber","subscribe","WindowCountSubscriber","_super","__extends","destination","_this","windows","count","next","_next","value","len","length","i","closed","c","shift","complete","window_1","push","_error","err","error","_complete","_unsubscribe"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/windowCount.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) {\n        startWindowEvery = 0;\n    }\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nvar WindowCountOperator = /*@__PURE__*/ (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\nvar WindowCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowSize = windowSize;\n        _this.startWindowEvery = startWindowEvery;\n        _this.windows = [new Subject()];\n        _this.count = 0;\n        destination.next(_this.windows[0]);\n        return _this;\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=windowCount.js.map\n"]},"metadata":{},"sourceType":"module"}