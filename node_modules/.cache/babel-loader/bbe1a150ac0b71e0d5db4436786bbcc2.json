{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) {\n          return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n        }));\n      };\n    }\n  }\n\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var params = {\n      subject: undefined,\n      args: args,\n      callbackFunc: callbackFunc,\n      scheduler: scheduler,\n      context: this\n    };\n    return new Observable(function (subscriber) {\n      var context = params.context;\n      var subject = params.subject;\n\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject();\n\n          var handler = function () {\n            var innerArgs = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              innerArgs[_i] = arguments[_i];\n            }\n\n            var err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, args.concat([handler]));\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule(dispatch, 0, {\n          params: params,\n          subscriber: subscriber,\n          context: context\n        });\n      }\n    });\n  };\n}\n\nfunction dispatch(state) {\n  var _this = this;\n\n  var params = state.params,\n      subscriber = state.subscriber,\n      context = state.context;\n  var callbackFunc = params.callbackFunc,\n      args = params.args,\n      scheduler = params.scheduler;\n  var subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject();\n\n    var handler = function () {\n      var innerArgs = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        innerArgs[_i] = arguments[_i];\n      }\n\n      var err = innerArgs.shift();\n\n      if (err) {\n        _this.add(scheduler.schedule(dispatchError, 0, {\n          err: err,\n          subject: subject\n        }));\n      } else {\n        var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n\n        _this.add(scheduler.schedule(dispatchNext, 0, {\n          value: value,\n          subject: subject\n        }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, args.concat([handler]));\n    } catch (err) {\n      this.add(scheduler.schedule(dispatchError, 0, {\n        err: err,\n        subject: subject\n      }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\nfunction dispatchNext(arg) {\n  var value = arg.value,\n      subject = arg.subject;\n  subject.next(value);\n  subject.complete();\n}\n\nfunction dispatchError(arg) {\n  var err = arg.err,\n      subject = arg.subject;\n  subject.error(err);\n}","map":{"version":3,"mappings":"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","names":["Observable","AsyncSubject","map","canReportError","isScheduler","isArray","bindNodeCallback","callbackFunc","resultSelector","scheduler","args","_i","arguments","length","apply","pipe","params","subject","undefined","context","subscriber","handler","innerArgs","err","shift","error","next","complete","concat","console","warn","subscribe","schedule","dispatch","state","_this","add","dispatchError","value","dispatchNext","arg"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js"],"sourcesContent":["/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var params = {\n            subject: undefined,\n            args: args,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n            context: this,\n        };\n        return new Observable(function (subscriber) {\n            var context = params.context;\n            var subject = params.subject;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        var err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    var _this = this;\n    var params = state.params, subscriber = state.subscriber, context = state.context;\n    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var err = innerArgs.shift();\n            if (err) {\n                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map\n"]},"metadata":{},"sourceType":"module"}