{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { myWindow } from '../MockWindow';\nimport { ExtensionMessageTarget, TransportType } from '..';\nimport { Origin } from '../types/Origin';\nimport { Transport } from './Transport';\nexport class PostMessageTransport extends Transport {\n  constructor(name) {\n    super(name);\n    this.type = TransportType.POST_MESSAGE;\n    this.init().catch(error => console.error(error));\n  }\n\n  static isAvailable() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise(resolve => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const fn = event => {\n          const data = event.data;\n\n          if (data && data.payload === 'pong') {\n            resolve(true);\n            myWindow.removeEventListener('message', fn);\n          }\n        };\n\n        myWindow.addEventListener('message', fn);\n        const message = {\n          target: ExtensionMessageTarget.EXTENSION,\n          payload: 'ping'\n        }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        myWindow.postMessage(message, '*');\n      });\n    });\n  }\n\n  init() {\n    return __awaiter(this, void 0, void 0, function* () {\n      myWindow.addEventListener('message', message => {\n        if (typeof message === 'object' && message) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const data = message.data;\n\n          if (data.message && data.message.target === ExtensionMessageTarget.PAGE) {\n            this.notifyListeners(data.message.payload, {\n              origin: Origin.EXTENSION,\n              id: data.sender.id || ''\n            }).catch(error => {\n              throw error;\n            });\n          }\n        }\n      });\n    });\n  }\n\n  send(message, _recipient) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const data = {\n        target: ExtensionMessageTarget.EXTENSION,\n        payload: message\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      myWindow.postMessage(data, '*');\n    });\n  }\n\n}","map":{"version":3,"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,aAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,YAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,cAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,YAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,cAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,YAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,QAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,SAASO,QAAT,QAAyB,eAAzB;AACA,SAASC,sBAAT,EAAiCC,aAAjC,QAAsD,IAAtD;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,MAAMC,oBAAN,SAAmCD,SAAnC,CAA6C;AAChDE,aAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;AACA,SAAKC,IAAL,GAAYN,aAAa,CAACO,YAA1B;AACA,SAAKC,IAAL,GAAYC,KAAZ,CAAmBC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAA7B;AACH;;AACiB,SAAXE,WAAW,GAAG;AACjB,WAAOjC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,aAAO,IAAIQ,OAAJ,CAAaD,OAAD,IAAa;AAC5B;AACA,cAAM2B,EAAE,GAAIC,KAAD,IAAW;AAClB,gBAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;;AACA,cAAIA,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiB,MAA7B,EAAqC;AACjC9B,mBAAO,CAAC,IAAD,CAAP;AACAY,oBAAQ,CAACmB,mBAAT,CAA6B,SAA7B,EAAwCJ,EAAxC;AACH;AACJ,SAND;;AAOAf,gBAAQ,CAACoB,gBAAT,CAA0B,SAA1B,EAAqCL,EAArC;AACA,cAAMM,OAAO,GAAG;AACZC,gBAAM,EAAErB,sBAAsB,CAACsB,SADnB;AAEZL,iBAAO,EAAE;AAFG,SAAhB,CAV4B,CAc5B;;AACAlB,gBAAQ,CAACwB,WAAT,CAAqBH,OAArB,EAA8B,GAA9B;AACH,OAhBM,CAAP;AAiBH,KAlBe,CAAhB;AAmBH;;AACDX,MAAI,GAAG;AACH,WAAO7B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChDmB,cAAQ,CAACoB,gBAAT,CAA0B,SAA1B,EAAsCC,OAAD,IAAa;AAC9C,YAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+BA,OAAnC,EAA4C;AACxC;AACA,gBAAMJ,IAAI,GAAGI,OAAO,CAACJ,IAArB;;AACA,cAAIA,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACI,OAAL,CAAaC,MAAb,KAAwBrB,sBAAsB,CAACwB,IAAnE,EAAyE;AACrE,iBAAKC,eAAL,CAAqBT,IAAI,CAACI,OAAL,CAAaH,OAAlC,EAA2C;AACvCS,oBAAM,EAAExB,MAAM,CAACoB,SADwB;AAEvCK,gBAAE,EAAEX,IAAI,CAACY,MAAL,CAAYD,EAAZ,IAAkB;AAFiB,aAA3C,EAGGjB,KAHH,CAGUC,KAAD,IAAW;AAChB,oBAAMA,KAAN;AACH,aALD;AAMH;AACJ;AACJ,OAbD;AAcH,KAfe,CAAhB;AAgBH;;AACDkB,MAAI,CAACT,OAAD,EAAUU,UAAV,EAAsB;AACtB,WAAOlD,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,YAAMoC,IAAI,GAAG;AACTK,cAAM,EAAErB,sBAAsB,CAACsB,SADtB;AAETL,eAAO,EAAEG;AAFA,OAAb,CADgD,CAKhD;;AACArB,cAAQ,CAACwB,WAAT,CAAqBP,IAArB,EAA2B,GAA3B;AACH,KAPe,CAAhB;AAQH;;AAtD+C","names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","myWindow","ExtensionMessageTarget","TransportType","Origin","Transport","PostMessageTransport","constructor","name","type","POST_MESSAGE","init","catch","error","console","isAvailable","fn","event","data","payload","removeEventListener","addEventListener","message","target","EXTENSION","postMessage","PAGE","notifyListeners","origin","id","sender","send","_recipient"],"sourceRoot":"","sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@airgap/beacon-sdk/dist/esm/transports/PostMessageTransport.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { myWindow } from '../MockWindow';\nimport { ExtensionMessageTarget, TransportType } from '..';\nimport { Origin } from '../types/Origin';\nimport { Transport } from './Transport';\nexport class PostMessageTransport extends Transport {\n    constructor(name) {\n        super(name);\n        this.type = TransportType.POST_MESSAGE;\n        this.init().catch((error) => console.error(error));\n    }\n    static isAvailable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const fn = (event) => {\n                    const data = event.data;\n                    if (data && data.payload === 'pong') {\n                        resolve(true);\n                        myWindow.removeEventListener('message', fn);\n                    }\n                };\n                myWindow.addEventListener('message', fn);\n                const message = {\n                    target: ExtensionMessageTarget.EXTENSION,\n                    payload: 'ping'\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                myWindow.postMessage(message, '*');\n            });\n        });\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            myWindow.addEventListener('message', (message) => {\n                if (typeof message === 'object' && message) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const data = message.data;\n                    if (data.message && data.message.target === ExtensionMessageTarget.PAGE) {\n                        this.notifyListeners(data.message.payload, {\n                            origin: Origin.EXTENSION,\n                            id: data.sender.id || ''\n                        }).catch((error) => {\n                            throw error;\n                        });\n                    }\n                }\n            });\n        });\n    }\n    send(message, _recipient) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = {\n                target: ExtensionMessageTarget.EXTENSION,\n                payload: message\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            myWindow.postMessage(data, '*');\n        });\n    }\n}\n//# sourceMappingURL=PostMessageTransport.js.map"]},"metadata":{},"sourceType":"module"}