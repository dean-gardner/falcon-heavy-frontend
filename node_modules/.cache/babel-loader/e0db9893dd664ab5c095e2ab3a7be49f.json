{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { FocusLock } from \"@chakra-ui/focus-lock\";\nimport { Portal } from \"@chakra-ui/portal\";\nimport { chakra, forwardRef, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { fadeConfig } from \"@chakra-ui/transition\";\nimport { callAllHandlers, createContext, cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion, usePresence } from \"framer-motion\";\nimport * as React from \"react\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { ModalTransition } from \"./modal-transition\";\nimport { useModal } from \"./use-modal\";\nvar [ModalContextProvider, useModalContext] = createContext({\n  strict: true,\n  name: \"ModalContext\",\n  errorMessage: \"useModalContext: `context` is undefined. Seems you forgot to wrap modal components in `<Modal />`\"\n});\nexport { ModalContextProvider, useModalContext };\n/**\n * Modal provides context, theming, and accessibility properties\n * to all other modal components.\n *\n * It doesn't render any DOM node.\n */\n\nexport var Modal = props => {\n  var {\n    getContainer,\n    children,\n    autoFocus,\n    trapFocus,\n    initialFocusRef,\n    finalFocusRef,\n    returnFocusOnClose,\n    blockScrollOnMount,\n    allowPinchZoom,\n    preserveScrollBarGap,\n    motionPreset\n  } = props;\n  var styles = useMultiStyleConfig(\"Modal\", props);\n  var modal = useModal(props);\n\n  var context = _extends({}, modal, {\n    autoFocus,\n    trapFocus,\n    initialFocusRef,\n    finalFocusRef,\n    returnFocusOnClose,\n    blockScrollOnMount,\n    allowPinchZoom,\n    preserveScrollBarGap,\n    motionPreset\n  });\n\n  return /*#__PURE__*/React.createElement(ModalContextProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(AnimatePresence, null, context.isOpen && /*#__PURE__*/React.createElement(Portal, {\n    getContainer: getContainer\n  }, children))));\n};\nModal.defaultProps = {\n  returnFocusOnClose: true,\n  scrollBehavior: \"outside\",\n  trapFocus: true,\n  autoFocus: true,\n  blockScrollOnMount: true,\n  allowPinchZoom: false,\n  motionPreset: \"scale\"\n};\n\nif (__DEV__) {\n  Modal.displayName = \"Modal\";\n}\n\nvar Motion = chakra(motion.div);\n/**\n * ModalContent is used to group modal's content. It has all the\n * necessary `aria-*` properties to indicate that it is a modal\n */\n\nexport var ModalContent = /*#__PURE__*/forwardRef(function ModalContent(props, ref) {\n  var {\n    className,\n    children,\n    containerProps: rootProps\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\", \"children\", \"containerProps\"]);\n\n  var {\n    getDialogProps,\n    getDialogContainerProps\n  } = useModalContext();\n  var dialogProps = getDialogProps(rest, ref);\n  var containerProps = getDialogContainerProps(rootProps);\n\n  var _className = cx(\"chakra-modal__content\", className);\n\n  var styles = useStyles();\n\n  var dialogStyles = _extends({\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    width: \"100%\",\n    outline: 0\n  }, styles.dialog);\n\n  var dialogContainerStyles = _extends({\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"100vh\",\n    position: \"fixed\",\n    left: 0,\n    top: 0\n  }, styles.dialogContainer);\n\n  var {\n    motionPreset\n  } = useModalContext();\n  return /*#__PURE__*/React.createElement(ModalFocusScope, null, /*#__PURE__*/React.createElement(chakra.div, _extends({}, containerProps, {\n    className: \"chakra-modal__content-container\",\n    __css: dialogContainerStyles\n  }), /*#__PURE__*/React.createElement(ModalTransition, _extends({\n    preset: motionPreset,\n    className: _className\n  }, dialogProps, {\n    __css: dialogStyles\n  }), children)));\n});\n\nif (__DEV__) {\n  ModalContent.displayName = \"ModalContent\";\n}\n\nexport function ModalFocusScope(props) {\n  var {\n    autoFocus,\n    trapFocus,\n    dialogRef,\n    initialFocusRef,\n    blockScrollOnMount,\n    allowPinchZoom,\n    finalFocusRef,\n    returnFocusOnClose,\n    preserveScrollBarGap\n  } = useModalContext();\n  var [isPresent, safeToRemove] = usePresence();\n  React.useEffect(() => {\n    if (!isPresent && safeToRemove) {\n      setTimeout(safeToRemove);\n    }\n  }, [isPresent, safeToRemove]);\n  return /*#__PURE__*/React.createElement(FocusLock, {\n    autoFocus: autoFocus,\n    isDisabled: !trapFocus,\n    initialFocusRef: initialFocusRef,\n    finalFocusRef: finalFocusRef,\n    restoreFocus: returnFocusOnClose,\n    contentRef: dialogRef\n  }, /*#__PURE__*/React.createElement(RemoveScroll, {\n    removeScrollBar: !preserveScrollBarGap,\n    allowPinchZoom: allowPinchZoom,\n    enabled: blockScrollOnMount,\n    forwardProps: true\n  }, props.children));\n}\n/**\n * ModalOverlay renders a backdrop behind the modal. It is\n * also used as a wrapper for the modal content for better positioning.\n *\n * @see Docs https://chakra-ui.com/components/modal\n */\n\nexport var ModalOverlay = /*#__PURE__*/forwardRef(function ModalOverlay(props, ref) {\n  var {\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var _className = cx(\"chakra-modal__overlay\", className);\n\n  var styles = useStyles();\n\n  var overlayStyle = _extends({\n    pos: \"fixed\",\n    left: \"0\",\n    top: \"0\",\n    w: \"100vw\",\n    h: \"100vh\"\n  }, styles.overlay);\n\n  return /*#__PURE__*/React.createElement(Motion, _extends({}, fadeConfig, {\n    __css: overlayStyle,\n    ref: ref,\n    className: _className\n  }, rest));\n});\n\nif (__DEV__) {\n  ModalOverlay.displayName = \"ModalOverlay\";\n}\n/**\n * ModalHeader\n *\n * React component that houses the title of the modal.\n *\n * @see Docs https://chakra-ui.com/components/modal\n */\n\n\nexport var ModalHeader = /*#__PURE__*/forwardRef(function ModalHeader(props, ref) {\n  var {\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var {\n    headerId,\n    setHeaderMounted\n  } = useModalContext();\n  /**\n   * Notify us if this component was rendered or used\n   * so we can append `aria-labelledby` automatically\n   */\n\n  React.useEffect(() => {\n    setHeaderMounted(true);\n    return () => setHeaderMounted(false);\n  }, [setHeaderMounted]);\n\n  var _className = cx(\"chakra-modal__header\", className);\n\n  var styles = useStyles();\n\n  var headerStyles = _extends({\n    flex: 0\n  }, styles.header);\n\n  return /*#__PURE__*/React.createElement(chakra.header, _extends({\n    ref: ref,\n    className: _className,\n    id: headerId\n  }, rest, {\n    __css: headerStyles\n  }));\n});\n\nif (__DEV__) {\n  ModalHeader.displayName = \"ModalHeader\";\n}\n/**\n * ModalBody\n *\n * React component that houses the main content of the modal.\n *\n * @see Docs https://chakra-ui.com/components/modal\n */\n\n\nexport var ModalBody = /*#__PURE__*/forwardRef(function ModalBody(props, ref) {\n  var {\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var {\n    bodyId,\n    setBodyMounted\n  } = useModalContext();\n  /**\n   * Notify us if this component was rendered or used\n   * so we can append `aria-describedby` automatically\n   */\n\n  React.useEffect(() => {\n    setBodyMounted(true);\n    return () => setBodyMounted(false);\n  }, [setBodyMounted]);\n\n  var _className = cx(\"chakra-modal__body\", className);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: _className,\n    id: bodyId\n  }, rest, {\n    __css: styles.body\n  }));\n});\n\nif (__DEV__) {\n  ModalBody.displayName = \"ModalBody\";\n}\n/**\n * ModalFooter houses the action buttons of the modal.\n * @see Docs https://chakra-ui.com/components/modal\n */\n\n\nexport var ModalFooter = /*#__PURE__*/forwardRef(function ModalFooter(props, ref) {\n  var {\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var _className = cx(\"chakra-modal__footer\", className);\n\n  var styles = useStyles();\n\n  var footerStyles = _extends({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  }, styles.footer);\n\n  return /*#__PURE__*/React.createElement(chakra.footer, _extends({\n    ref: ref\n  }, rest, {\n    __css: footerStyles,\n    className: _className\n  }));\n});\n\nif (__DEV__) {\n  ModalFooter.displayName = \"ModalFooter\";\n}\n/**\n * ModalCloseButton is used closes the modal.\n *\n * You don't need to pass the `onClick` to it, it reads the\n * `onClose` action from the modal context.\n */\n\n\nexport var ModalCloseButton = /*#__PURE__*/forwardRef(function ModalCloseButton(props, ref) {\n  var {\n    onClick,\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"onClick\", \"className\"]);\n\n  var {\n    onClose\n  } = useModalContext();\n\n  var _className = cx(\"chakra-modal__close-btn\", className);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(CloseButton, _extends({\n    ref: ref,\n    __css: styles.closeButton,\n    className: _className,\n    onClick: callAllHandlers(onClick, event => {\n      event.stopPropagation();\n      onClose();\n    })\n  }, rest));\n});\n\nif (__DEV__) {\n  ModalCloseButton.displayName = \"ModalCloseButton\";\n}","map":{"version":3,"mappings":"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","names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","CloseButton","FocusLock","Portal","chakra","forwardRef","StylesProvider","useMultiStyleConfig","useStyles","fadeConfig","callAllHandlers","createContext","cx","__DEV__","AnimatePresence","motion","usePresence","React","RemoveScroll","ModalTransition","useModal","ModalContextProvider","useModalContext","strict","name","errorMessage","Modal","props","getContainer","children","autoFocus","trapFocus","initialFocusRef","finalFocusRef","returnFocusOnClose","blockScrollOnMount","allowPinchZoom","preserveScrollBarGap","motionPreset","styles","modal","context","createElement","value","isOpen","defaultProps","scrollBehavior","displayName","Motion","div","ModalContent","ref","className","containerProps","rootProps","rest","getDialogProps","getDialogContainerProps","dialogProps","_className","dialogStyles","display","flexDirection","position","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","ModalFocusScope","__css","preset","dialogRef","isPresent","safeToRemove","useEffect","setTimeout","isDisabled","restoreFocus","contentRef","removeScrollBar","enabled","forwardProps","ModalOverlay","overlayStyle","pos","w","h","overlay","ModalHeader","headerId","setHeaderMounted","headerStyles","flex","header","id","ModalBody","bodyId","setBodyMounted","body","ModalFooter","footerStyles","alignItems","justifyContent","footer","ModalCloseButton","onClick","onClose","closeButton","event","stopPropagation"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/modal/dist/esm/modal.js"],"sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { FocusLock } from \"@chakra-ui/focus-lock\";\nimport { Portal } from \"@chakra-ui/portal\";\nimport { chakra, forwardRef, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { fadeConfig } from \"@chakra-ui/transition\";\nimport { callAllHandlers, createContext, cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion, usePresence } from \"framer-motion\";\nimport * as React from \"react\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { ModalTransition } from \"./modal-transition\";\nimport { useModal } from \"./use-modal\";\nvar [ModalContextProvider, useModalContext] = createContext({\n  strict: true,\n  name: \"ModalContext\",\n  errorMessage: \"useModalContext: `context` is undefined. Seems you forgot to wrap modal components in `<Modal />`\"\n});\nexport { ModalContextProvider, useModalContext };\n/**\n * Modal provides context, theming, and accessibility properties\n * to all other modal components.\n *\n * It doesn't render any DOM node.\n */\n\nexport var Modal = props => {\n  var {\n    getContainer,\n    children,\n    autoFocus,\n    trapFocus,\n    initialFocusRef,\n    finalFocusRef,\n    returnFocusOnClose,\n    blockScrollOnMount,\n    allowPinchZoom,\n    preserveScrollBarGap,\n    motionPreset\n  } = props;\n  var styles = useMultiStyleConfig(\"Modal\", props);\n  var modal = useModal(props);\n\n  var context = _extends({}, modal, {\n    autoFocus,\n    trapFocus,\n    initialFocusRef,\n    finalFocusRef,\n    returnFocusOnClose,\n    blockScrollOnMount,\n    allowPinchZoom,\n    preserveScrollBarGap,\n    motionPreset\n  });\n\n  return /*#__PURE__*/React.createElement(ModalContextProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(AnimatePresence, null, context.isOpen && /*#__PURE__*/React.createElement(Portal, {\n    getContainer: getContainer\n  }, children))));\n};\nModal.defaultProps = {\n  returnFocusOnClose: true,\n  scrollBehavior: \"outside\",\n  trapFocus: true,\n  autoFocus: true,\n  blockScrollOnMount: true,\n  allowPinchZoom: false,\n  motionPreset: \"scale\"\n};\n\nif (__DEV__) {\n  Modal.displayName = \"Modal\";\n}\n\nvar Motion = chakra(motion.div);\n/**\n * ModalContent is used to group modal's content. It has all the\n * necessary `aria-*` properties to indicate that it is a modal\n */\n\nexport var ModalContent = /*#__PURE__*/forwardRef(function ModalContent(props, ref) {\n  var {\n    className,\n    children,\n    containerProps: rootProps\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\", \"children\", \"containerProps\"]);\n\n  var {\n    getDialogProps,\n    getDialogContainerProps\n  } = useModalContext();\n  var dialogProps = getDialogProps(rest, ref);\n  var containerProps = getDialogContainerProps(rootProps);\n\n  var _className = cx(\"chakra-modal__content\", className);\n\n  var styles = useStyles();\n\n  var dialogStyles = _extends({\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    width: \"100%\",\n    outline: 0\n  }, styles.dialog);\n\n  var dialogContainerStyles = _extends({\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"100vh\",\n    position: \"fixed\",\n    left: 0,\n    top: 0\n  }, styles.dialogContainer);\n\n  var {\n    motionPreset\n  } = useModalContext();\n  return /*#__PURE__*/React.createElement(ModalFocusScope, null, /*#__PURE__*/React.createElement(chakra.div, _extends({}, containerProps, {\n    className: \"chakra-modal__content-container\",\n    __css: dialogContainerStyles\n  }), /*#__PURE__*/React.createElement(ModalTransition, _extends({\n    preset: motionPreset,\n    className: _className\n  }, dialogProps, {\n    __css: dialogStyles\n  }), children)));\n});\n\nif (__DEV__) {\n  ModalContent.displayName = \"ModalContent\";\n}\n\nexport function ModalFocusScope(props) {\n  var {\n    autoFocus,\n    trapFocus,\n    dialogRef,\n    initialFocusRef,\n    blockScrollOnMount,\n    allowPinchZoom,\n    finalFocusRef,\n    returnFocusOnClose,\n    preserveScrollBarGap\n  } = useModalContext();\n  var [isPresent, safeToRemove] = usePresence();\n  React.useEffect(() => {\n    if (!isPresent && safeToRemove) {\n      setTimeout(safeToRemove);\n    }\n  }, [isPresent, safeToRemove]);\n  return /*#__PURE__*/React.createElement(FocusLock, {\n    autoFocus: autoFocus,\n    isDisabled: !trapFocus,\n    initialFocusRef: initialFocusRef,\n    finalFocusRef: finalFocusRef,\n    restoreFocus: returnFocusOnClose,\n    contentRef: dialogRef\n  }, /*#__PURE__*/React.createElement(RemoveScroll, {\n    removeScrollBar: !preserveScrollBarGap,\n    allowPinchZoom: allowPinchZoom,\n    enabled: blockScrollOnMount,\n    forwardProps: true\n  }, props.children));\n}\n\n/**\n * ModalOverlay renders a backdrop behind the modal. It is\n * also used as a wrapper for the modal content for better positioning.\n *\n * @see Docs https://chakra-ui.com/components/modal\n */\nexport var ModalOverlay = /*#__PURE__*/forwardRef(function ModalOverlay(props, ref) {\n  var {\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var _className = cx(\"chakra-modal__overlay\", className);\n\n  var styles = useStyles();\n\n  var overlayStyle = _extends({\n    pos: \"fixed\",\n    left: \"0\",\n    top: \"0\",\n    w: \"100vw\",\n    h: \"100vh\"\n  }, styles.overlay);\n\n  return /*#__PURE__*/React.createElement(Motion, _extends({}, fadeConfig, {\n    __css: overlayStyle,\n    ref: ref,\n    className: _className\n  }, rest));\n});\n\nif (__DEV__) {\n  ModalOverlay.displayName = \"ModalOverlay\";\n}\n\n/**\n * ModalHeader\n *\n * React component that houses the title of the modal.\n *\n * @see Docs https://chakra-ui.com/components/modal\n */\nexport var ModalHeader = /*#__PURE__*/forwardRef(function ModalHeader(props, ref) {\n  var {\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var {\n    headerId,\n    setHeaderMounted\n  } = useModalContext();\n  /**\n   * Notify us if this component was rendered or used\n   * so we can append `aria-labelledby` automatically\n   */\n\n  React.useEffect(() => {\n    setHeaderMounted(true);\n    return () => setHeaderMounted(false);\n  }, [setHeaderMounted]);\n\n  var _className = cx(\"chakra-modal__header\", className);\n\n  var styles = useStyles();\n\n  var headerStyles = _extends({\n    flex: 0\n  }, styles.header);\n\n  return /*#__PURE__*/React.createElement(chakra.header, _extends({\n    ref: ref,\n    className: _className,\n    id: headerId\n  }, rest, {\n    __css: headerStyles\n  }));\n});\n\nif (__DEV__) {\n  ModalHeader.displayName = \"ModalHeader\";\n}\n\n/**\n * ModalBody\n *\n * React component that houses the main content of the modal.\n *\n * @see Docs https://chakra-ui.com/components/modal\n */\nexport var ModalBody = /*#__PURE__*/forwardRef(function ModalBody(props, ref) {\n  var {\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var {\n    bodyId,\n    setBodyMounted\n  } = useModalContext();\n  /**\n   * Notify us if this component was rendered or used\n   * so we can append `aria-describedby` automatically\n   */\n\n  React.useEffect(() => {\n    setBodyMounted(true);\n    return () => setBodyMounted(false);\n  }, [setBodyMounted]);\n\n  var _className = cx(\"chakra-modal__body\", className);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: _className,\n    id: bodyId\n  }, rest, {\n    __css: styles.body\n  }));\n});\n\nif (__DEV__) {\n  ModalBody.displayName = \"ModalBody\";\n}\n\n/**\n * ModalFooter houses the action buttons of the modal.\n * @see Docs https://chakra-ui.com/components/modal\n */\nexport var ModalFooter = /*#__PURE__*/forwardRef(function ModalFooter(props, ref) {\n  var {\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var _className = cx(\"chakra-modal__footer\", className);\n\n  var styles = useStyles();\n\n  var footerStyles = _extends({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  }, styles.footer);\n\n  return /*#__PURE__*/React.createElement(chakra.footer, _extends({\n    ref: ref\n  }, rest, {\n    __css: footerStyles,\n    className: _className\n  }));\n});\n\nif (__DEV__) {\n  ModalFooter.displayName = \"ModalFooter\";\n}\n/**\n * ModalCloseButton is used closes the modal.\n *\n * You don't need to pass the `onClick` to it, it reads the\n * `onClose` action from the modal context.\n */\n\n\nexport var ModalCloseButton = /*#__PURE__*/forwardRef(function ModalCloseButton(props, ref) {\n  var {\n    onClick,\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"onClick\", \"className\"]);\n\n  var {\n    onClose\n  } = useModalContext();\n\n  var _className = cx(\"chakra-modal__close-btn\", className);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(CloseButton, _extends({\n    ref: ref,\n    __css: styles.closeButton,\n    className: _className,\n    onClick: callAllHandlers(onClick, event => {\n      event.stopPropagation();\n      onClose();\n    })\n  }, rest));\n});\n\nif (__DEV__) {\n  ModalCloseButton.displayName = \"ModalCloseButton\";\n}\n//# sourceMappingURL=modal.js.map"]},"metadata":{},"sourceType":"module"}