{"ast":null,"code":"// Really great work done by Diego Haz on this one\n// https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/tabbable.ts\nexport var hasDisplayNone = element => window.getComputedStyle(element).display === \"none\";\nexport var hasTabIndex = element => element.hasAttribute(\"tabindex\");\nexport var hasNegativeTabIndex = element => hasTabIndex(element) && element.tabIndex === -1;\nexport function isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nexport function hasFocusWithin(element) {\n  if (!document.activeElement) return false;\n  return element.contains(document.activeElement);\n}\nexport function isHTMLElement(element) {\n  return element instanceof HTMLElement;\n}\nexport function isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement)) return true;\n  return element.hidden;\n}\nexport function isContentEditable(element) {\n  var value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nexport function isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n\n  var {\n    localName\n  } = element;\n  var focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0) return true;\n  var others = {\n    a: () => element.hasAttribute(\"href\"),\n    audio: () => element.hasAttribute(\"controls\"),\n    video: () => element.hasAttribute(\"controls\")\n  };\n\n  if (localName in others) {\n    return others[localName]();\n  }\n\n  if (isContentEditable(element)) return true;\n  return hasTabIndex(element);\n}\nexport function isTabbable(element) {\n  if (!element) return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}\n\nvar isActiveElement = element => document.activeElement === element;\n\nfunction isInputElement(element) {\n  return isHTMLElement(element) && element.tagName.toLowerCase() === \"input\" && \"select\" in element;\n}\n\nexport function focus(element, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var {\n    isActive = isActiveElement,\n    preventScroll\n  } = options;\n  if (isActive(element)) return -1;\n  return requestAnimationFrame(() => {\n    element.focus({\n      preventScroll\n    });\n\n    if (isInputElement(element)) {\n      element.select();\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["hasDisplayNone","element","window","getComputedStyle","display","hasTabIndex","hasAttribute","hasNegativeTabIndex","tabIndex","isDisabled","Boolean","getAttribute","hasFocusWithin","document","activeElement","contains","isHTMLElement","HTMLElement","isHidden","parentElement","hidden","isContentEditable","value","isFocusable","localName","focusableTags","indexOf","others","a","audio","video","isTabbable","isActiveElement","isInputElement","tagName","toLowerCase","focus","options","isActive","preventScroll","requestAnimationFrame","select"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/utils/dist/esm/tabbable.js"],"sourcesContent":["// Really great work done by Diego Haz on this one\n// https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/tabbable.ts\nexport var hasDisplayNone = element => window.getComputedStyle(element).display === \"none\";\nexport var hasTabIndex = element => element.hasAttribute(\"tabindex\");\nexport var hasNegativeTabIndex = element => hasTabIndex(element) && element.tabIndex === -1;\nexport function isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nexport function hasFocusWithin(element) {\n  if (!document.activeElement) return false;\n  return element.contains(document.activeElement);\n}\nexport function isHTMLElement(element) {\n  return element instanceof HTMLElement;\n}\nexport function isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement)) return true;\n  return element.hidden;\n}\nexport function isContentEditable(element) {\n  var value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nexport function isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n\n  var {\n    localName\n  } = element;\n  var focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0) return true;\n  var others = {\n    a: () => element.hasAttribute(\"href\"),\n    audio: () => element.hasAttribute(\"controls\"),\n    video: () => element.hasAttribute(\"controls\")\n  };\n\n  if (localName in others) {\n    return others[localName]();\n  }\n\n  if (isContentEditable(element)) return true;\n  return hasTabIndex(element);\n}\nexport function isTabbable(element) {\n  if (!element) return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}\n\nvar isActiveElement = element => document.activeElement === element;\n\nfunction isInputElement(element) {\n  return isHTMLElement(element) && element.tagName.toLowerCase() === \"input\" && \"select\" in element;\n}\n\nexport function focus(element, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var {\n    isActive = isActiveElement,\n    preventScroll\n  } = options;\n  if (isActive(element)) return -1;\n  return requestAnimationFrame(() => {\n    element.focus({\n      preventScroll\n    });\n\n    if (isInputElement(element)) {\n      element.select();\n    }\n  });\n}\n//# sourceMappingURL=tabbable.js.map"]},"metadata":{},"sourceType":"module"}