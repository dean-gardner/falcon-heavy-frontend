{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */\nimport { runIfFn, warn } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport function useControllableProp(prop, state) {\n  var {\n    current: isControlled\n  } = React.useRef(prop !== undefined);\n  var value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\nvar defaultPropsMap = {\n  value: \"value\",\n  defaultValue: \"defaultValue\",\n  onChange: \"onChange\"\n};\n/**\n * React hook for using controlling component state.\n * @param props\n */\n\nexport function useControllableState(props) {\n  var {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    name = \"Component\",\n    propsMap = defaultPropsMap\n  } = props;\n  var [valueState, setValue] = React.useState(defaultValue);\n  var {\n    current: isControlled\n  } = React.useRef(valueProp !== undefined); // don't switch from controlled to uncontrolled\n\n  React.useEffect(() => {\n    var nextIsControlled = valueProp !== undefined;\n    var nextMode = nextIsControlled ? \"a controlled\" : \"an uncontrolled\";\n    var mode = isControlled ? \"a controlled\" : \"an uncontrolled\";\n    warn({\n      condition: isControlled !== nextIsControlled,\n      message: \"Warning: \" + name + \" is changing from \" + mode + \" to \" + nextMode + \" component. \" + \"Components should not switch from controlled to uncontrolled (or vice versa). \" + (\"Use the '\" + propsMap.value + \"' with an '\" + propsMap.onChange + \"' handler. \") + (\"If you want an uncontrolled component, remove the \" + propsMap.value + \" prop and use '\" + propsMap.defaultValue + \"' instead. \\\"\") + \"More info: https://fb.me/react-controlled-components\"\n    });\n  }, [valueProp, isControlled, name]);\n  var {\n    current: initialDefaultValue\n  } = React.useRef(defaultValue);\n  React.useEffect(() => {\n    warn({\n      condition: initialDefaultValue !== defaultValue,\n      message: \"Warning: A component is changing the default value of an uncontrolled \" + name + \" after being initialized. \" + (\"To suppress this warning opt to use a controlled \" + name + \".\")\n    });\n  }, [JSON.stringify(defaultValue)]);\n  var value = isControlled ? valueProp : valueState;\n  var updateValue = React.useCallback(next => {\n    var nextValue = runIfFn(next, value);\n    if (!isControlled) setValue(nextValue);\n    onChange == null ? void 0 : onChange(nextValue);\n  }, [onChange, value]);\n  return [value, updateValue];\n}","map":{"version":3,"mappings":"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","names":["runIfFn","warn","React","useControllableProp","prop","state","current","isControlled","useRef","undefined","value","defaultPropsMap","defaultValue","onChange","useControllableState","props","valueProp","name","propsMap","valueState","setValue","useState","useEffect","nextIsControlled","nextMode","mode","condition","message","initialDefaultValue","JSON","stringify","updateValue","useCallback","next","nextValue"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/hooks/dist/esm/use-controllable.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { runIfFn, warn } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport function useControllableProp(prop, state) {\n  var {\n    current: isControlled\n  } = React.useRef(prop !== undefined);\n  var value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\nvar defaultPropsMap = {\n  value: \"value\",\n  defaultValue: \"defaultValue\",\n  onChange: \"onChange\"\n};\n/**\n * React hook for using controlling component state.\n * @param props\n */\n\nexport function useControllableState(props) {\n  var {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    name = \"Component\",\n    propsMap = defaultPropsMap\n  } = props;\n  var [valueState, setValue] = React.useState(defaultValue);\n  var {\n    current: isControlled\n  } = React.useRef(valueProp !== undefined); // don't switch from controlled to uncontrolled\n\n  React.useEffect(() => {\n    var nextIsControlled = valueProp !== undefined;\n    var nextMode = nextIsControlled ? \"a controlled\" : \"an uncontrolled\";\n    var mode = isControlled ? \"a controlled\" : \"an uncontrolled\";\n    warn({\n      condition: isControlled !== nextIsControlled,\n      message: \"Warning: \" + name + \" is changing from \" + mode + \" to \" + nextMode + \" component. \" + \"Components should not switch from controlled to uncontrolled (or vice versa). \" + (\"Use the '\" + propsMap.value + \"' with an '\" + propsMap.onChange + \"' handler. \") + (\"If you want an uncontrolled component, remove the \" + propsMap.value + \" prop and use '\" + propsMap.defaultValue + \"' instead. \\\"\") + \"More info: https://fb.me/react-controlled-components\"\n    });\n  }, [valueProp, isControlled, name]);\n  var {\n    current: initialDefaultValue\n  } = React.useRef(defaultValue);\n  React.useEffect(() => {\n    warn({\n      condition: initialDefaultValue !== defaultValue,\n      message: \"Warning: A component is changing the default value of an uncontrolled \" + name + \" after being initialized. \" + (\"To suppress this warning opt to use a controlled \" + name + \".\")\n    });\n  }, [JSON.stringify(defaultValue)]);\n  var value = isControlled ? valueProp : valueState;\n  var updateValue = React.useCallback(next => {\n    var nextValue = runIfFn(next, value);\n    if (!isControlled) setValue(nextValue);\n    onChange == null ? void 0 : onChange(nextValue);\n  }, [onChange, value]);\n  return [value, updateValue];\n}\n//# sourceMappingURL=use-controllable.js.map"]},"metadata":{},"sourceType":"module"}