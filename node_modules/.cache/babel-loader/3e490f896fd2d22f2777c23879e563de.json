{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\work\\\\projects\\\\plenty\\\\falcon-heavy-frontend\\\\src\\\\components\\\\ContractBalanceInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Textarea, Text } from \"@chakra-ui/react\";\nimport React, { useCallback } from \"react\";\nimport useBeacon from \"../hooks/useBeacon\";\nimport { usePendingPromise } from \"../hooks/usePendingPromise\";\nimport { Preloader } from \"./Preloader\";\nexport const ContractBalanceInfo = _ref => {\n  _s();\n\n  let {\n    contractAddress,\n    pkh\n  } = _ref;\n  const {\n    Tezos\n  } = useBeacon();\n  const fetcher = useCallback(async () => {\n    const contract = await Tezos.contract.at(contractAddress);\n    return contract.views.getBalance(pkh).read().catch(() => 0);\n  }, [contractAddress, pkh, Tezos.contract]);\n  const {\n    fetching,\n    data: balance,\n    error\n  } = usePendingPromise(fetcher);\n  return !fetching && (balance || error) ? /*#__PURE__*/_jsxDEV(Box, {\n    w: \"full\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      size: \"sm\",\n      align: \"left\",\n      marginBottom: \"2\",\n      children: \"Balance for your account:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n      readOnly: true,\n      defaultValue: error || balance,\n      isInvalid: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContractBalanceInfo, \"Uol4ecfk6lrPTi7MdDTsC1+SYqc=\", false, function () {\n  return [useBeacon, usePendingPromise];\n});\n\n_c = ContractBalanceInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractBalanceInfo\");","map":{"version":3,"sources":["D:/work/projects/plenty/falcon-heavy-frontend/src/components/ContractBalanceInfo.tsx"],"names":["Box","Textarea","Text","React","useCallback","useBeacon","usePendingPromise","Preloader","ContractBalanceInfo","contractAddress","pkh","Tezos","fetcher","contract","at","views","getBalance","read","catch","fetching","data","balance","error"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,mBAGX,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAA6B;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAYN,SAAS,EAA3B;AACA,QAAMO,OAAO,GAAGR,WAAW,CAAC,YAAY;AACtC,UAAMS,QAAQ,GAAG,MAAMF,KAAK,CAACE,QAAN,CAAeC,EAAf,CAAkBL,eAAlB,CAAvB;AACA,WAAOI,QAAQ,CAACE,KAAT,CACJC,UADI,CACON,GADP,EAEJO,IAFI,GAGJC,KAHI,CAGE,MAAM,CAHR,CAAP;AAID,GAN0B,EAMxB,CAACT,eAAD,EAAkBC,GAAlB,EAAuBC,KAAK,CAACE,QAA7B,CANwB,CAA3B;AAQA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,IAAI,EAAEC,OAAlB;AAA2BC,IAAAA;AAA3B,MAAqChB,iBAAiB,CAACM,OAAD,CAA5D;AACA,SAAO,CAACO,QAAD,KAAcE,OAAO,IAAIC,KAAzB,iBACL,QAAC,GAAD;AAAK,IAAA,CAAC,EAAC,MAAP;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAgB,MAAA,KAAK,EAAC,MAAtB;AAA6B,MAAA,YAAY,EAAC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,QAAD;AAAU,MAAA,QAAQ,MAAlB;AAAmB,MAAA,YAAY,EAAEA,KAAK,IAAID,OAA1C;AAAmD,MAAA,SAAS,EAAE,CAAC,CAACC;AAAhE;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAQL,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UARF;AAUD,CAxBM;;GAAMd,mB;UAIOH,S,EASyBC,iB;;;KAbhCE,mB","sourcesContent":["import { Box, Textarea, Text } from \"@chakra-ui/react\";\r\nimport React, { useCallback } from \"react\";\r\nimport useBeacon from \"../hooks/useBeacon\";\r\nimport { usePendingPromise } from \"../hooks/usePendingPromise\";\r\nimport { Preloader } from \"./Preloader\";\r\n\r\nexport const ContractBalanceInfo: React.FC<{\r\n  contractAddress: string;\r\n  pkh: string;\r\n}> = ({ contractAddress, pkh }) => {\r\n  const { Tezos } = useBeacon();\r\n  const fetcher = useCallback(async () => {\r\n    const contract = await Tezos.contract.at(contractAddress);\r\n    return contract.views\r\n      .getBalance(pkh)\r\n      .read()\r\n      .catch(() => 0);\r\n  }, [contractAddress, pkh, Tezos.contract]);\r\n\r\n  const { fetching, data: balance, error } = usePendingPromise(fetcher);\r\n  return !fetching && (balance || error) ? (\r\n    <Box w=\"full\">\r\n      <Text size=\"sm\" align=\"left\" marginBottom=\"2\">\r\n        Balance for your account:\r\n      </Text>\r\n      <Textarea readOnly defaultValue={error || balance} isInvalid={!!error} />\r\n    </Box>\r\n  ) : (\r\n    <Preloader />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}