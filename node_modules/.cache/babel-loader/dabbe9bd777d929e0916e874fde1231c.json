{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nexport function getBoxShadow(placement, color) {\n  if (!color) return undefined;\n\n  if (placement.includes(\"top\")) {\n    return \"2px 2px 2px 0 \" + color;\n  }\n\n  if (placement.includes(\"bottom\")) {\n    return \"-1px -1px 1px 0 \" + color;\n  }\n\n  if (placement.includes(\"right\")) {\n    return \"-1px 1px 1px 0 \" + color;\n  }\n\n  if (placement.includes(\"left\")) {\n    return \"1px -1px 1px 0 \" + color;\n  }\n\n  return undefined;\n}\nvar transformEnum = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\"\n};\nexport var toTransformOrigin = placement => transformEnum[placement];\nexport var getArrowStyles = options => {\n  var {\n    arrowSize,\n    popperArrowStyles = {},\n    placement\n  } = options;\n\n  var styles = _extends({}, popperArrowStyles, {\n    width: arrowSize,\n    height: arrowSize,\n    zIndex: -1\n  });\n\n  var offsetAdjust = -(arrowSize / 2);\n  if (placement.startsWith(\"top\")) styles.bottom = offsetAdjust;\n  if (placement.startsWith(\"bottom\")) styles.top = offsetAdjust;\n  if (placement.startsWith(\"left\")) styles.right = offsetAdjust;\n  if (placement.startsWith(\"right\")) styles.left = offsetAdjust;\n  return styles;\n};","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,UAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,gBAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAO,SAASQ,YAAT,CAAsBC,SAAtB,EAAiCC,KAAjC,EAAwC;AAC7C,MAAI,CAACA,KAAL,EAAY,OAAOC,SAAP;;AAEZ,MAAIF,SAAS,CAACG,QAAV,CAAmB,KAAnB,CAAJ,EAA+B;AAC7B,WAAO,mBAAmBF,KAA1B;AACD;;AAED,MAAID,SAAS,CAACG,QAAV,CAAmB,QAAnB,CAAJ,EAAkC;AAChC,WAAO,qBAAqBF,KAA5B;AACD;;AAED,MAAID,SAAS,CAACG,QAAV,CAAmB,OAAnB,CAAJ,EAAiC;AAC/B,WAAO,oBAAoBF,KAA3B;AACD;;AAED,MAAID,SAAS,CAACG,QAAV,CAAmB,MAAnB,CAAJ,EAAgC;AAC9B,WAAO,oBAAoBF,KAA3B;AACD;;AAED,SAAOC,SAAP;AACD;AACD,IAAIE,aAAa,GAAG;AAClBC,KAAG,EAAE,eADa;AAElB,eAAa,aAFK;AAGlB,aAAW,cAHO;AAIlBC,QAAM,EAAE,YAJU;AAKlB,kBAAgB,UALE;AAMlB,gBAAc,WANI;AAOlBC,MAAI,EAAE,cAPY;AAQlB,gBAAc,WARI;AASlB,cAAY,cATM;AAUlBC,OAAK,EAAE,aAVW;AAWlB,iBAAe,UAXG;AAYlB,eAAa;AAZK,CAApB;AAcA,OAAO,IAAIC,iBAAiB,GAAGT,SAAS,IAAII,aAAa,CAACJ,SAAD,CAAlD;AACP,OAAO,IAAIU,cAAc,GAAGC,OAAO,IAAI;AACrC,MAAI;AACFC,aADE;AAEFC,qBAAiB,GAAG,EAFlB;AAGFb;AAHE,MAIAW,OAJJ;;AAMA,MAAIG,MAAM,GAAG5B,QAAQ,CAAC,EAAD,EAAK2B,iBAAL,EAAwB;AAC3CE,SAAK,EAAEH,SADoC;AAE3CI,UAAM,EAAEJ,SAFmC;AAG3CK,UAAM,EAAE,CAAC;AAHkC,GAAxB,CAArB;;AAMA,MAAIC,YAAY,GAAG,EAAEN,SAAS,GAAG,CAAd,CAAnB;AACA,MAAIZ,SAAS,CAACmB,UAAV,CAAqB,KAArB,CAAJ,EAAiCL,MAAM,CAACR,MAAP,GAAgBY,YAAhB;AACjC,MAAIlB,SAAS,CAACmB,UAAV,CAAqB,QAArB,CAAJ,EAAoCL,MAAM,CAACT,GAAP,GAAaa,YAAb;AACpC,MAAIlB,SAAS,CAACmB,UAAV,CAAqB,MAArB,CAAJ,EAAkCL,MAAM,CAACN,KAAP,GAAeU,YAAf;AAClC,MAAIlB,SAAS,CAACmB,UAAV,CAAqB,OAArB,CAAJ,EAAmCL,MAAM,CAACP,IAAP,GAAcW,YAAd;AACnC,SAAOJ,MAAP;AACD,CAnBM","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","getBoxShadow","placement","color","undefined","includes","transformEnum","top","bottom","left","right","toTransformOrigin","getArrowStyles","options","arrowSize","popperArrowStyles","styles","width","height","zIndex","offsetAdjust","startsWith"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/popper/dist/esm/popper.utils.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nexport function getBoxShadow(placement, color) {\n  if (!color) return undefined;\n\n  if (placement.includes(\"top\")) {\n    return \"2px 2px 2px 0 \" + color;\n  }\n\n  if (placement.includes(\"bottom\")) {\n    return \"-1px -1px 1px 0 \" + color;\n  }\n\n  if (placement.includes(\"right\")) {\n    return \"-1px 1px 1px 0 \" + color;\n  }\n\n  if (placement.includes(\"left\")) {\n    return \"1px -1px 1px 0 \" + color;\n  }\n\n  return undefined;\n}\nvar transformEnum = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\"\n};\nexport var toTransformOrigin = placement => transformEnum[placement];\nexport var getArrowStyles = options => {\n  var {\n    arrowSize,\n    popperArrowStyles = {},\n    placement\n  } = options;\n\n  var styles = _extends({}, popperArrowStyles, {\n    width: arrowSize,\n    height: arrowSize,\n    zIndex: -1\n  });\n\n  var offsetAdjust = -(arrowSize / 2);\n  if (placement.startsWith(\"top\")) styles.bottom = offsetAdjust;\n  if (placement.startsWith(\"bottom\")) styles.top = offsetAdjust;\n  if (placement.startsWith(\"left\")) styles.right = offsetAdjust;\n  if (placement.startsWith(\"right\")) styles.left = offsetAdjust;\n  return styles;\n};\n//# sourceMappingURL=popper.utils.js.map"]},"metadata":{},"sourceType":"module"}