{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n  if (resultSelector) {\n    return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) {\n      return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n    }));\n  }\n\n  return new Observable(function (subscriber) {\n    var handler = function () {\n      var e = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        e[_i] = arguments[_i];\n      }\n\n      return subscriber.next(e.length === 1 ? e[0] : e);\n    };\n\n    var retValue;\n\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return function () {\n      return removeHandler(handler, retValue);\n    };\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,OAAO,SAASC,gBAAT,CAA0BC,UAA1B,EAAsCC,aAAtC,EAAqDC,cAArD,EAAqE;AACxE,MAAIA,cAAJ,EAAoB;AAChB,WAAOH,gBAAgB,CAACC,UAAD,EAAaC,aAAb,CAAhB,CAA4CE,IAA5C,CAAiDL,GAAG,CAAC,UAAUM,IAAV,EAAgB;AAAE,aAAOR,OAAO,CAACQ,IAAD,CAAP,GAAgBF,cAAc,CAACG,KAAf,CAAqB,KAAK,CAA1B,EAA6BD,IAA7B,CAAhB,GAAqDF,cAAc,CAACE,IAAD,CAA1E;AAAmF,KAAtG,CAApD,CAAP;AACH;;AACD,SAAO,IAAIT,UAAJ,CAAe,UAAUW,UAAV,EAAsB;AACxC,QAAIC,OAAO,GAAG,YAAY;AACtB,UAAIC,CAAC,GAAG,EAAR;;AACA,WAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,SAAC,CAACC,EAAD,CAAD,GAAQC,SAAS,CAACD,EAAD,CAAjB;AACH;;AACD,aAAOH,UAAU,CAACM,IAAX,CAAgBJ,CAAC,CAACG,MAAF,KAAa,CAAb,GAAiBH,CAAC,CAAC,CAAD,CAAlB,GAAwBA,CAAxC,CAAP;AACH,KAND;;AAOA,QAAIK,QAAJ;;AACA,QAAI;AACAA,cAAQ,GAAGb,UAAU,CAACO,OAAD,CAArB;AACH,KAFD,CAGA,OAAOO,GAAP,EAAY;AACRR,gBAAU,CAACS,KAAX,CAAiBD,GAAjB;AACA,aAAOE,SAAP;AACH;;AACD,QAAI,CAACnB,UAAU,CAACI,aAAD,CAAf,EAAgC;AAC5B,aAAOe,SAAP;AACH;;AACD,WAAO,YAAY;AAAE,aAAOf,aAAa,CAACM,OAAD,EAAUM,QAAV,CAApB;AAA0C,KAA/D;AACH,GApBM,CAAP;AAqBH","names":["Observable","isArray","isFunction","map","fromEventPattern","addHandler","removeHandler","resultSelector","pipe","args","apply","subscriber","handler","e","_i","arguments","length","next","retValue","err","error","undefined"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js"],"sourcesContent":["/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        var handler = function () {\n            var e = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                e[_i] = arguments[_i];\n            }\n            return subscriber.next(e.length === 1 ? e[0] : e);\n        };\n        var retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return function () { return removeHandler(handler, retValue); };\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map\n"]},"metadata":{},"sourceType":"module"}