{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { createContext, cx } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { CheckIcon, InfoIcon, WarningIcon } from \"./icons\";\nvar STATUSES = {\n  info: {\n    icon: InfoIcon,\n    colorScheme: \"blue\"\n  },\n  warning: {\n    icon: WarningIcon,\n    colorScheme: \"orange\"\n  },\n  success: {\n    icon: CheckIcon,\n    colorScheme: \"green\"\n  },\n  error: {\n    icon: WarningIcon,\n    colorScheme: \"red\"\n  }\n};\nvar [AlertProvider, useAlertContext] = createContext({\n  name: \"AlertContext\",\n  errorMessage: \"useAlertContext: `context` is undefined. Seems you forgot to wrap alert components in `<Alert />`\"\n});\n/**\n * Alert is used to communicate the state or status of a\n * page, feature or action\n */\n\nexport var Alert = /*#__PURE__*/forwardRef(function Alert(props, ref) {\n  var _omitThemingProps = omitThemingProps(props),\n      {\n    status = \"info\"\n  } = _omitThemingProps,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"status\"]);\n\n  var {\n    colorScheme\n  } = STATUSES[status];\n  var styles = useMultiStyleConfig(\"Alert\", _extends({}, props, {\n    colorScheme\n  }));\n\n  var alertStyles = _extends({\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\"\n  }, styles.container);\n\n  return /*#__PURE__*/React.createElement(AlertProvider, {\n    value: {\n      status\n    }\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    role: \"alert\",\n    ref: ref\n  }, rest, {\n    className: cx(\"chakra-alert\", props.className),\n    __css: alertStyles\n  }))));\n});\nexport var AlertTitle = /*#__PURE__*/forwardRef(function AlertTitle(props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-alert__title\", props.className),\n    __css: styles.title\n  }));\n});\nexport var AlertDescription = /*#__PURE__*/forwardRef(function AlertDescription(props, ref) {\n  var styles = useStyles();\n\n  var descriptionStyles = _extends({\n    display: \"inline\"\n  }, styles.description);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-alert__desc\", props.className),\n    __css: descriptionStyles\n  }));\n});\nexport var AlertIcon = props => {\n  var {\n    status\n  } = useAlertContext();\n  var {\n    icon: BaseIcon\n  } = STATUSES[status];\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    display: \"inherit\"\n  }, props, {\n    className: cx(\"chakra-alert__icon\", props.className),\n    __css: styles.icon\n  }), /*#__PURE__*/React.createElement(BaseIcon, {\n    w: \"100%\",\n    h: \"100%\"\n  }));\n};","map":{"version":3,"mappings":"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","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","createContext","cx","React","CheckIcon","InfoIcon","WarningIcon","STATUSES","info","icon","colorScheme","warning","success","error","AlertProvider","useAlertContext","name","errorMessage","Alert","props","ref","_omitThemingProps","status","rest","styles","alertStyles","width","display","alignItems","position","overflow","container","createElement","value","div","role","className","__css","AlertTitle","title","AlertDescription","descriptionStyles","description","AlertIcon","BaseIcon","span","w","h"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/alert/dist/esm/alert.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { createContext, cx } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { CheckIcon, InfoIcon, WarningIcon } from \"./icons\";\nvar STATUSES = {\n  info: {\n    icon: InfoIcon,\n    colorScheme: \"blue\"\n  },\n  warning: {\n    icon: WarningIcon,\n    colorScheme: \"orange\"\n  },\n  success: {\n    icon: CheckIcon,\n    colorScheme: \"green\"\n  },\n  error: {\n    icon: WarningIcon,\n    colorScheme: \"red\"\n  }\n};\nvar [AlertProvider, useAlertContext] = createContext({\n  name: \"AlertContext\",\n  errorMessage: \"useAlertContext: `context` is undefined. Seems you forgot to wrap alert components in `<Alert />`\"\n});\n\n/**\n * Alert is used to communicate the state or status of a\n * page, feature or action\n */\nexport var Alert = /*#__PURE__*/forwardRef(function Alert(props, ref) {\n  var _omitThemingProps = omitThemingProps(props),\n      {\n    status = \"info\"\n  } = _omitThemingProps,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"status\"]);\n\n  var {\n    colorScheme\n  } = STATUSES[status];\n  var styles = useMultiStyleConfig(\"Alert\", _extends({}, props, {\n    colorScheme\n  }));\n\n  var alertStyles = _extends({\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\"\n  }, styles.container);\n\n  return /*#__PURE__*/React.createElement(AlertProvider, {\n    value: {\n      status\n    }\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    role: \"alert\",\n    ref: ref\n  }, rest, {\n    className: cx(\"chakra-alert\", props.className),\n    __css: alertStyles\n  }))));\n});\nexport var AlertTitle = /*#__PURE__*/forwardRef(function AlertTitle(props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-alert__title\", props.className),\n    __css: styles.title\n  }));\n});\nexport var AlertDescription = /*#__PURE__*/forwardRef(function AlertDescription(props, ref) {\n  var styles = useStyles();\n\n  var descriptionStyles = _extends({\n    display: \"inline\"\n  }, styles.description);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-alert__desc\", props.className),\n    __css: descriptionStyles\n  }));\n});\nexport var AlertIcon = props => {\n  var {\n    status\n  } = useAlertContext();\n  var {\n    icon: BaseIcon\n  } = STATUSES[status];\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    display: \"inherit\"\n  }, props, {\n    className: cx(\"chakra-alert__icon\", props.className),\n    __css: styles.icon\n  }), /*#__PURE__*/React.createElement(BaseIcon, {\n    w: \"100%\",\n    h: \"100%\"\n  }));\n};\n//# sourceMappingURL=alert.js.map"]},"metadata":{},"sourceType":"module"}