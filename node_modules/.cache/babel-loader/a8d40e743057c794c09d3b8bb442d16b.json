{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as bs58check from 'bs58check';\nexport class Serializer {\n  serialize(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const str = JSON.stringify(message);\n      return bs58check.encode(Buffer.from(str));\n    });\n  }\n\n  deserialize(encoded) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (typeof encoded !== 'string') {\n        throw new Error('Encoded payload needs to be a string');\n      }\n\n      return JSON.parse(bs58check.decode(encoded).toString());\n    });\n  }\n\n}","map":{"version":3,"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,aAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,YAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,cAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,YAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,cAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,YAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,QAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,OAAO,KAAKO,SAAZ,MAA2B,WAA3B;AACA,OAAO,MAAMC,UAAN,CAAiB;AACpBC,WAAS,CAACC,OAAD,EAAU;AACf,WAAOtB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,YAAMuB,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAZ;AACA,aAAOH,SAAS,CAACO,MAAV,CAAiBC,MAAM,CAACC,IAAP,CAAYL,GAAZ,CAAjB,CAAP;AACH,KAHe,CAAhB;AAIH;;AACDM,aAAW,CAACC,OAAD,EAAU;AACjB,WAAO9B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,UAAI,OAAO8B,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,cAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;AACD,aAAOP,IAAI,CAACQ,KAAL,CAAWb,SAAS,CAACc,MAAV,CAAiBH,OAAjB,EAA0BI,QAA1B,EAAX,CAAP;AACH,KALe,CAAhB;AAMH;;AAdmB","names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","bs58check","Serializer","serialize","message","str","JSON","stringify","encode","Buffer","from","deserialize","encoded","Error","parse","decode","toString"],"sourceRoot":"","sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@airgap/beacon-sdk/dist/esm/Serializer.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as bs58check from 'bs58check';\nexport class Serializer {\n    serialize(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const str = JSON.stringify(message);\n            return bs58check.encode(Buffer.from(str));\n        });\n    }\n    deserialize(encoded) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof encoded !== 'string') {\n                throw new Error('Encoded payload needs to be a string');\n            }\n            return JSON.parse(bs58check.decode(encoded).toString());\n        });\n    }\n}\n//# sourceMappingURL=Serializer.js.map"]},"metadata":{},"sourceType":"module"}