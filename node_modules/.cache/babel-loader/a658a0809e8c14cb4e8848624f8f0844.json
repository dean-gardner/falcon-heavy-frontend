{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { StorageKey } from '..';\nimport { StorageManager } from './StorageManager';\nimport { PermissionValidator } from './PermissionValidator';\nexport class AccountManager {\n  constructor(storage) {\n    this.storageManager = new StorageManager(storage, StorageKey.ACCOUNTS);\n  }\n\n  getAccounts() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.getAll();\n    });\n  }\n\n  getAccount(accountIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.getOne(account => account.accountIdentifier === accountIdentifier);\n    });\n  }\n\n  addAccount(accountInfo) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.addOne(accountInfo, account => account.accountIdentifier === accountInfo.accountIdentifier);\n    });\n  }\n\n  removeAccount(accountIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.remove(account => account.accountIdentifier === accountIdentifier);\n    });\n  }\n\n  removeAccounts(accountIdentifiers) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.remove(account => accountIdentifiers.includes(account.accountIdentifier));\n    });\n  }\n\n  removeAllAccounts() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.storageManager.removeAll();\n    });\n  }\n\n  hasPermission(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return PermissionValidator.hasPermission(message, this.getAccount.bind(this), this.getAccounts.bind(this));\n    });\n  }\n\n}","map":{"version":3,"mappings":"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","names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","StorageKey","StorageManager","PermissionValidator","AccountManager","constructor","storage","storageManager","ACCOUNTS","getAccounts","getAll","getAccount","accountIdentifier","getOne","account","addAccount","accountInfo","addOne","removeAccount","remove","removeAccounts","accountIdentifiers","includes","removeAllAccounts","removeAll","hasPermission","message","bind"],"sourceRoot":"","sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@airgap/beacon-sdk/dist/esm/managers/AccountManager.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageKey } from '..';\nimport { StorageManager } from './StorageManager';\nimport { PermissionValidator } from './PermissionValidator';\nexport class AccountManager {\n    constructor(storage) {\n        this.storageManager = new StorageManager(storage, StorageKey.ACCOUNTS);\n    }\n    getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.getAll();\n        });\n    }\n    getAccount(accountIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.getOne((account) => account.accountIdentifier === accountIdentifier);\n        });\n    }\n    addAccount(accountInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.addOne(accountInfo, (account) => account.accountIdentifier === accountInfo.accountIdentifier);\n        });\n    }\n    removeAccount(accountIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.remove((account) => account.accountIdentifier === accountIdentifier);\n        });\n    }\n    removeAccounts(accountIdentifiers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.remove((account) => accountIdentifiers.includes(account.accountIdentifier));\n        });\n    }\n    removeAllAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storageManager.removeAll();\n        });\n    }\n    hasPermission(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return PermissionValidator.hasPermission(message, this.getAccount.bind(this), this.getAccounts.bind(this));\n        });\n    }\n}\n//# sourceMappingURL=AccountManager.js.map"]},"metadata":{},"sourceType":"module"}