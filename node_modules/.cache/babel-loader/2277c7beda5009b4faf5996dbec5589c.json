{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { callAllHandlers } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useControllableProp } from \"./use-controllable\";\nimport { useId } from \"./use-id\";\nexport function useDisclosure(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  var [isOpenState, setIsOpen] = React.useState(props.defaultIsOpen || false);\n  var [isControlled, isOpen] = useControllableProp(isOpenProp, isOpenState);\n  var id = useId(idProp, \"disclosure\");\n  var onClose = React.useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n\n    onCloseProp == null ? void 0 : onCloseProp();\n  }, [isControlled, onCloseProp]);\n  var onOpen = React.useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n\n    onOpenProp == null ? void 0 : onOpenProp();\n  }, [isControlled, onOpenProp]);\n  var onToggle = React.useCallback(() => {\n    var action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps: function getButtonProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        \"aria-expanded\": \"true\",\n        \"aria-controls\": id,\n        onClick: callAllHandlers(props.onClick, onToggle)\n      });\n    },\n    getDisclosureProps: function getDisclosureProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        hidden: !isOpen,\n        id\n      });\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","callAllHandlers","React","useControllableProp","useId","useDisclosure","props","onClose","onCloseProp","onOpen","onOpenProp","isOpen","isOpenProp","id","idProp","isOpenState","setIsOpen","useState","defaultIsOpen","isControlled","useCallback","onToggle","action","getButtonProps","onClick","getDisclosureProps","hidden"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/hooks/dist/esm/use-disclosure.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { callAllHandlers } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useControllableProp } from \"./use-controllable\";\nimport { useId } from \"./use-id\";\nexport function useDisclosure(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  var [isOpenState, setIsOpen] = React.useState(props.defaultIsOpen || false);\n  var [isControlled, isOpen] = useControllableProp(isOpenProp, isOpenState);\n  var id = useId(idProp, \"disclosure\");\n  var onClose = React.useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n\n    onCloseProp == null ? void 0 : onCloseProp();\n  }, [isControlled, onCloseProp]);\n  var onOpen = React.useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n\n    onOpenProp == null ? void 0 : onOpenProp();\n  }, [isControlled, onOpenProp]);\n  var onToggle = React.useCallback(() => {\n    var action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps: function getButtonProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        \"aria-expanded\": \"true\",\n        \"aria-controls\": id,\n        onClick: callAllHandlers(props.onClick, onToggle)\n      });\n    },\n    getDisclosureProps: function getDisclosureProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        hidden: !isOpen,\n        id\n      });\n    }\n  };\n}\n//# sourceMappingURL=use-disclosure.js.map"]},"metadata":{},"sourceType":"module"}