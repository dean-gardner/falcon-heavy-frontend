{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n  return function (source) {\n    return source.lift(new TakeUntilOperator(notifier));\n  };\n}\n\nvar TakeUntilOperator = /*@__PURE__*/function () {\n  function TakeUntilOperator(notifier) {\n    this.notifier = notifier;\n  }\n\n  TakeUntilOperator.prototype.call = function (subscriber, source) {\n    var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    var notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n\n    return takeUntilSubscriber;\n  };\n\n  return TakeUntilOperator;\n}();\n\nvar TakeUntilSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TakeUntilSubscriber, _super);\n\n  function TakeUntilSubscriber(destination) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.seenValue = false;\n    return _this;\n  }\n\n  TakeUntilSubscriber.prototype.notifyNext = function () {\n    this.seenValue = true;\n    this.complete();\n  };\n\n  TakeUntilSubscriber.prototype.notifyComplete = function () {};\n\n  return TakeUntilSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,cAAT,EAAyBC,qBAAzB,EAAgDC,qBAAhD,QAA6E,mBAA7E;AACA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAChC,SAAO,UAAUC,MAAV,EAAkB;AAAE,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,iBAAJ,CAAsBH,QAAtB,CAAZ,CAAP;AAAsD,GAAjF;AACH;;AACD,IAAIG,iBAAiB,GAAG,aAAe,YAAY;AAC/C,WAASA,iBAAT,CAA2BH,QAA3B,EAAqC;AACjC,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACDG,mBAAiB,CAACC,SAAlB,CAA4BC,IAA5B,GAAmC,UAAUC,UAAV,EAAsBL,MAAtB,EAA8B;AAC7D,QAAIM,mBAAmB,GAAG,IAAIC,mBAAJ,CAAwBF,UAAxB,CAA1B;AACA,QAAIG,oBAAoB,GAAGb,cAAc,CAAC,KAAKI,QAAN,EAAgB,IAAIH,qBAAJ,CAA0BU,mBAA1B,CAAhB,CAAzC;;AACA,QAAIE,oBAAoB,IAAI,CAACF,mBAAmB,CAACG,SAAjD,EAA4D;AACxDH,yBAAmB,CAACI,GAApB,CAAwBF,oBAAxB;AACA,aAAOR,MAAM,CAACW,SAAP,CAAiBL,mBAAjB,CAAP;AACH;;AACD,WAAOA,mBAAP;AACH,GARD;;AASA,SAAOJ,iBAAP;AACH,CAdsC,EAAvC;;AAeA,IAAIK,mBAAmB,GAAG,aAAe,UAAUK,MAAV,EAAkB;AACvDlB,SAAO,CAACmB,SAAR,CAAkBN,mBAAlB,EAAuCK,MAAvC;;AACA,WAASL,mBAAT,CAA6BO,WAA7B,EAA0C;AACtC,QAAIC,KAAK,GAAGH,MAAM,CAACR,IAAP,CAAY,IAAZ,EAAkBU,WAAlB,KAAkC,IAA9C;;AACAC,SAAK,CAACN,SAAN,GAAkB,KAAlB;AACA,WAAOM,KAAP;AACH;;AACDR,qBAAmB,CAACJ,SAApB,CAA8Ba,UAA9B,GAA2C,YAAY;AACnD,SAAKP,SAAL,GAAiB,IAAjB;AACA,SAAKQ,QAAL;AACH,GAHD;;AAIAV,qBAAmB,CAACJ,SAApB,CAA8Be,cAA9B,GAA+C,YAAY,CAC1D,CADD;;AAEA,SAAOX,mBAAP;AACH,CAdwC,CAcvCV,qBAduC,CAAzC","names":["tslib_1","innerSubscribe","SimpleInnerSubscriber","SimpleOuterSubscriber","takeUntil","notifier","source","lift","TakeUntilOperator","prototype","call","subscriber","takeUntilSubscriber","TakeUntilSubscriber","notifierSubscription","seenValue","add","subscribe","_super","__extends","destination","_this","notifyNext","complete","notifyComplete"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/takeUntil.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        var notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    };\n    return TakeUntilOperator;\n}());\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.seenValue = false;\n        return _this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function () {\n        this.seenValue = true;\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return TakeUntilSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n"]},"metadata":{},"sourceType":"module"}