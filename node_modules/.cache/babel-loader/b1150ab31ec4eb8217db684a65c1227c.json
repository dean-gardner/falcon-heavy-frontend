{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\n\nvar AsyncScheduler = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AsyncScheduler, _super);\n\n  function AsyncScheduler(SchedulerAction, now) {\n    if (now === void 0) {\n      now = Scheduler.now;\n    }\n\n    var _this = _super.call(this, SchedulerAction, function () {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    }) || this;\n\n    _this.actions = [];\n    _this.active = false;\n    _this.scheduled = undefined;\n    return _this;\n  }\n\n  AsyncScheduler.prototype.schedule = function (work, delay, state) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return _super.prototype.schedule.call(this, work, delay, state);\n    }\n  };\n\n  AsyncScheduler.prototype.flush = function (action) {\n    var actions = this.actions;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    var error;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift());\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  return AsyncScheduler;\n}(Scheduler);\n\nexport { AsyncScheduler };","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;;AACA,IAAIC,cAAc,GAAG,aAAe,UAAUC,MAAV,EAAkB;AAClDH,SAAO,CAACI,SAAR,CAAkBF,cAAlB,EAAkCC,MAAlC;;AACA,WAASD,cAAT,CAAwBG,eAAxB,EAAyCC,GAAzC,EAA8C;AAC1C,QAAIA,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAChBA,SAAG,GAAGL,SAAS,CAACK,GAAhB;AACH;;AACD,QAAIC,KAAK,GAAGJ,MAAM,CAACK,IAAP,CAAY,IAAZ,EAAkBH,eAAlB,EAAmC,YAAY;AACvD,UAAIH,cAAc,CAACO,QAAf,IAA2BP,cAAc,CAACO,QAAf,KAA4BF,KAA3D,EAAkE;AAC9D,eAAOL,cAAc,CAACO,QAAf,CAAwBH,GAAxB,EAAP;AACH,OAFD,MAGK;AACD,eAAOA,GAAG,EAAV;AACH;AACJ,KAPW,KAON,IAPN;;AAQAC,SAAK,CAACG,OAAN,GAAgB,EAAhB;AACAH,SAAK,CAACI,MAAN,GAAe,KAAf;AACAJ,SAAK,CAACK,SAAN,GAAkBC,SAAlB;AACA,WAAON,KAAP;AACH;;AACDL,gBAAc,CAACY,SAAf,CAAyBC,QAAzB,GAAoC,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8B;AAC9D,QAAID,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAClBA,WAAK,GAAG,CAAR;AACH;;AACD,QAAIf,cAAc,CAACO,QAAf,IAA2BP,cAAc,CAACO,QAAf,KAA4B,IAA3D,EAAiE;AAC7D,aAAOP,cAAc,CAACO,QAAf,CAAwBM,QAAxB,CAAiCC,IAAjC,EAAuCC,KAAvC,EAA8CC,KAA9C,CAAP;AACH,KAFD,MAGK;AACD,aAAOf,MAAM,CAACW,SAAP,CAAiBC,QAAjB,CAA0BP,IAA1B,CAA+B,IAA/B,EAAqCQ,IAArC,EAA2CC,KAA3C,EAAkDC,KAAlD,CAAP;AACH;AACJ,GAVD;;AAWAhB,gBAAc,CAACY,SAAf,CAAyBK,KAAzB,GAAiC,UAAUC,MAAV,EAAkB;AAC/C,QAAIV,OAAO,GAAG,KAAKA,OAAnB;;AACA,QAAI,KAAKC,MAAT,EAAiB;AACbD,aAAO,CAACW,IAAR,CAAaD,MAAb;AACA;AACH;;AACD,QAAIE,KAAJ;AACA,SAAKX,MAAL,GAAc,IAAd;;AACA,OAAG;AACC,UAAIW,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACF,KAAtB,EAA6BE,MAAM,CAACH,KAApC,CAAZ,EAAwD;AACpD;AACH;AACJ,KAJD,QAISG,MAAM,GAAGV,OAAO,CAACc,KAAR,EAJlB;;AAKA,SAAKb,MAAL,GAAc,KAAd;;AACA,QAAIW,KAAJ,EAAW;AACP,aAAOF,MAAM,GAAGV,OAAO,CAACc,KAAR,EAAhB,EAAiC;AAC7BJ,cAAM,CAACK,WAAP;AACH;;AACD,YAAMH,KAAN;AACH;AACJ,GApBD;;AAqBA,SAAOpB,cAAP;AACH,CApDmC,CAoDlCD,SApDkC,CAApC;;AAqDA,SAASC,cAAT","names":["tslib_1","Scheduler","AsyncScheduler","_super","__extends","SchedulerAction","now","_this","call","delegate","actions","active","scheduled","undefined","prototype","schedule","work","delay","state","flush","action","push","error","execute","shift","unsubscribe"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        _this.active = false;\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n"]},"metadata":{},"sourceType":"module"}