{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n\n  var absoluteDelay = isDate(delay);\n  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);\n  return function (source) {\n    return source.lift(new DelayOperator(delayFor, scheduler));\n  };\n}\n\nvar DelayOperator = /*@__PURE__*/function () {\n  function DelayOperator(delay, scheduler) {\n    this.delay = delay;\n    this.scheduler = scheduler;\n  }\n\n  DelayOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  };\n\n  return DelayOperator;\n}();\n\nvar DelaySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DelaySubscriber, _super);\n\n  function DelaySubscriber(destination, delay, scheduler) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.delay = delay;\n    _this.scheduler = scheduler;\n    _this.queue = [];\n    _this.active = false;\n    _this.errored = false;\n    return _this;\n  }\n\n  DelaySubscriber.dispatch = function (state) {\n    var source = state.source;\n    var queue = source.queue;\n    var scheduler = state.scheduler;\n    var destination = state.destination;\n\n    while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay_1);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  };\n\n  DelaySubscriber.prototype._schedule = function (scheduler) {\n    this.active = true;\n    var destination = this.destination;\n    destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n      source: this,\n      destination: this.destination,\n      scheduler: scheduler\n    }));\n  };\n\n  DelaySubscriber.prototype.scheduleNotification = function (notification) {\n    if (this.errored === true) {\n      return;\n    }\n\n    var scheduler = this.scheduler;\n    var message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  };\n\n  DelaySubscriber.prototype._next = function (value) {\n    this.scheduleNotification(Notification.createNext(value));\n  };\n\n  DelaySubscriber.prototype._error = function (err) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  };\n\n  DelaySubscriber.prototype._complete = function () {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  };\n\n  return DelaySubscriber;\n}(Subscriber);\n\nvar DelayMessage = /*@__PURE__*/function () {\n  function DelayMessage(time, notification) {\n    this.time = time;\n    this.notification = notification;\n  }\n\n  return DelayMessage;\n}();","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,SAASC,KAAT,CAAeA,KAAf,EAAsBC,SAAtB,EAAiC;AACpC,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACtBA,aAAS,GAAGL,KAAZ;AACH;;AACD,MAAIM,aAAa,GAAGL,MAAM,CAACG,KAAD,CAA1B;AACA,MAAIG,QAAQ,GAAGD,aAAa,GAAI,CAACF,KAAD,GAASC,SAAS,CAACG,GAAV,EAAb,GAAgCC,IAAI,CAACC,GAAL,CAASN,KAAT,CAA5D;AACA,SAAO,UAAUO,MAAV,EAAkB;AAAE,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,aAAJ,CAAkBN,QAAlB,EAA4BF,SAA5B,CAAZ,CAAP;AAA6D,GAAxF;AACH;;AACD,IAAIQ,aAAa,GAAG,aAAe,YAAY;AAC3C,WAASA,aAAT,CAAuBT,KAAvB,EAA8BC,SAA9B,EAAyC;AACrC,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AACDQ,eAAa,CAACC,SAAd,CAAwBC,IAAxB,GAA+B,UAAUC,UAAV,EAAsBL,MAAtB,EAA8B;AACzD,WAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,eAAJ,CAAoBF,UAApB,EAAgC,KAAKZ,KAArC,EAA4C,KAAKC,SAAjD,CAAjB,CAAP;AACH,GAFD;;AAGA,SAAOQ,aAAP;AACH,CATkC,EAAnC;;AAUA,IAAIK,eAAe,GAAG,aAAe,UAAUC,MAAV,EAAkB;AACnDpB,SAAO,CAACqB,SAAR,CAAkBF,eAAlB,EAAmCC,MAAnC;;AACA,WAASD,eAAT,CAAyBG,WAAzB,EAAsCjB,KAAtC,EAA6CC,SAA7C,EAAwD;AACpD,QAAIiB,KAAK,GAAGH,MAAM,CAACJ,IAAP,CAAY,IAAZ,EAAkBM,WAAlB,KAAkC,IAA9C;;AACAC,SAAK,CAAClB,KAAN,GAAcA,KAAd;AACAkB,SAAK,CAACjB,SAAN,GAAkBA,SAAlB;AACAiB,SAAK,CAACC,KAAN,GAAc,EAAd;AACAD,SAAK,CAACE,MAAN,GAAe,KAAf;AACAF,SAAK,CAACG,OAAN,GAAgB,KAAhB;AACA,WAAOH,KAAP;AACH;;AACDJ,iBAAe,CAACQ,QAAhB,GAA2B,UAAUC,KAAV,EAAiB;AACxC,QAAIhB,MAAM,GAAGgB,KAAK,CAAChB,MAAnB;AACA,QAAIY,KAAK,GAAGZ,MAAM,CAACY,KAAnB;AACA,QAAIlB,SAAS,GAAGsB,KAAK,CAACtB,SAAtB;AACA,QAAIgB,WAAW,GAAGM,KAAK,CAACN,WAAxB;;AACA,WAAOE,KAAK,CAACK,MAAN,GAAe,CAAf,IAAqBL,KAAK,CAAC,CAAD,CAAL,CAASM,IAAT,GAAgBxB,SAAS,CAACG,GAAV,EAAjB,IAAqC,CAAhE,EAAmE;AAC/De,WAAK,CAACO,KAAN,GAAcC,YAAd,CAA2BC,OAA3B,CAAmCX,WAAnC;AACH;;AACD,QAAIE,KAAK,CAACK,MAAN,GAAe,CAAnB,EAAsB;AAClB,UAAIK,OAAO,GAAGxB,IAAI,CAACyB,GAAL,CAAS,CAAT,EAAYX,KAAK,CAAC,CAAD,CAAL,CAASM,IAAT,GAAgBxB,SAAS,CAACG,GAAV,EAA5B,CAAd;AACA,WAAK2B,QAAL,CAAcR,KAAd,EAAqBM,OAArB;AACH,KAHD,MAIK;AACD,WAAKG,WAAL;AACAzB,YAAM,CAACa,MAAP,GAAgB,KAAhB;AACH;AACJ,GAhBD;;AAiBAN,iBAAe,CAACJ,SAAhB,CAA0BuB,SAA1B,GAAsC,UAAUhC,SAAV,EAAqB;AACvD,SAAKmB,MAAL,GAAc,IAAd;AACA,QAAIH,WAAW,GAAG,KAAKA,WAAvB;AACAA,eAAW,CAACiB,GAAZ,CAAgBjC,SAAS,CAAC8B,QAAV,CAAmBjB,eAAe,CAACQ,QAAnC,EAA6C,KAAKtB,KAAlD,EAAyD;AACrEO,YAAM,EAAE,IAD6D;AACvDU,iBAAW,EAAE,KAAKA,WADqC;AACxBhB,eAAS,EAAEA;AADa,KAAzD,CAAhB;AAGH,GAND;;AAOAa,iBAAe,CAACJ,SAAhB,CAA0ByB,oBAA1B,GAAiD,UAAUR,YAAV,EAAwB;AACrE,QAAI,KAAKN,OAAL,KAAiB,IAArB,EAA2B;AACvB;AACH;;AACD,QAAIpB,SAAS,GAAG,KAAKA,SAArB;AACA,QAAImC,OAAO,GAAG,IAAIC,YAAJ,CAAiBpC,SAAS,CAACG,GAAV,KAAkB,KAAKJ,KAAxC,EAA+C2B,YAA/C,CAAd;AACA,SAAKR,KAAL,CAAWmB,IAAX,CAAgBF,OAAhB;;AACA,QAAI,KAAKhB,MAAL,KAAgB,KAApB,EAA2B;AACvB,WAAKa,SAAL,CAAehC,SAAf;AACH;AACJ,GAVD;;AAWAa,iBAAe,CAACJ,SAAhB,CAA0B6B,KAA1B,GAAkC,UAAUC,KAAV,EAAiB;AAC/C,SAAKL,oBAAL,CAA0BpC,YAAY,CAAC0C,UAAb,CAAwBD,KAAxB,CAA1B;AACH,GAFD;;AAGA1B,iBAAe,CAACJ,SAAhB,CAA0BgC,MAA1B,GAAmC,UAAUC,GAAV,EAAe;AAC9C,SAAKtB,OAAL,GAAe,IAAf;AACA,SAAKF,KAAL,GAAa,EAAb;AACA,SAAKF,WAAL,CAAiB2B,KAAjB,CAAuBD,GAAvB;AACA,SAAKX,WAAL;AACH,GALD;;AAMAlB,iBAAe,CAACJ,SAAhB,CAA0BmC,SAA1B,GAAsC,YAAY;AAC9C,SAAKV,oBAAL,CAA0BpC,YAAY,CAAC+C,cAAb,EAA1B;AACA,SAAKd,WAAL;AACH,GAHD;;AAIA,SAAOlB,eAAP;AACH,CA5DoC,CA4DnChB,UA5DmC,CAArC;;AA6DA,IAAIuC,YAAY,GAAG,aAAe,YAAY;AAC1C,WAASA,YAAT,CAAsBZ,IAAtB,EAA4BE,YAA5B,EAA0C;AACtC,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKE,YAAL,GAAoBA,YAApB;AACH;;AACD,SAAOU,YAAP;AACH,CANiC,EAAlC","names":["tslib_1","async","isDate","Subscriber","Notification","delay","scheduler","absoluteDelay","delayFor","now","Math","abs","source","lift","DelayOperator","prototype","call","subscriber","subscribe","DelaySubscriber","_super","__extends","destination","_this","queue","active","errored","dispatch","state","length","time","shift","notification","observe","delay_1","max","schedule","unsubscribe","_schedule","add","scheduleNotification","message","DelayMessage","push","_next","value","createNext","_error","err","error","_complete","createComplete"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/delay.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    var absoluteDelay = isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nvar DelayOperator = /*@__PURE__*/ (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\nvar DelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.delay = delay;\n        _this.scheduler = scheduler;\n        _this.queue = [];\n        _this.active = false;\n        _this.errored = false;\n        return _this;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        var destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    };\n    return DelaySubscriber;\n}(Subscriber));\nvar DelayMessage = /*@__PURE__*/ (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n"]},"metadata":{},"sourceType":"module"}