{"ast":null,"code":"import React, { forwardRef, useRef, useMemo, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport { useForkedRef, usePrevious, getOwnerDocument } from '@reach/utils';\nimport PropTypes from 'prop-types';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/*\r\n * Singleton state is fine because you don't server render\r\n * an alert (SRs don't read them on first load anyway)\r\n */\n\n\nvar keys = {\n  polite: -1,\n  assertive: -1\n};\nvar elements = {\n  polite: {},\n  assertive: {}\n};\nvar liveRegions = {\n  polite: null,\n  assertive: null\n};\nvar renderTimer; ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Alert\r\n *\r\n * Screen-reader-friendly alert messages. In many apps developers add \"alert\"\r\n * messages when network events or other things happen. Users with assistive\r\n * technologies may not know about the message unless you develop for it.\r\n *\r\n * @see Docs https://reach.tech/alert\r\n */\n\nvar Alert = /*#__PURE__*/forwardRef(function Alert(_ref, forwardedRef) {\n  var children = _ref.children,\n      _ref$type = _ref.type,\n      regionType = _ref$type === void 0 ? \"polite\" : _ref$type,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"type\"]);\n\n  var ownRef = useRef(null);\n  var ref = useForkedRef(forwardedRef, ownRef);\n  var child = useMemo(function () {\n    return React.createElement(\"div\", Object.assign({}, props, {\n      ref: ref,\n      \"data-reach-alert\": true\n    }), children);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [children, props]);\n  useMirrorEffects(regionType, child, ownRef);\n  return child;\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Alert.displayName = \"Alert\";\n  Alert.propTypes = {\n    children: PropTypes.node,\n    type: /*#__PURE__*/PropTypes.oneOf([\"assertive\", \"polite\"])\n  };\n}\n\nfunction createMirror(type, doc) {\n  var key = ++keys[type];\n\n  var mount = function mount(element) {\n    if (liveRegions[type]) {\n      elements[type][key] = element;\n      renderAlerts();\n    } else {\n      var node = doc.createElement(\"div\");\n      node.setAttribute(\"data-reach-live-\" + type, \"true\");\n      liveRegions[type] = node;\n      doc.body.appendChild(liveRegions[type]);\n      mount(element);\n    }\n  };\n\n  var update = function update(element) {\n    elements[type][key] = element;\n    renderAlerts();\n  };\n\n  var unmount = function unmount() {\n    delete elements[type][key];\n    renderAlerts();\n  };\n\n  return {\n    mount: mount,\n    update: update,\n    unmount: unmount\n  };\n}\n\nfunction renderAlerts() {\n  if (renderTimer != null) {\n    window.clearTimeout(renderTimer);\n  }\n\n  renderTimer = window.setTimeout(function () {\n    Object.keys(elements).forEach(function (elementType) {\n      var regionType = elementType;\n      var container = liveRegions[regionType];\n\n      if (container) {\n        render(React.createElement(VisuallyHidden, null, React.createElement(\"div\", {\n          // The status role is a type of live region and a container whose\n          // content is advisory information for the user that is not\n          // important enough to justify an alert, and is often presented as\n          // a status bar. When the role is added to an element, the browser\n          // will send out an accessible status event to assistive\n          // technology products which can then notify the user about it.\n          // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_status_role\n          role: regionType === \"assertive\" ? \"alert\" : \"status\",\n          \"aria-live\": regionType\n        }, Object.keys(elements[regionType]).map(function (key) {\n          return React.cloneElement(elements[regionType][key], {\n            key: key,\n            ref: null\n          });\n        }))), liveRegions[regionType]);\n      }\n    });\n  }, 500);\n}\n\nfunction useMirrorEffects(regionType, element, ref) {\n  var prevType = usePrevious(regionType);\n  var mirror = useRef(null);\n  var mounted = useRef(false);\n  useEffect(function () {\n    var ownerDocument = getOwnerDocument(ref.current) || document;\n\n    if (!mounted.current) {\n      mounted.current = true;\n      mirror.current = createMirror(regionType, ownerDocument);\n      mirror.current.mount(element);\n    } else if (prevType !== regionType) {\n      mirror.current && mirror.current.unmount();\n      mirror.current = createMirror(regionType, ownerDocument);\n      mirror.current.mount(element);\n    } else {\n      mirror.current && mirror.current.update(element);\n    }\n  }, [element, regionType, prevType, ref]);\n  useEffect(function () {\n    return function () {\n      mirror.current && mirror.current.unmount();\n    };\n  }, []);\n}\n\nexport default Alert;\nexport { Alert };","map":{"version":3,"mappings":"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","names":["React","forwardRef","useRef","useMemo","useEffect","render","VisuallyHidden","useForkedRef","usePrevious","getOwnerDocument","PropTypes","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","polite","assertive","elements","liveRegions","renderTimer","Alert","_ref","forwardedRef","children","_ref$type","type","regionType","props","ownRef","ref","child","createElement","assign","useMirrorEffects","process","env","NODE_ENV","displayName","propTypes","node","oneOf","createMirror","doc","mount","element","renderAlerts","setAttribute","body","appendChild","update","unmount","window","clearTimeout","setTimeout","forEach","elementType","container","role","map","cloneElement","prevType","mirror","mounted","ownerDocument","current","document"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/toast/node_modules/@reach/alert/dist/alert.esm.js"],"sourcesContent":["import React, { forwardRef, useRef, useMemo, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport { useForkedRef, usePrevious, getOwnerDocument } from '@reach/utils';\nimport PropTypes from 'prop-types';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n/*\r\n * Singleton state is fine because you don't server render\r\n * an alert (SRs don't read them on first load anyway)\r\n */\n\nvar keys = {\n  polite: -1,\n  assertive: -1\n};\nvar elements = {\n  polite: {},\n  assertive: {}\n};\nvar liveRegions = {\n  polite: null,\n  assertive: null\n};\nvar renderTimer; ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Alert\r\n *\r\n * Screen-reader-friendly alert messages. In many apps developers add \"alert\"\r\n * messages when network events or other things happen. Users with assistive\r\n * technologies may not know about the message unless you develop for it.\r\n *\r\n * @see Docs https://reach.tech/alert\r\n */\n\nvar Alert = /*#__PURE__*/forwardRef(function Alert(_ref, forwardedRef) {\n  var children = _ref.children,\n      _ref$type = _ref.type,\n      regionType = _ref$type === void 0 ? \"polite\" : _ref$type,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"type\"]);\n\n  var ownRef = useRef(null);\n  var ref = useForkedRef(forwardedRef, ownRef);\n  var child = useMemo(function () {\n    return React.createElement(\"div\", Object.assign({}, props, {\n      ref: ref,\n      \"data-reach-alert\": true\n    }), children);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [children, props]);\n  useMirrorEffects(regionType, child, ownRef);\n  return child;\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Alert.displayName = \"Alert\";\n  Alert.propTypes = {\n    children: PropTypes.node,\n    type: /*#__PURE__*/PropTypes.oneOf([\"assertive\", \"polite\"])\n  };\n}\n\nfunction createMirror(type, doc) {\n  var key = ++keys[type];\n\n  var mount = function mount(element) {\n    if (liveRegions[type]) {\n      elements[type][key] = element;\n      renderAlerts();\n    } else {\n      var node = doc.createElement(\"div\");\n      node.setAttribute(\"data-reach-live-\" + type, \"true\");\n      liveRegions[type] = node;\n      doc.body.appendChild(liveRegions[type]);\n      mount(element);\n    }\n  };\n\n  var update = function update(element) {\n    elements[type][key] = element;\n    renderAlerts();\n  };\n\n  var unmount = function unmount() {\n    delete elements[type][key];\n    renderAlerts();\n  };\n\n  return {\n    mount: mount,\n    update: update,\n    unmount: unmount\n  };\n}\n\nfunction renderAlerts() {\n  if (renderTimer != null) {\n    window.clearTimeout(renderTimer);\n  }\n\n  renderTimer = window.setTimeout(function () {\n    Object.keys(elements).forEach(function (elementType) {\n      var regionType = elementType;\n      var container = liveRegions[regionType];\n\n      if (container) {\n        render(React.createElement(VisuallyHidden, null, React.createElement(\"div\", {\n          // The status role is a type of live region and a container whose\n          // content is advisory information for the user that is not\n          // important enough to justify an alert, and is often presented as\n          // a status bar. When the role is added to an element, the browser\n          // will send out an accessible status event to assistive\n          // technology products which can then notify the user about it.\n          // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_status_role\n          role: regionType === \"assertive\" ? \"alert\" : \"status\",\n          \"aria-live\": regionType\n        }, Object.keys(elements[regionType]).map(function (key) {\n          return React.cloneElement(elements[regionType][key], {\n            key: key,\n            ref: null\n          });\n        }))), liveRegions[regionType]);\n      }\n    });\n  }, 500);\n}\n\nfunction useMirrorEffects(regionType, element, ref) {\n  var prevType = usePrevious(regionType);\n  var mirror = useRef(null);\n  var mounted = useRef(false);\n  useEffect(function () {\n    var ownerDocument = getOwnerDocument(ref.current) || document;\n\n    if (!mounted.current) {\n      mounted.current = true;\n      mirror.current = createMirror(regionType, ownerDocument);\n      mirror.current.mount(element);\n    } else if (prevType !== regionType) {\n      mirror.current && mirror.current.unmount();\n      mirror.current = createMirror(regionType, ownerDocument);\n      mirror.current.mount(element);\n    } else {\n      mirror.current && mirror.current.update(element);\n    }\n  }, [element, regionType, prevType, ref]);\n  useEffect(function () {\n    return function () {\n      mirror.current && mirror.current.unmount();\n    };\n  }, []);\n}\n\nexport default Alert;\nexport { Alert };\n//# sourceMappingURL=alert.esm.js.map\n"]},"metadata":{},"sourceType":"module"}