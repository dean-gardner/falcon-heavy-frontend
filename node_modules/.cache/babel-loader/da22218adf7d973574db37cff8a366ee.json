{"ast":null,"code":"import * as React from \"react\";\nexport function useEventListeners() {\n  var listeners = React.useRef(new Map());\n  var add = React.useCallback((el, type, listener, options) => {\n    listeners.current.set(listener, {\n      type,\n      el,\n      options\n    });\n    el.addEventListener(type, listener, options);\n  }, []);\n  var remove = React.useCallback((el, type, listener, options) => {\n    el.removeEventListener(type, listener, options);\n    listeners.current.delete(listener);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      listeners.current.forEach((value, key) => {\n        remove(value.el, value.type, key, value.options);\n      });\n    };\n  }, [remove]);\n  return {\n    add,\n    remove\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,SAASC,iBAAT,GAA6B;AAClC,MAAIC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAa,IAAIC,GAAJ,EAAb,CAAhB;AACA,MAAIC,GAAG,GAAGL,KAAK,CAACM,WAAN,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,QAAX,EAAqBC,OAArB,KAAiC;AAC3DR,aAAS,CAACS,OAAV,CAAkBC,GAAlB,CAAsBH,QAAtB,EAAgC;AAC9BD,UAD8B;AAE9BD,QAF8B;AAG9BG;AAH8B,KAAhC;AAKAH,MAAE,CAACM,gBAAH,CAAoBL,IAApB,EAA0BC,QAA1B,EAAoCC,OAApC;AACD,GAPS,EAOP,EAPO,CAAV;AAQA,MAAII,MAAM,GAAGd,KAAK,CAACM,WAAN,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,QAAX,EAAqBC,OAArB,KAAiC;AAC9DH,MAAE,CAACQ,mBAAH,CAAuBP,IAAvB,EAA6BC,QAA7B,EAAuCC,OAAvC;AACAR,aAAS,CAACS,OAAV,CAAkBK,MAAlB,CAAyBP,QAAzB;AACD,GAHY,EAGV,EAHU,CAAb;AAIAT,OAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAM;AACXf,eAAS,CAACS,OAAV,CAAkBO,OAAlB,CAA0B,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACxCN,cAAM,CAACK,KAAK,CAACZ,EAAP,EAAWY,KAAK,CAACX,IAAjB,EAAuBY,GAAvB,EAA4BD,KAAK,CAACT,OAAlC,CAAN;AACD,OAFD;AAGD,KAJD;AAKD,GAND,EAMG,CAACI,MAAD,CANH;AAOA,SAAO;AACLT,OADK;AAELS;AAFK,GAAP;AAID","names":["React","useEventListeners","listeners","useRef","Map","add","useCallback","el","type","listener","options","current","set","addEventListener","remove","removeEventListener","delete","useEffect","forEach","value","key"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/clickable/dist/esm/use-event-listeners.js"],"sourcesContent":["import * as React from \"react\";\nexport function useEventListeners() {\n  var listeners = React.useRef(new Map());\n  var add = React.useCallback((el, type, listener, options) => {\n    listeners.current.set(listener, {\n      type,\n      el,\n      options\n    });\n    el.addEventListener(type, listener, options);\n  }, []);\n  var remove = React.useCallback((el, type, listener, options) => {\n    el.removeEventListener(type, listener, options);\n    listeners.current.delete(listener);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      listeners.current.forEach((value, key) => {\n        remove(value.el, value.type, key, value.options);\n      });\n    };\n  }, [remove]);\n  return {\n    add,\n    remove\n  };\n}\n//# sourceMappingURL=use-event-listeners.js.map"]},"metadata":{},"sourceType":"module"}