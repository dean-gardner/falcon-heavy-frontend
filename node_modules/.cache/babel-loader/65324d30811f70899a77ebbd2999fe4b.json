{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\n\nvar AsapScheduler = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AsapScheduler, _super);\n\n  function AsapScheduler() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AsapScheduler.prototype.flush = function (action) {\n    this.active = true;\n    this.scheduled = undefined;\n    var actions = this.actions;\n    var error;\n    var index = -1;\n    var count = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  return AsapScheduler;\n}(AsyncScheduler);\n\nexport { AsapScheduler };","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AACA,IAAIC,aAAa,GAAG,aAAe,UAAUC,MAAV,EAAkB;AACjDH,SAAO,CAACI,SAAR,CAAkBF,aAAlB,EAAiCC,MAAjC;;AACA,WAASD,aAAT,GAAyB;AACrB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDJ,eAAa,CAACK,SAAd,CAAwBC,KAAxB,GAAgC,UAAUC,MAAV,EAAkB;AAC9C,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,SAAL,GAAiBC,SAAjB;AACA,QAAIC,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAIC,KAAJ;AACA,QAAIC,KAAK,GAAG,CAAC,CAAb;AACA,QAAIC,KAAK,GAAGH,OAAO,CAACI,MAApB;AACAR,UAAM,GAAGA,MAAM,IAAII,OAAO,CAACK,KAAR,EAAnB;;AACA,OAAG;AACC,UAAIJ,KAAK,GAAGL,MAAM,CAACU,OAAP,CAAeV,MAAM,CAACW,KAAtB,EAA6BX,MAAM,CAACY,KAApC,CAAZ,EAAwD;AACpD;AACH;AACJ,KAJD,QAIS,EAAEN,KAAF,GAAUC,KAAV,KAAoBP,MAAM,GAAGI,OAAO,CAACK,KAAR,EAA7B,CAJT;;AAKA,SAAKR,MAAL,GAAc,KAAd;;AACA,QAAII,KAAJ,EAAW;AACP,aAAO,EAAEC,KAAF,GAAUC,KAAV,KAAoBP,MAAM,GAAGI,OAAO,CAACK,KAAR,EAA7B,CAAP,EAAsD;AAClDT,cAAM,CAACa,WAAP;AACH;;AACD,YAAMR,KAAN;AACH;AACJ,GApBD;;AAqBA,SAAOZ,aAAP;AACH,CA3BkC,CA2BjCD,cA3BiC,CAAnC;;AA4BA,SAASC,aAAT","names":["tslib_1","AsyncScheduler","AsapScheduler","_super","__extends","apply","arguments","prototype","flush","action","active","scheduled","undefined","actions","error","index","count","length","shift","execute","state","delay","unsubscribe"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar AsapScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler));\nexport { AsapScheduler };\n//# sourceMappingURL=AsapScheduler.js.map\n"]},"metadata":{},"sourceType":"module"}