{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { openToast } from './alert/Toast';\nimport { openAlert } from './alert/Alert';\nimport { getQrData } from './utils/qr';\nimport { Logger } from './utils/Logger';\nimport { BeaconError } from './errors/BeaconError';\nimport { getAccountBlockExplorerLinkForNetwork, getTransactionBlockExplorerLinkForNetwork } from './utils/block-explorer';\nimport { UnknownBeaconError } from '.';\nconst logger = new Logger('BeaconEvents');\nexport var BeaconEvent;\n\n(function (BeaconEvent) {\n  BeaconEvent[\"PERMISSION_REQUEST_SENT\"] = \"PERMISSION_REQUEST_SENT\";\n  BeaconEvent[\"PERMISSION_REQUEST_SUCCESS\"] = \"PERMISSION_REQUEST_SUCCESS\";\n  BeaconEvent[\"PERMISSION_REQUEST_ERROR\"] = \"PERMISSION_REQUEST_ERROR\";\n  BeaconEvent[\"OPERATION_REQUEST_SENT\"] = \"OPERATION_REQUEST_SENT\";\n  BeaconEvent[\"OPERATION_REQUEST_SUCCESS\"] = \"OPERATION_REQUEST_SUCCESS\";\n  BeaconEvent[\"OPERATION_REQUEST_ERROR\"] = \"OPERATION_REQUEST_ERROR\";\n  BeaconEvent[\"SIGN_REQUEST_SENT\"] = \"SIGN_REQUEST_SENT\";\n  BeaconEvent[\"SIGN_REQUEST_SUCCESS\"] = \"SIGN_REQUEST_SUCCESS\";\n  BeaconEvent[\"SIGN_REQUEST_ERROR\"] = \"SIGN_REQUEST_ERROR\";\n  BeaconEvent[\"BROADCAST_REQUEST_SENT\"] = \"BROADCAST_REQUEST_SENT\";\n  BeaconEvent[\"BROADCAST_REQUEST_SUCCESS\"] = \"BROADCAST_REQUEST_SUCCESS\";\n  BeaconEvent[\"BROADCAST_REQUEST_ERROR\"] = \"BROADCAST_REQUEST_ERROR\";\n  BeaconEvent[\"LOCAL_RATE_LIMIT_REACHED\"] = \"LOCAL_RATE_LIMIT_REACHED\";\n  BeaconEvent[\"NO_PERMISSIONS\"] = \"NO_PERMISSIONS\";\n  BeaconEvent[\"ACTIVE_ACCOUNT_SET\"] = \"ACTIVE_ACCOUNT_SET\";\n  BeaconEvent[\"ACTIVE_TRANSPORT_SET\"] = \"ACTIVE_TRANSPORT_SET\";\n  BeaconEvent[\"P2P_CHANNEL_CONNECT_SUCCESS\"] = \"P2P_CHANNEL_CONNECT_SUCCESS\";\n  BeaconEvent[\"P2P_LISTEN_FOR_CHANNEL_OPEN\"] = \"P2P_LISTEN_FOR_CHANNEL_OPEN\";\n  BeaconEvent[\"INTERNAL_ERROR\"] = \"INTERNAL_ERROR\";\n  BeaconEvent[\"UNKNOWN\"] = \"UNKNOWN\";\n})(BeaconEvent || (BeaconEvent = {}));\n\nconst showSentToast = () => __awaiter(void 0, void 0, void 0, function* () {\n  openToast({\n    body: 'Request sent',\n    timer: 3000\n  }).catch(toastError => console.error(toastError));\n});\n\nconst showNoPermissionAlert = () => __awaiter(void 0, void 0, void 0, function* () {\n  yield openAlert({\n    title: 'No Permission',\n    body: 'Please allow the wallet to handle this type of request.'\n  });\n});\n\nconst showErrorAlert = beaconError => __awaiter(void 0, void 0, void 0, function* () {\n  const error = beaconError.errorType ? BeaconError.getError(beaconError.errorType) : new UnknownBeaconError();\n  yield openAlert({\n    title: error.title,\n    body: error.description\n  });\n});\n\nconst showRateLimitReached = () => __awaiter(void 0, void 0, void 0, function* () {\n  openToast({\n    body: 'Rate limit reached. Please slow down',\n    timer: 3000\n  }).catch(toastError => console.error(toastError));\n});\n\nconst showBeaconConnectedAlert = () => __awaiter(void 0, void 0, void 0, function* () {\n  yield openAlert({\n    title: 'Success',\n    body: 'A wallet has been paired over the beacon network.',\n    confirmButtonText: 'Done',\n    timer: 1500\n  });\n});\n\nconst showInternalErrorAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const alertConfig = {\n    title: 'Internal Error',\n    confirmButtonText: 'Done',\n    body: `${data}`,\n    confirmCallback: () => undefined\n  };\n  yield openAlert(alertConfig);\n});\n\nconst showQrCode = data => __awaiter(void 0, void 0, void 0, function* () {\n  const dataString = JSON.stringify(data);\n  console.log(dataString);\n  const alertConfig = {\n    title: 'Pair with Wallet',\n    confirmButtonText: 'Done',\n    body: `${getQrData(dataString, 'svg')}<p>Connect wallet by scanning the QR code or clicking the link button <a href=\"https://docs.walletbeacon.io/supported-wallets.html\" target=\"_blank\">Learn&nbsp;more</a></p>`,\n    confirmCallback: () => undefined\n  };\n  yield openAlert(alertConfig);\n});\n\nconst showPermissionSuccessAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const {\n    account,\n    output\n  } = data;\n  const alertConfig = {\n    title: 'Permission Granted',\n    body: `We received permissions for the address <strong>${output.address}</strong>\n    <br>\n    <br>\n    Network: <strong>${output.network.type}</strong>\n    <br>\n    Permissions: <strong>${output.scopes}</strong>`,\n    confirmButtonText: 'Done',\n    confirmCallback: () => undefined,\n    actionButtonText: 'Open Blockexplorer',\n    actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n      const link = yield getAccountBlockExplorerLinkForNetwork(account.network, output.address);\n      window.open(link, '_blank');\n    })\n  };\n  yield openAlert(alertConfig);\n});\n\nconst showOperationSuccessAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const {\n    account,\n    output\n  } = data;\n  const alertConfig = {\n    title: 'Operation Broadcasted',\n    body: `The transaction has successfully been broadcasted to the network with the following hash. <strong>${output.transactionHash}</strong>`,\n    confirmButtonText: 'Done',\n    confirmCallback: () => undefined,\n    actionButtonText: 'Open Blockexplorer',\n    actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n      const link = yield getTransactionBlockExplorerLinkForNetwork(account.network, output.transactionHash);\n      window.open(link, '_blank');\n    })\n  };\n  yield openAlert(alertConfig);\n});\n\nconst showSignSuccessAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const output = data.output;\n  const alertConfig = {\n    title: 'Payload signed',\n    body: `The payload has successfully been signed.\n    <br>\n    Signature: <strong>${output.signature}</strong>`,\n    confirmButtonText: 'Done',\n    confirmCallback: () => undefined\n  };\n  yield openAlert(alertConfig);\n});\n\nconst showBroadcastSuccessAlert = data => __awaiter(void 0, void 0, void 0, function* () {\n  const {\n    network,\n    output\n  } = data;\n  const alertConfig = {\n    title: 'Broadcasted',\n    body: `The transaction has successfully been broadcasted to the network with the following hash. <strong>${output.transactionHash}</strong>`,\n    confirmButtonText: 'Done',\n    confirmCallback: () => undefined,\n    actionButtonText: 'Open Blockexplorer',\n    actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n      const link = yield getTransactionBlockExplorerLinkForNetwork(network, output.transactionHash);\n      window.open(link, '_blank');\n    })\n  };\n  yield openAlert(alertConfig);\n});\n\nconst emptyHandler = eventType => data => __awaiter(void 0, void 0, void 0, function* () {\n  logger.log('emptyHandler', eventType, data);\n});\n\nexport const defaultEventCallbacks = {\n  [BeaconEvent.PERMISSION_REQUEST_SENT]: showSentToast,\n  [BeaconEvent.PERMISSION_REQUEST_SUCCESS]: showPermissionSuccessAlert,\n  [BeaconEvent.PERMISSION_REQUEST_ERROR]: showErrorAlert,\n  [BeaconEvent.OPERATION_REQUEST_SENT]: showSentToast,\n  [BeaconEvent.OPERATION_REQUEST_SUCCESS]: showOperationSuccessAlert,\n  [BeaconEvent.OPERATION_REQUEST_ERROR]: showErrorAlert,\n  [BeaconEvent.SIGN_REQUEST_SENT]: showSentToast,\n  [BeaconEvent.SIGN_REQUEST_SUCCESS]: showSignSuccessAlert,\n  [BeaconEvent.SIGN_REQUEST_ERROR]: showErrorAlert,\n  [BeaconEvent.BROADCAST_REQUEST_SENT]: showSentToast,\n  [BeaconEvent.BROADCAST_REQUEST_SUCCESS]: showBroadcastSuccessAlert,\n  [BeaconEvent.BROADCAST_REQUEST_ERROR]: showErrorAlert,\n  [BeaconEvent.LOCAL_RATE_LIMIT_REACHED]: showRateLimitReached,\n  [BeaconEvent.NO_PERMISSIONS]: showNoPermissionAlert,\n  [BeaconEvent.ACTIVE_ACCOUNT_SET]: emptyHandler(BeaconEvent.ACTIVE_ACCOUNT_SET),\n  [BeaconEvent.ACTIVE_TRANSPORT_SET]: emptyHandler(BeaconEvent.ACTIVE_TRANSPORT_SET),\n  [BeaconEvent.P2P_CHANNEL_CONNECT_SUCCESS]: showBeaconConnectedAlert,\n  [BeaconEvent.P2P_LISTEN_FOR_CHANNEL_OPEN]: showQrCode,\n  [BeaconEvent.INTERNAL_ERROR]: showInternalErrorAlert,\n  [BeaconEvent.UNKNOWN]: emptyHandler(BeaconEvent.UNKNOWN)\n};\nexport class BeaconEventHandler {\n  constructor() {\n    let eventsToOverride = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.callbackMap = {\n      [BeaconEvent.PERMISSION_REQUEST_SENT]: [defaultEventCallbacks.PERMISSION_REQUEST_SENT],\n      [BeaconEvent.PERMISSION_REQUEST_SUCCESS]: [defaultEventCallbacks.PERMISSION_REQUEST_SUCCESS],\n      [BeaconEvent.PERMISSION_REQUEST_ERROR]: [defaultEventCallbacks.PERMISSION_REQUEST_ERROR],\n      [BeaconEvent.OPERATION_REQUEST_SENT]: [defaultEventCallbacks.OPERATION_REQUEST_SENT],\n      [BeaconEvent.OPERATION_REQUEST_SUCCESS]: [defaultEventCallbacks.OPERATION_REQUEST_SUCCESS],\n      [BeaconEvent.OPERATION_REQUEST_ERROR]: [defaultEventCallbacks.OPERATION_REQUEST_ERROR],\n      [BeaconEvent.SIGN_REQUEST_SENT]: [defaultEventCallbacks.SIGN_REQUEST_SENT],\n      [BeaconEvent.SIGN_REQUEST_SUCCESS]: [defaultEventCallbacks.SIGN_REQUEST_SUCCESS],\n      [BeaconEvent.SIGN_REQUEST_ERROR]: [defaultEventCallbacks.SIGN_REQUEST_ERROR],\n      [BeaconEvent.BROADCAST_REQUEST_SENT]: [defaultEventCallbacks.BROADCAST_REQUEST_SENT],\n      [BeaconEvent.BROADCAST_REQUEST_SUCCESS]: [defaultEventCallbacks.BROADCAST_REQUEST_SUCCESS],\n      [BeaconEvent.BROADCAST_REQUEST_ERROR]: [defaultEventCallbacks.BROADCAST_REQUEST_ERROR],\n      [BeaconEvent.LOCAL_RATE_LIMIT_REACHED]: [defaultEventCallbacks.LOCAL_RATE_LIMIT_REACHED],\n      [BeaconEvent.NO_PERMISSIONS]: [defaultEventCallbacks.NO_PERMISSIONS],\n      [BeaconEvent.ACTIVE_ACCOUNT_SET]: [defaultEventCallbacks.ACTIVE_ACCOUNT_SET],\n      [BeaconEvent.ACTIVE_TRANSPORT_SET]: [defaultEventCallbacks.ACTIVE_TRANSPORT_SET],\n      [BeaconEvent.P2P_CHANNEL_CONNECT_SUCCESS]: [defaultEventCallbacks.P2P_CHANNEL_CONNECT_SUCCESS],\n      [BeaconEvent.P2P_LISTEN_FOR_CHANNEL_OPEN]: [defaultEventCallbacks.P2P_LISTEN_FOR_CHANNEL_OPEN],\n      [BeaconEvent.INTERNAL_ERROR]: [defaultEventCallbacks.INTERNAL_ERROR],\n      [BeaconEvent.UNKNOWN]: [defaultEventCallbacks.UNKNOWN]\n    };\n    this.overrideDefaults(eventsToOverride).catch(overrideError => {\n      logger.error('constructor', overrideError);\n    });\n  }\n\n  on(event, eventCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const listeners = this.callbackMap[event] || [];\n      listeners.push(eventCallback);\n      this.callbackMap[event] = listeners;\n    });\n  }\n\n  emit(event, data) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const listeners = this.callbackMap[event];\n\n      if (listeners && listeners.length > 0) {\n        listeners.forEach(listener => __awaiter(this, void 0, void 0, function* () {\n          try {\n            yield listener(data);\n          } catch (listenerError) {\n            logger.error(`error handling event ${event}`, listenerError);\n          }\n        }));\n      }\n    });\n  }\n\n  overrideDefaults(eventsToOverride) {\n    return __awaiter(this, void 0, void 0, function* () {\n      Object.keys(eventsToOverride).forEach(untypedEvent => {\n        const eventType = untypedEvent;\n        const event = eventsToOverride[eventType];\n\n        if (event) {\n          this.callbackMap[eventType] = [event.handler];\n        }\n      });\n    });\n  }\n\n}","map":{"version":3,"mappings":"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","names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","openToast","openAlert","getQrData","Logger","BeaconError","getAccountBlockExplorerLinkForNetwork","getTransactionBlockExplorerLinkForNetwork","UnknownBeaconError","logger","BeaconEvent","showSentToast","body","timer","catch","toastError","console","error","showNoPermissionAlert","title","showErrorAlert","beaconError","errorType","getError","description","showRateLimitReached","showBeaconConnectedAlert","confirmButtonText","showInternalErrorAlert","data","alertConfig","confirmCallback","undefined","showQrCode","dataString","JSON","stringify","log","showPermissionSuccessAlert","account","output","address","network","type","scopes","actionButtonText","actionCallback","link","window","open","showOperationSuccessAlert","transactionHash","showSignSuccessAlert","signature","showBroadcastSuccessAlert","emptyHandler","eventType","defaultEventCallbacks","PERMISSION_REQUEST_SENT","PERMISSION_REQUEST_SUCCESS","PERMISSION_REQUEST_ERROR","OPERATION_REQUEST_SENT","OPERATION_REQUEST_SUCCESS","OPERATION_REQUEST_ERROR","SIGN_REQUEST_SENT","SIGN_REQUEST_SUCCESS","SIGN_REQUEST_ERROR","BROADCAST_REQUEST_SENT","BROADCAST_REQUEST_SUCCESS","BROADCAST_REQUEST_ERROR","LOCAL_RATE_LIMIT_REACHED","NO_PERMISSIONS","ACTIVE_ACCOUNT_SET","ACTIVE_TRANSPORT_SET","P2P_CHANNEL_CONNECT_SUCCESS","P2P_LISTEN_FOR_CHANNEL_OPEN","INTERNAL_ERROR","UNKNOWN","BeaconEventHandler","constructor","eventsToOverride","callbackMap","overrideDefaults","overrideError","on","event","eventCallback","listeners","push","emit","length","forEach","listener","listenerError","Object","keys","untypedEvent","handler"],"sourceRoot":"","sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@airgap/beacon-sdk/dist/esm/events.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { openToast } from './alert/Toast';\nimport { openAlert } from './alert/Alert';\nimport { getQrData } from './utils/qr';\nimport { Logger } from './utils/Logger';\nimport { BeaconError } from './errors/BeaconError';\nimport { getAccountBlockExplorerLinkForNetwork, getTransactionBlockExplorerLinkForNetwork } from './utils/block-explorer';\nimport { UnknownBeaconError } from '.';\nconst logger = new Logger('BeaconEvents');\nexport var BeaconEvent;\n(function (BeaconEvent) {\n    BeaconEvent[\"PERMISSION_REQUEST_SENT\"] = \"PERMISSION_REQUEST_SENT\";\n    BeaconEvent[\"PERMISSION_REQUEST_SUCCESS\"] = \"PERMISSION_REQUEST_SUCCESS\";\n    BeaconEvent[\"PERMISSION_REQUEST_ERROR\"] = \"PERMISSION_REQUEST_ERROR\";\n    BeaconEvent[\"OPERATION_REQUEST_SENT\"] = \"OPERATION_REQUEST_SENT\";\n    BeaconEvent[\"OPERATION_REQUEST_SUCCESS\"] = \"OPERATION_REQUEST_SUCCESS\";\n    BeaconEvent[\"OPERATION_REQUEST_ERROR\"] = \"OPERATION_REQUEST_ERROR\";\n    BeaconEvent[\"SIGN_REQUEST_SENT\"] = \"SIGN_REQUEST_SENT\";\n    BeaconEvent[\"SIGN_REQUEST_SUCCESS\"] = \"SIGN_REQUEST_SUCCESS\";\n    BeaconEvent[\"SIGN_REQUEST_ERROR\"] = \"SIGN_REQUEST_ERROR\";\n    BeaconEvent[\"BROADCAST_REQUEST_SENT\"] = \"BROADCAST_REQUEST_SENT\";\n    BeaconEvent[\"BROADCAST_REQUEST_SUCCESS\"] = \"BROADCAST_REQUEST_SUCCESS\";\n    BeaconEvent[\"BROADCAST_REQUEST_ERROR\"] = \"BROADCAST_REQUEST_ERROR\";\n    BeaconEvent[\"LOCAL_RATE_LIMIT_REACHED\"] = \"LOCAL_RATE_LIMIT_REACHED\";\n    BeaconEvent[\"NO_PERMISSIONS\"] = \"NO_PERMISSIONS\";\n    BeaconEvent[\"ACTIVE_ACCOUNT_SET\"] = \"ACTIVE_ACCOUNT_SET\";\n    BeaconEvent[\"ACTIVE_TRANSPORT_SET\"] = \"ACTIVE_TRANSPORT_SET\";\n    BeaconEvent[\"P2P_CHANNEL_CONNECT_SUCCESS\"] = \"P2P_CHANNEL_CONNECT_SUCCESS\";\n    BeaconEvent[\"P2P_LISTEN_FOR_CHANNEL_OPEN\"] = \"P2P_LISTEN_FOR_CHANNEL_OPEN\";\n    BeaconEvent[\"INTERNAL_ERROR\"] = \"INTERNAL_ERROR\";\n    BeaconEvent[\"UNKNOWN\"] = \"UNKNOWN\";\n})(BeaconEvent || (BeaconEvent = {}));\nconst showSentToast = () => __awaiter(void 0, void 0, void 0, function* () {\n    openToast({ body: 'Request sent', timer: 3000 }).catch((toastError) => console.error(toastError));\n});\nconst showNoPermissionAlert = () => __awaiter(void 0, void 0, void 0, function* () {\n    yield openAlert({\n        title: 'No Permission',\n        body: 'Please allow the wallet to handle this type of request.'\n    });\n});\nconst showErrorAlert = (beaconError) => __awaiter(void 0, void 0, void 0, function* () {\n    const error = beaconError.errorType\n        ? BeaconError.getError(beaconError.errorType)\n        : new UnknownBeaconError();\n    yield openAlert({\n        title: error.title,\n        body: error.description\n    });\n});\nconst showRateLimitReached = () => __awaiter(void 0, void 0, void 0, function* () {\n    openToast({\n        body: 'Rate limit reached. Please slow down',\n        timer: 3000\n    }).catch((toastError) => console.error(toastError));\n});\nconst showBeaconConnectedAlert = () => __awaiter(void 0, void 0, void 0, function* () {\n    yield openAlert({\n        title: 'Success',\n        body: 'A wallet has been paired over the beacon network.',\n        confirmButtonText: 'Done',\n        timer: 1500\n    });\n});\nconst showInternalErrorAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const alertConfig = {\n        title: 'Internal Error',\n        confirmButtonText: 'Done',\n        body: `${data}`,\n        confirmCallback: () => undefined\n    };\n    yield openAlert(alertConfig);\n});\nconst showQrCode = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const dataString = JSON.stringify(data);\n    console.log(dataString);\n    const alertConfig = {\n        title: 'Pair with Wallet',\n        confirmButtonText: 'Done',\n        body: `${getQrData(dataString, 'svg')}<p>Connect wallet by scanning the QR code or clicking the link button <a href=\"https://docs.walletbeacon.io/supported-wallets.html\" target=\"_blank\">Learn&nbsp;more</a></p>`,\n        confirmCallback: () => undefined\n    };\n    yield openAlert(alertConfig);\n});\nconst showPermissionSuccessAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const { account, output } = data;\n    const alertConfig = {\n        title: 'Permission Granted',\n        body: `We received permissions for the address <strong>${output.address}</strong>\n    <br>\n    <br>\n    Network: <strong>${output.network.type}</strong>\n    <br>\n    Permissions: <strong>${output.scopes}</strong>`,\n        confirmButtonText: 'Done',\n        confirmCallback: () => undefined,\n        actionButtonText: 'Open Blockexplorer',\n        actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n            const link = yield getAccountBlockExplorerLinkForNetwork(account.network, output.address);\n            window.open(link, '_blank');\n        })\n    };\n    yield openAlert(alertConfig);\n});\nconst showOperationSuccessAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const { account, output } = data;\n    const alertConfig = {\n        title: 'Operation Broadcasted',\n        body: `The transaction has successfully been broadcasted to the network with the following hash. <strong>${output.transactionHash}</strong>`,\n        confirmButtonText: 'Done',\n        confirmCallback: () => undefined,\n        actionButtonText: 'Open Blockexplorer',\n        actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n            const link = yield getTransactionBlockExplorerLinkForNetwork(account.network, output.transactionHash);\n            window.open(link, '_blank');\n        })\n    };\n    yield openAlert(alertConfig);\n});\nconst showSignSuccessAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const output = data.output;\n    const alertConfig = {\n        title: 'Payload signed',\n        body: `The payload has successfully been signed.\n    <br>\n    Signature: <strong>${output.signature}</strong>`,\n        confirmButtonText: 'Done',\n        confirmCallback: () => undefined\n    };\n    yield openAlert(alertConfig);\n});\nconst showBroadcastSuccessAlert = (data) => __awaiter(void 0, void 0, void 0, function* () {\n    const { network, output } = data;\n    const alertConfig = {\n        title: 'Broadcasted',\n        body: `The transaction has successfully been broadcasted to the network with the following hash. <strong>${output.transactionHash}</strong>`,\n        confirmButtonText: 'Done',\n        confirmCallback: () => undefined,\n        actionButtonText: 'Open Blockexplorer',\n        actionCallback: () => __awaiter(void 0, void 0, void 0, function* () {\n            const link = yield getTransactionBlockExplorerLinkForNetwork(network, output.transactionHash);\n            window.open(link, '_blank');\n        })\n    };\n    yield openAlert(alertConfig);\n});\nconst emptyHandler = (eventType) => (data) => __awaiter(void 0, void 0, void 0, function* () {\n    logger.log('emptyHandler', eventType, data);\n});\nexport const defaultEventCallbacks = {\n    [BeaconEvent.PERMISSION_REQUEST_SENT]: showSentToast,\n    [BeaconEvent.PERMISSION_REQUEST_SUCCESS]: showPermissionSuccessAlert,\n    [BeaconEvent.PERMISSION_REQUEST_ERROR]: showErrorAlert,\n    [BeaconEvent.OPERATION_REQUEST_SENT]: showSentToast,\n    [BeaconEvent.OPERATION_REQUEST_SUCCESS]: showOperationSuccessAlert,\n    [BeaconEvent.OPERATION_REQUEST_ERROR]: showErrorAlert,\n    [BeaconEvent.SIGN_REQUEST_SENT]: showSentToast,\n    [BeaconEvent.SIGN_REQUEST_SUCCESS]: showSignSuccessAlert,\n    [BeaconEvent.SIGN_REQUEST_ERROR]: showErrorAlert,\n    [BeaconEvent.BROADCAST_REQUEST_SENT]: showSentToast,\n    [BeaconEvent.BROADCAST_REQUEST_SUCCESS]: showBroadcastSuccessAlert,\n    [BeaconEvent.BROADCAST_REQUEST_ERROR]: showErrorAlert,\n    [BeaconEvent.LOCAL_RATE_LIMIT_REACHED]: showRateLimitReached,\n    [BeaconEvent.NO_PERMISSIONS]: showNoPermissionAlert,\n    [BeaconEvent.ACTIVE_ACCOUNT_SET]: emptyHandler(BeaconEvent.ACTIVE_ACCOUNT_SET),\n    [BeaconEvent.ACTIVE_TRANSPORT_SET]: emptyHandler(BeaconEvent.ACTIVE_TRANSPORT_SET),\n    [BeaconEvent.P2P_CHANNEL_CONNECT_SUCCESS]: showBeaconConnectedAlert,\n    [BeaconEvent.P2P_LISTEN_FOR_CHANNEL_OPEN]: showQrCode,\n    [BeaconEvent.INTERNAL_ERROR]: showInternalErrorAlert,\n    [BeaconEvent.UNKNOWN]: emptyHandler(BeaconEvent.UNKNOWN)\n};\nexport class BeaconEventHandler {\n    constructor(eventsToOverride = {}) {\n        this.callbackMap = {\n            [BeaconEvent.PERMISSION_REQUEST_SENT]: [defaultEventCallbacks.PERMISSION_REQUEST_SENT],\n            [BeaconEvent.PERMISSION_REQUEST_SUCCESS]: [defaultEventCallbacks.PERMISSION_REQUEST_SUCCESS],\n            [BeaconEvent.PERMISSION_REQUEST_ERROR]: [defaultEventCallbacks.PERMISSION_REQUEST_ERROR],\n            [BeaconEvent.OPERATION_REQUEST_SENT]: [defaultEventCallbacks.OPERATION_REQUEST_SENT],\n            [BeaconEvent.OPERATION_REQUEST_SUCCESS]: [defaultEventCallbacks.OPERATION_REQUEST_SUCCESS],\n            [BeaconEvent.OPERATION_REQUEST_ERROR]: [defaultEventCallbacks.OPERATION_REQUEST_ERROR],\n            [BeaconEvent.SIGN_REQUEST_SENT]: [defaultEventCallbacks.SIGN_REQUEST_SENT],\n            [BeaconEvent.SIGN_REQUEST_SUCCESS]: [defaultEventCallbacks.SIGN_REQUEST_SUCCESS],\n            [BeaconEvent.SIGN_REQUEST_ERROR]: [defaultEventCallbacks.SIGN_REQUEST_ERROR],\n            [BeaconEvent.BROADCAST_REQUEST_SENT]: [defaultEventCallbacks.BROADCAST_REQUEST_SENT],\n            [BeaconEvent.BROADCAST_REQUEST_SUCCESS]: [defaultEventCallbacks.BROADCAST_REQUEST_SUCCESS],\n            [BeaconEvent.BROADCAST_REQUEST_ERROR]: [defaultEventCallbacks.BROADCAST_REQUEST_ERROR],\n            [BeaconEvent.LOCAL_RATE_LIMIT_REACHED]: [defaultEventCallbacks.LOCAL_RATE_LIMIT_REACHED],\n            [BeaconEvent.NO_PERMISSIONS]: [defaultEventCallbacks.NO_PERMISSIONS],\n            [BeaconEvent.ACTIVE_ACCOUNT_SET]: [defaultEventCallbacks.ACTIVE_ACCOUNT_SET],\n            [BeaconEvent.ACTIVE_TRANSPORT_SET]: [defaultEventCallbacks.ACTIVE_TRANSPORT_SET],\n            [BeaconEvent.P2P_CHANNEL_CONNECT_SUCCESS]: [defaultEventCallbacks.P2P_CHANNEL_CONNECT_SUCCESS],\n            [BeaconEvent.P2P_LISTEN_FOR_CHANNEL_OPEN]: [defaultEventCallbacks.P2P_LISTEN_FOR_CHANNEL_OPEN],\n            [BeaconEvent.INTERNAL_ERROR]: [defaultEventCallbacks.INTERNAL_ERROR],\n            [BeaconEvent.UNKNOWN]: [defaultEventCallbacks.UNKNOWN]\n        };\n        this.overrideDefaults(eventsToOverride).catch((overrideError) => {\n            logger.error('constructor', overrideError);\n        });\n    }\n    on(event, eventCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const listeners = this.callbackMap[event] || [];\n            listeners.push(eventCallback);\n            this.callbackMap[event] = listeners;\n        });\n    }\n    emit(event, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const listeners = this.callbackMap[event];\n            if (listeners && listeners.length > 0) {\n                listeners.forEach((listener) => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        yield listener(data);\n                    }\n                    catch (listenerError) {\n                        logger.error(`error handling event ${event}`, listenerError);\n                    }\n                }));\n            }\n        });\n    }\n    overrideDefaults(eventsToOverride) {\n        return __awaiter(this, void 0, void 0, function* () {\n            Object.keys(eventsToOverride).forEach((untypedEvent) => {\n                const eventType = untypedEvent;\n                const event = eventsToOverride[eventType];\n                if (event) {\n                    this.callbackMap[eventType] = [event.handler];\n                }\n            });\n        });\n    }\n}\n//# sourceMappingURL=events.js.map"]},"metadata":{},"sourceType":"module"}