{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function retry(count) {\n  if (count === void 0) {\n    count = -1;\n  }\n\n  return function (source) {\n    return source.lift(new RetryOperator(count, source));\n  };\n}\n\nvar RetryOperator = /*@__PURE__*/function () {\n  function RetryOperator(count, source) {\n    this.count = count;\n    this.source = source;\n  }\n\n  RetryOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  };\n\n  return RetryOperator;\n}();\n\nvar RetrySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RetrySubscriber, _super);\n\n  function RetrySubscriber(destination, count, source) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.count = count;\n    _this.source = source;\n    return _this;\n  }\n\n  RetrySubscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      var _a = this,\n          source = _a.source,\n          count = _a.count;\n\n      if (count === 0) {\n        return _super.prototype.error.call(this, err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  };\n\n  return RetrySubscriber;\n}(Subscriber);","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACzB,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAClBA,SAAK,GAAG,CAAC,CAAT;AACH;;AACD,SAAO,UAAUC,MAAV,EAAkB;AAAE,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,aAAJ,CAAkBH,KAAlB,EAAyBC,MAAzB,CAAZ,CAAP;AAAuD,GAAlF;AACH;;AACD,IAAIE,aAAa,GAAG,aAAe,YAAY;AAC3C,WAASA,aAAT,CAAuBH,KAAvB,EAA8BC,MAA9B,EAAsC;AAClC,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACDE,eAAa,CAACC,SAAd,CAAwBC,IAAxB,GAA+B,UAAUC,UAAV,EAAsBL,MAAtB,EAA8B;AACzD,WAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,eAAJ,CAAoBF,UAApB,EAAgC,KAAKN,KAArC,EAA4C,KAAKC,MAAjD,CAAjB,CAAP;AACH,GAFD;;AAGA,SAAOE,aAAP;AACH,CATkC,EAAnC;;AAUA,IAAIK,eAAe,GAAG,aAAe,UAAUC,MAAV,EAAkB;AACnDZ,SAAO,CAACa,SAAR,CAAkBF,eAAlB,EAAmCC,MAAnC;;AACA,WAASD,eAAT,CAAyBG,WAAzB,EAAsCX,KAAtC,EAA6CC,MAA7C,EAAqD;AACjD,QAAIW,KAAK,GAAGH,MAAM,CAACJ,IAAP,CAAY,IAAZ,EAAkBM,WAAlB,KAAkC,IAA9C;;AACAC,SAAK,CAACZ,KAAN,GAAcA,KAAd;AACAY,SAAK,CAACX,MAAN,GAAeA,MAAf;AACA,WAAOW,KAAP;AACH;;AACDJ,iBAAe,CAACJ,SAAhB,CAA0BS,KAA1B,GAAkC,UAAUC,GAAV,EAAe;AAC7C,QAAI,CAAC,KAAKC,SAAV,EAAqB;AACjB,UAAIC,EAAE,GAAG,IAAT;AAAA,UAAef,MAAM,GAAGe,EAAE,CAACf,MAA3B;AAAA,UAAmCD,KAAK,GAAGgB,EAAE,CAAChB,KAA9C;;AACA,UAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,eAAOS,MAAM,CAACL,SAAP,CAAiBS,KAAjB,CAAuBR,IAAvB,CAA4B,IAA5B,EAAkCS,GAAlC,CAAP;AACH,OAFD,MAGK,IAAId,KAAK,GAAG,CAAC,CAAb,EAAgB;AACjB,aAAKA,KAAL,GAAaA,KAAK,GAAG,CAArB;AACH;;AACDC,YAAM,CAACM,SAAP,CAAiB,KAAKU,sBAAL,EAAjB;AACH;AACJ,GAXD;;AAYA,SAAOT,eAAP;AACH,CArBoC,CAqBnCV,UArBmC,CAArC","names":["tslib_1","Subscriber","retry","count","source","lift","RetryOperator","prototype","call","subscriber","subscribe","RetrySubscriber","_super","__extends","destination","_this","error","err","isStopped","_a","_unsubscribeAndRecycle"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/retry.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function retry(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\n}\nvar RetryOperator = /*@__PURE__*/ (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\nvar RetrySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber));\n//# sourceMappingURL=retry.js.map\n"]},"metadata":{},"sourceType":"module"}