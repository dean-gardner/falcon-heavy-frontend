{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { getDividerStyles, getStackStyles, selector } from \"./stack.utils\";\nexport var StackDivider = props => {\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-stack__divider\"\n  }, props, {\n    __css: _extends({}, props[\"__css\"], {\n      borderWidth: 0,\n      alignSelf: \"stretch\",\n      borderColor: \"inherit\",\n      width: \"auto\",\n      height: \"auto\"\n    })\n  }));\n};\nexport var StackItem = props => /*#__PURE__*/React.createElement(chakra.div, _extends({\n  className: \"chakra-stack__item\"\n}, props, {\n  __css: _extends({\n    display: \"inline-block\",\n    flex: \"0 0 auto\",\n    minWidth: 0\n  }, props[\"__css\"])\n}));\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/components/stack\n *\n */\n\nexport var Stack = /*#__PURE__*/forwardRef(function Stack(props, ref) {\n  var {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"isInline\", \"direction\", \"align\", \"justify\", \"spacing\", \"wrap\", \"children\", \"divider\", \"className\", \"shouldWrapChildren\"]);\n\n  var direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  var styles = React.useMemo(() => getStackStyles({\n    direction,\n    spacing\n  }), [direction, spacing]);\n  var dividerStyle = React.useMemo(() => getDividerStyles({\n    spacing,\n    direction\n  }), [spacing, direction]);\n  var hasDivider = !!divider;\n  var shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  var validChildren = getValidChildren(children);\n  var clones = shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n    var isLast = index + 1 === validChildren.length;\n    var wrappedChild = /*#__PURE__*/React.createElement(StackItem, {\n      key: index\n    }, child);\n\n    var _child = shouldWrapChildren ? wrappedChild : child;\n\n    if (!hasDivider) return _child;\n    var clonedDivider = /*#__PURE__*/React.cloneElement(divider, {\n      __css: dividerStyle\n    });\n\n    var _divider = isLast ? null : clonedDivider;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index\n    }, _child, _divider);\n  });\n\n  var _className = cx(\"chakra-stack\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    display: \"flex\",\n    alignItems: align,\n    justifyContent: justify,\n    flexDirection: styles.flexDirection,\n    flexWrap: wrap,\n    className: _className,\n    __css: hasDivider ? {} : {\n      [selector]: styles[selector]\n    }\n  }, rest), clones);\n});\n\nif (__DEV__) {\n  Stack.displayName = \"Stack\";\n}\n/**\n * A view that arranges its children in a horizontal line.\n */\n\n\nexport var HStack = /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(Stack, _extends({\n    align: \"center\"\n  }, props, {\n    direction: \"row\",\n    ref: ref\n  }));\n});\n\nif (__DEV__) {\n  HStack.displayName = \"HStack\";\n}\n/**\n * A view that arranges its children in a vertical line.\n */\n\n\nexport var VStack = /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(Stack, _extends({\n    align: \"center\"\n  }, props, {\n    direction: \"column\",\n    ref: ref\n  }));\n});\n\nif (__DEV__) {\n  VStack.displayName = \"VStack\";\n}","map":{"version":3,"mappings":"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","names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","chakra","forwardRef","cx","getValidChildren","__DEV__","React","getDividerStyles","getStackStyles","selector","StackDivider","props","createElement","div","className","__css","borderWidth","alignSelf","borderColor","width","height","StackItem","display","flex","minWidth","Stack","ref","isInline","direction","directionProp","align","justify","spacing","wrap","children","divider","shouldWrapChildren","rest","styles","useMemo","dividerStyle","hasDivider","shouldUseChildren","validChildren","clones","map","child","index","isLast","wrappedChild","_child","clonedDivider","cloneElement","_divider","Fragment","_className","alignItems","justifyContent","flexDirection","flexWrap","displayName","HStack","VStack"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/layout/dist/esm/stack.js"],"sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { getDividerStyles, getStackStyles, selector } from \"./stack.utils\";\nexport var StackDivider = props => {\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-stack__divider\"\n  }, props, {\n    __css: _extends({}, props[\"__css\"], {\n      borderWidth: 0,\n      alignSelf: \"stretch\",\n      borderColor: \"inherit\",\n      width: \"auto\",\n      height: \"auto\"\n    })\n  }));\n};\nexport var StackItem = props => /*#__PURE__*/React.createElement(chakra.div, _extends({\n  className: \"chakra-stack__item\"\n}, props, {\n  __css: _extends({\n    display: \"inline-block\",\n    flex: \"0 0 auto\",\n    minWidth: 0\n  }, props[\"__css\"])\n}));\n\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/components/stack\n *\n */\nexport var Stack = /*#__PURE__*/forwardRef(function Stack(props, ref) {\n  var {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"isInline\", \"direction\", \"align\", \"justify\", \"spacing\", \"wrap\", \"children\", \"divider\", \"className\", \"shouldWrapChildren\"]);\n\n  var direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  var styles = React.useMemo(() => getStackStyles({\n    direction,\n    spacing\n  }), [direction, spacing]);\n  var dividerStyle = React.useMemo(() => getDividerStyles({\n    spacing,\n    direction\n  }), [spacing, direction]);\n  var hasDivider = !!divider;\n  var shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  var validChildren = getValidChildren(children);\n  var clones = shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n    var isLast = index + 1 === validChildren.length;\n    var wrappedChild = /*#__PURE__*/React.createElement(StackItem, {\n      key: index\n    }, child);\n\n    var _child = shouldWrapChildren ? wrappedChild : child;\n\n    if (!hasDivider) return _child;\n    var clonedDivider = /*#__PURE__*/React.cloneElement(divider, {\n      __css: dividerStyle\n    });\n\n    var _divider = isLast ? null : clonedDivider;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index\n    }, _child, _divider);\n  });\n\n  var _className = cx(\"chakra-stack\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    display: \"flex\",\n    alignItems: align,\n    justifyContent: justify,\n    flexDirection: styles.flexDirection,\n    flexWrap: wrap,\n    className: _className,\n    __css: hasDivider ? {} : {\n      [selector]: styles[selector]\n    }\n  }, rest), clones);\n});\n\nif (__DEV__) {\n  Stack.displayName = \"Stack\";\n}\n/**\n * A view that arranges its children in a horizontal line.\n */\n\n\nexport var HStack = /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(Stack, _extends({\n    align: \"center\"\n  }, props, {\n    direction: \"row\",\n    ref: ref\n  }));\n});\n\nif (__DEV__) {\n  HStack.displayName = \"HStack\";\n}\n/**\n * A view that arranges its children in a vertical line.\n */\n\n\nexport var VStack = /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(Stack, _extends({\n    align: \"center\"\n  }, props, {\n    direction: \"column\",\n    ref: ref\n  }));\n});\n\nif (__DEV__) {\n  VStack.displayName = \"VStack\";\n}\n//# sourceMappingURL=stack.js.map"]},"metadata":{},"sourceType":"module"}