{"ast":null,"code":"/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function range(start, count, scheduler) {\n  if (start === void 0) {\n    start = 0;\n  }\n\n  return new Observable(function (subscriber) {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    var index = 0;\n    var current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index: index,\n        count: count,\n        start: start,\n        subscriber: subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n\n        subscriber.next(current++);\n\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\nexport function dispatch(state) {\n  var start = state.start,\n      index = state.index,\n      count = state.count,\n      subscriber = state.subscriber;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n  this.schedule(state);\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwC;AAC3C,MAAIF,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAClBA,SAAK,GAAG,CAAR;AACH;;AACD,SAAO,IAAIF,UAAJ,CAAe,UAAUK,UAAV,EAAsB;AACxC,QAAIF,KAAK,KAAKG,SAAd,EAAyB;AACrBH,WAAK,GAAGD,KAAR;AACAA,WAAK,GAAG,CAAR;AACH;;AACD,QAAIK,KAAK,GAAG,CAAZ;AACA,QAAIC,OAAO,GAAGN,KAAd;;AACA,QAAIE,SAAJ,EAAe;AACX,aAAOA,SAAS,CAACK,QAAV,CAAmBC,QAAnB,EAA6B,CAA7B,EAAgC;AACnCH,aAAK,EAAEA,KAD4B;AACrBJ,aAAK,EAAEA,KADc;AACPD,aAAK,EAAEA,KADA;AACOG,kBAAU,EAAEA;AADnB,OAAhC,CAAP;AAGH,KAJD,MAKK;AACD,SAAG;AACC,YAAIE,KAAK,MAAMJ,KAAf,EAAsB;AAClBE,oBAAU,CAACM,QAAX;AACA;AACH;;AACDN,kBAAU,CAACO,IAAX,CAAgBJ,OAAO,EAAvB;;AACA,YAAIH,UAAU,CAACQ,MAAf,EAAuB;AACnB;AACH;AACJ,OATD,QASS,IATT;AAUH;;AACD,WAAOP,SAAP;AACH,GAzBM,CAAP;AA0BH;AACD,OAAO,SAASI,QAAT,CAAkBI,KAAlB,EAAyB;AAC5B,MAAIZ,KAAK,GAAGY,KAAK,CAACZ,KAAlB;AAAA,MAAyBK,KAAK,GAAGO,KAAK,CAACP,KAAvC;AAAA,MAA8CJ,KAAK,GAAGW,KAAK,CAACX,KAA5D;AAAA,MAAmEE,UAAU,GAAGS,KAAK,CAACT,UAAtF;;AACA,MAAIE,KAAK,IAAIJ,KAAb,EAAoB;AAChBE,cAAU,CAACM,QAAX;AACA;AACH;;AACDN,YAAU,CAACO,IAAX,CAAgBV,KAAhB;;AACA,MAAIG,UAAU,CAACQ,MAAf,EAAuB;AACnB;AACH;;AACDC,OAAK,CAACP,KAAN,GAAcA,KAAK,GAAG,CAAtB;AACAO,OAAK,CAACZ,KAAN,GAAcA,KAAK,GAAG,CAAtB;AACA,OAAKO,QAAL,CAAcK,KAAd;AACH","names":["Observable","range","start","count","scheduler","subscriber","undefined","index","current","schedule","dispatch","complete","next","closed","state"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/range.js"],"sourcesContent":["/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function range(start, count, scheduler) {\n    if (start === void 0) {\n        start = 0;\n    }\n    return new Observable(function (subscriber) {\n        if (count === undefined) {\n            count = start;\n            start = 0;\n        }\n        var index = 0;\n        var current = start;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(current++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\nexport function dispatch(state) {\n    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n//# sourceMappingURL=range.js.map\n"]},"metadata":{},"sourceType":"module"}