{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n  if (resultSelector) {\n    return function (source) {\n      return source.pipe(exhaustMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n\n  return function (source) {\n    return source.lift(new ExhaustMapOperator(project));\n  };\n}\n\nvar ExhaustMapOperator = /*@__PURE__*/function () {\n  function ExhaustMapOperator(project) {\n    this.project = project;\n  }\n\n  ExhaustMapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  };\n\n  return ExhaustMapOperator;\n}();\n\nvar ExhaustMapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ExhaustMapSubscriber, _super);\n\n  function ExhaustMapSubscriber(destination, project) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.project = project;\n    _this.hasSubscription = false;\n    _this.hasCompleted = false;\n    _this.index = 0;\n    return _this;\n  }\n\n  ExhaustMapSubscriber.prototype._next = function (value) {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  };\n\n  ExhaustMapSubscriber.prototype.tryNext = function (value) {\n    var result;\n    var index = this.index++;\n\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.hasSubscription = true;\n\n    this._innerSub(result);\n  };\n\n  ExhaustMapSubscriber.prototype._innerSub = function (result) {\n    var innerSubscriber = new SimpleInnerSubscriber(this);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    var innerSubscription = innerSubscribe(result, innerSubscriber);\n\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  };\n\n  ExhaustMapSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n\n    this.unsubscribe();\n  };\n\n  ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {\n    this.destination.next(innerValue);\n  };\n\n  ExhaustMapSubscriber.prototype.notifyError = function (err) {\n    this.destination.error(err);\n  };\n\n  ExhaustMapSubscriber.prototype.notifyComplete = function () {\n    this.hasSubscription = false;\n\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  };\n\n  return ExhaustMapSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":"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","names":["tslib_1","map","from","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","exhaustMap","project","resultSelector","source","pipe","a","i","b","ii","lift","ExhaustMapOperator","prototype","call","subscriber","subscribe","ExhaustMapSubscriber","_super","__extends","destination","_this","hasSubscription","hasCompleted","index","_next","value","tryNext","result","err","error","_innerSub","innerSubscriber","add","innerSubscription","_complete","complete","unsubscribe","notifyNext","innerValue","next","notifyError","notifyComplete"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/exhaustMap.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return function (source) { return source.pipe(exhaustMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) {\n        return source.lift(new ExhaustMapOperator(project));\n    };\n}\nvar ExhaustMapOperator = /*@__PURE__*/ (function () {\n    function ExhaustMapOperator(project) {\n        this.project = project;\n    }\n    ExhaustMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    };\n    return ExhaustMapOperator;\n}());\nvar ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExhaustMapSubscriber, _super);\n    function ExhaustMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    ExhaustMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    ExhaustMapSubscriber.prototype.tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.hasSubscription = true;\n        this._innerSub(result);\n    };\n    ExhaustMapSubscriber.prototype._innerSub = function (result) {\n        var innerSubscriber = new SimpleInnerSubscriber(this);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        var innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    };\n    ExhaustMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {\n        this.destination.next(innerValue);\n    };\n    ExhaustMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    ExhaustMapSubscriber.prototype.notifyComplete = function () {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return ExhaustMapSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n"]},"metadata":{},"sourceType":"module"}