{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project, concurrent, scheduler) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n  return function (source) {\n    return source.lift(new ExpandOperator(project, concurrent, scheduler));\n  };\n}\n\nvar ExpandOperator = /*@__PURE__*/function () {\n  function ExpandOperator(project, concurrent, scheduler) {\n    this.project = project;\n    this.concurrent = concurrent;\n    this.scheduler = scheduler;\n  }\n\n  ExpandOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  };\n\n  return ExpandOperator;\n}();\n\nexport { ExpandOperator };\n\nvar ExpandSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ExpandSubscriber, _super);\n\n  function ExpandSubscriber(destination, project, concurrent, scheduler) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.project = project;\n    _this.concurrent = concurrent;\n    _this.scheduler = scheduler;\n    _this.index = 0;\n    _this.active = 0;\n    _this.hasCompleted = false;\n\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      _this.buffer = [];\n    }\n\n    return _this;\n  }\n\n  ExpandSubscriber.dispatch = function (arg) {\n    var subscriber = arg.subscriber,\n        result = arg.result,\n        value = arg.value,\n        index = arg.index;\n    subscriber.subscribeToProjection(result, value, index);\n  };\n\n  ExpandSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n\n      return;\n    }\n\n    var index = this.index++;\n\n    if (this.active < this.concurrent) {\n      destination.next(value);\n\n      try {\n        var project = this.project;\n        var result = project(value, index);\n\n        if (!this.scheduler) {\n          this.subscribeToProjection(result, value, index);\n        } else {\n          var state = {\n            subscriber: this,\n            result: result,\n            value: value,\n            index: index\n          };\n          var destination_1 = this.destination;\n          destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n        }\n      } catch (e) {\n        destination.error(e);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  };\n\n  ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n    this.active++;\n    var destination = this.destination;\n    destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n  };\n\n  ExpandSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n\n    this.unsubscribe();\n  };\n\n  ExpandSubscriber.prototype.notifyNext = function (innerValue) {\n    this._next(innerValue);\n  };\n\n  ExpandSubscriber.prototype.notifyComplete = function () {\n    var buffer = this.buffer;\n    this.active--;\n\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  };\n\n  return ExpandSubscriber;\n}(SimpleOuterSubscriber);\n\nexport { ExpandSubscriber };","map":{"version":3,"mappings":"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","names":["tslib_1","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","expand","project","concurrent","scheduler","Number","POSITIVE_INFINITY","source","lift","ExpandOperator","prototype","call","subscriber","subscribe","ExpandSubscriber","_super","__extends","destination","_this","index","active","hasCompleted","buffer","dispatch","arg","result","value","subscribeToProjection","_next","closed","_complete","next","state","destination_1","add","schedule","e","error","push","complete","unsubscribe","notifyNext","innerValue","notifyComplete","length","shift"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/expand.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };\n}\nvar ExpandOperator = /*@__PURE__*/ (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexport { ExpandOperator };\nvar ExpandSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.scheduler = scheduler;\n        _this.index = 0;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            _this.buffer = [];\n        }\n        return _this;\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            try {\n                var project = this.project;\n                var result = project(value, index);\n                if (!this.scheduler) {\n                    this.subscribeToProjection(result, value, index);\n                }\n                else {\n                    var state = { subscriber: this, result: result, value: value, index: index };\n                    var destination_1 = this.destination;\n                    destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n                }\n            }\n            catch (e) {\n                destination.error(e);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        var destination = this.destination;\n        destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    ExpandSubscriber.prototype.notifyNext = function (innerValue) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function () {\n        var buffer = this.buffer;\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(SimpleOuterSubscriber));\nexport { ExpandSubscriber };\n//# sourceMappingURL=expand.js.map\n"]},"metadata":{},"sourceType":"module"}