{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function repeatWhen(notifier) {\n  return function (source) {\n    return source.lift(new RepeatWhenOperator(notifier));\n  };\n}\n\nvar RepeatWhenOperator = /*@__PURE__*/function () {\n  function RepeatWhenOperator(notifier) {\n    this.notifier = notifier;\n  }\n\n  RepeatWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  };\n\n  return RepeatWhenOperator;\n}();\n\nvar RepeatWhenSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RepeatWhenSubscriber, _super);\n\n  function RepeatWhenSubscriber(destination, notifier, source) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.notifier = notifier;\n    _this.source = source;\n    _this.sourceIsBeingSubscribedTo = true;\n    return _this;\n  }\n\n  RepeatWhenSubscriber.prototype.notifyNext = function () {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  };\n\n  RepeatWhenSubscriber.prototype.notifyComplete = function () {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return _super.prototype.complete.call(this);\n    }\n  };\n\n  RepeatWhenSubscriber.prototype.complete = function () {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return _super.prototype.complete.call(this);\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.notifications.next(undefined);\n    }\n  };\n\n  RepeatWhenSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n        notifications = _a.notifications,\n        retriesSubscription = _a.retriesSubscription;\n\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = undefined;\n    }\n\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = undefined;\n    }\n\n    this.retries = undefined;\n  };\n\n  RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n    var _unsubscribe = this._unsubscribe;\n    this._unsubscribe = null;\n\n    _super.prototype._unsubscribeAndRecycle.call(this);\n\n    this._unsubscribe = _unsubscribe;\n    return this;\n  };\n\n  RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n    this.notifications = new Subject();\n    var retries;\n\n    try {\n      var notifier = this.notifier;\n      retries = notifier(this.notifications);\n    } catch (e) {\n      return _super.prototype.complete.call(this);\n    }\n\n    this.retries = retries;\n    this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n  };\n\n  return RepeatWhenSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":"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","names":["tslib_1","Subject","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","repeatWhen","notifier","source","lift","RepeatWhenOperator","prototype","call","subscriber","subscribe","RepeatWhenSubscriber","_super","__extends","destination","_this","sourceIsBeingSubscribedTo","notifyNext","notifyComplete","complete","isStopped","retries","subscribeToRetries","retriesSubscription","closed","_unsubscribeAndRecycle","notifications","next","undefined","_unsubscribe","_a","unsubscribe","e"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/repeatWhen.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function repeatWhen(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nvar RepeatWhenOperator = /*@__PURE__*/ (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\nvar RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function () {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next(undefined);\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this._unsubscribe = _unsubscribe;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject();\n        var retries;\n        try {\n            var notifier = this.notifier;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n    };\n    return RepeatWhenSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map\n"]},"metadata":{},"sourceType":"module"}