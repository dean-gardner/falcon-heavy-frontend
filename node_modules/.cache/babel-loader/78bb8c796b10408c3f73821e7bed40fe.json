{"ast":null,"code":"import { useTimeout, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { isFunction, __DEV__ } from \"@chakra-ui/utils\";\nimport ReachAlert from \"@reach/alert\";\nimport { motion, useIsPresent } from \"framer-motion\";\nimport * as React from \"react\";\nimport { getToastStyle } from \"./toast.utils\";\n/**\n * @todo After Gerrit refactors this implementation,\n * allow users to change the toast transition direction from\n * a `ToastProvider` component.\n *\n * Here's an API example:\n *\n * ```jsx\n * <ToastProvider\n *   motion={customVariants}\n *   component={CustomToastComponent}\n *   autoCloseTimeout={3000}\n *   toastSpacing={32} // this will control the `margin` value applied\n * >\n * </ToastProvider>\n * ```\n */\n\nvar toastMotionVariants = {\n  initial: props => {\n    var {\n      position\n    } = props;\n    var dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\";\n    var factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1;\n    if (position === \"bottom\") factor = 1;\n    return {\n      opacity: 0,\n      [dir]: factor * 24\n    };\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1]\n    }\n  }\n};\nexport var Toast = props => {\n  var {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5000\n  } = props;\n  var [delay, setDelay] = React.useState(duration);\n  var isPresent = useIsPresent();\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete == null ? void 0 : onCloseComplete();\n    }\n  }, [isPresent]);\n  useUpdateEffect(() => {\n    setDelay(duration);\n  }, [duration]);\n\n  var onMouseEnter = () => setDelay(null);\n\n  var onMouseLeave = () => setDelay(duration);\n\n  var close = () => {\n    if (isPresent) onRequestRemove();\n  };\n\n  React.useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove();\n    }\n  }, [isPresent, requestClose, onRequestRemove]);\n  useTimeout(close, delay);\n  var style = React.useMemo(() => getToastStyle(position), [position]);\n  return /*#__PURE__*/React.createElement(motion.li, {\n    layout: true,\n    className: \"chakra-toast\",\n    variants: toastMotionVariants,\n    initial: \"initial\",\n    animate: \"animate\",\n    exit: \"exit\",\n    onHoverStart: onMouseEnter,\n    onHoverEnd: onMouseLeave,\n    custom: {\n      position\n    },\n    style: style\n  }, /*#__PURE__*/React.createElement(ReachAlert, {\n    className: \"chakra-toast__inner\",\n    style: {\n      pointerEvents: \"auto\",\n      maxWidth: 560,\n      minWidth: 300,\n      margin: \"0.5rem\"\n    }\n  }, isFunction(message) ? message({\n    id,\n    onClose: close\n  }) : message));\n};\n\nif (__DEV__) {\n  Toast.displayName = \"Toast\";\n}","map":{"version":3,"mappings":"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","names":["useTimeout","useUpdateEffect","isFunction","__DEV__","ReachAlert","motion","useIsPresent","React","getToastStyle","toastMotionVariants","initial","props","position","dir","includes","factor","opacity","animate","y","x","scale","transition","duration","ease","exit","Toast","id","message","onCloseComplete","onRequestRemove","requestClose","delay","setDelay","useState","isPresent","onMouseEnter","onMouseLeave","close","useEffect","style","useMemo","createElement","li","layout","className","variants","onHoverStart","onHoverEnd","custom","pointerEvents","maxWidth","minWidth","margin","onClose","displayName"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/toast/dist/esm/toast.js"],"sourcesContent":["import { useTimeout, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { isFunction, __DEV__ } from \"@chakra-ui/utils\";\nimport ReachAlert from \"@reach/alert\";\nimport { motion, useIsPresent } from \"framer-motion\";\nimport * as React from \"react\";\nimport { getToastStyle } from \"./toast.utils\";\n/**\n * @todo After Gerrit refactors this implementation,\n * allow users to change the toast transition direction from\n * a `ToastProvider` component.\n *\n * Here's an API example:\n *\n * ```jsx\n * <ToastProvider\n *   motion={customVariants}\n *   component={CustomToastComponent}\n *   autoCloseTimeout={3000}\n *   toastSpacing={32} // this will control the `margin` value applied\n * >\n * </ToastProvider>\n * ```\n */\n\nvar toastMotionVariants = {\n  initial: props => {\n    var {\n      position\n    } = props;\n    var dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\";\n    var factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1;\n    if (position === \"bottom\") factor = 1;\n    return {\n      opacity: 0,\n      [dir]: factor * 24\n    };\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1]\n    }\n  }\n};\nexport var Toast = props => {\n  var {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5000\n  } = props;\n  var [delay, setDelay] = React.useState(duration);\n  var isPresent = useIsPresent();\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete == null ? void 0 : onCloseComplete();\n    }\n  }, [isPresent]);\n  useUpdateEffect(() => {\n    setDelay(duration);\n  }, [duration]);\n\n  var onMouseEnter = () => setDelay(null);\n\n  var onMouseLeave = () => setDelay(duration);\n\n  var close = () => {\n    if (isPresent) onRequestRemove();\n  };\n\n  React.useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove();\n    }\n  }, [isPresent, requestClose, onRequestRemove]);\n  useTimeout(close, delay);\n  var style = React.useMemo(() => getToastStyle(position), [position]);\n  return /*#__PURE__*/React.createElement(motion.li, {\n    layout: true,\n    className: \"chakra-toast\",\n    variants: toastMotionVariants,\n    initial: \"initial\",\n    animate: \"animate\",\n    exit: \"exit\",\n    onHoverStart: onMouseEnter,\n    onHoverEnd: onMouseLeave,\n    custom: {\n      position\n    },\n    style: style\n  }, /*#__PURE__*/React.createElement(ReachAlert, {\n    className: \"chakra-toast__inner\",\n    style: {\n      pointerEvents: \"auto\",\n      maxWidth: 560,\n      minWidth: 300,\n      margin: \"0.5rem\"\n    }\n  }, isFunction(message) ? message({\n    id,\n    onClose: close\n  }) : message));\n};\n\nif (__DEV__) {\n  Toast.displayName = \"Toast\";\n}\n//# sourceMappingURL=toast.js.map"]},"metadata":{},"sourceType":"module"}