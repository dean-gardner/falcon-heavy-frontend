{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function mergeScan(accumulator, seed, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  return function (source) {\n    return source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n  };\n}\n\nvar MergeScanOperator = /*@__PURE__*/function () {\n  function MergeScanOperator(accumulator, seed, concurrent) {\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.concurrent = concurrent;\n  }\n\n  MergeScanOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n  };\n\n  return MergeScanOperator;\n}();\n\nexport { MergeScanOperator };\n\nvar MergeScanSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(MergeScanSubscriber, _super);\n\n  function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.accumulator = accumulator;\n    _this.acc = acc;\n    _this.concurrent = concurrent;\n    _this.hasValue = false;\n    _this.hasCompleted = false;\n    _this.buffer = [];\n    _this.active = 0;\n    _this.index = 0;\n    return _this;\n  }\n\n  MergeScanSubscriber.prototype._next = function (value) {\n    if (this.active < this.concurrent) {\n      var index = this.index++;\n      var destination = this.destination;\n      var ish = void 0;\n\n      try {\n        var accumulator = this.accumulator;\n        ish = accumulator(this.acc, value, index);\n      } catch (e) {\n        return destination.error(e);\n      }\n\n      this.active++;\n\n      this._innerSub(ish);\n    } else {\n      this.buffer.push(value);\n    }\n  };\n\n  MergeScanSubscriber.prototype._innerSub = function (ish) {\n    var innerSubscriber = new SimpleInnerSubscriber(this);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    var innerSubscription = innerSubscribe(ish, innerSubscriber);\n\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  };\n\n  MergeScanSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n\n      this.destination.complete();\n    }\n\n    this.unsubscribe();\n  };\n\n  MergeScanSubscriber.prototype.notifyNext = function (innerValue) {\n    var destination = this.destination;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  };\n\n  MergeScanSubscriber.prototype.notifyComplete = function () {\n    var buffer = this.buffer;\n    this.active--;\n\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n\n      this.destination.complete();\n    }\n  };\n\n  return MergeScanSubscriber;\n}(SimpleOuterSubscriber);\n\nexport { MergeScanSubscriber };","map":{"version":3,"mappings":"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","names":["tslib_1","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","mergeScan","accumulator","seed","concurrent","Number","POSITIVE_INFINITY","source","lift","MergeScanOperator","prototype","call","subscriber","subscribe","MergeScanSubscriber","_super","__extends","destination","acc","_this","hasValue","hasCompleted","buffer","active","index","_next","value","ish","e","error","_innerSub","push","innerSubscriber","add","innerSubscription","_complete","length","next","complete","unsubscribe","notifyNext","innerValue","notifyComplete","shift"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/mergeScan.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\n}\nvar MergeScanOperator = /*@__PURE__*/ (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexport { MergeScanOperator };\nvar MergeScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.acc = acc;\n        _this.concurrent = concurrent;\n        _this.hasValue = false;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var destination = this.destination;\n            var ish = void 0;\n            try {\n                var accumulator = this.accumulator;\n                ish = accumulator(this.acc, value, index);\n            }\n            catch (e) {\n                return destination.error(e);\n            }\n            this.active++;\n            this._innerSub(ish);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish) {\n        var innerSubscriber = new SimpleInnerSubscriber(this);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        var innerSubscription = innerSubscribe(ish, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (innerValue) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function () {\n        var buffer = this.buffer;\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(SimpleOuterSubscriber));\nexport { MergeScanSubscriber };\n//# sourceMappingURL=mergeScan.js.map\n"]},"metadata":{},"sourceType":"module"}