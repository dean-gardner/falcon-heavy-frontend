{"ast":null,"code":"import * as React from \"react\";\nimport { isFunction } from \"./assertion\";\n/**\n * Creates a named context, provider, and hook.\n *\n * @param options create context options\n */\n\nexport function createContext(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var {\n    strict = true,\n    errorMessage = \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\",\n    name\n  } = options;\n  var Context = /*#__PURE__*/React.createContext(undefined);\n  Context.displayName = name;\n\n  function useContext() {\n    var context = React.useContext(Context);\n\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n\n    return context;\n  }\n\n  return [Context.Provider, useContext, Context];\n}\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\n\nexport function getValidChildren(children) {\n  return React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child));\n}\n/**\n * Assigns a value to a ref function or object\n *\n * @param ref the ref to assign to\n * @param value the value\n */\n\nexport function assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (isFunction(ref)) {\n    ref(value);\n    return;\n  }\n\n  try {\n    // @ts-ignore\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\" + value + \"' to ref '\" + ref + \"'\");\n  }\n}\n/**\n * Combine multiple React refs into a single ref function.\n * This is used mostly when you need to allow consumers forward refs to\n * internal components\n *\n * @param refs refs to assign to value to\n */\n\nexport function mergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return value => {\n    refs.forEach(ref => assignRef(ref, value));\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AACrC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,WAAO,GAAG,EAAV;AACD;;AAED,MAAI;AACFC,UAAM,GAAG,IADP;AAEFC,gBAAY,GAAG,4FAFb;AAGFC;AAHE,MAIAH,OAJJ;AAKA,MAAII,OAAO,GAAG,aAAaP,KAAK,CAACE,aAAN,CAAoBM,SAApB,CAA3B;AACAD,SAAO,CAACE,WAAR,GAAsBH,IAAtB;;AAEA,WAASI,UAAT,GAAsB;AACpB,QAAIC,OAAO,GAAGX,KAAK,CAACU,UAAN,CAAiBH,OAAjB,CAAd;;AAEA,QAAI,CAACI,OAAD,IAAYP,MAAhB,EAAwB;AACtB,YAAM,IAAIQ,KAAJ,CAAUP,YAAV,CAAN;AACD;;AAED,WAAOM,OAAP;AACD;;AAED,SAAO,CAACJ,OAAO,CAACM,QAAT,EAAmBH,UAAnB,EAA+BH,OAA/B,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASO,gBAAT,CAA0BC,QAA1B,EAAoC;AACzC,SAAOf,KAAK,CAACgB,QAAN,CAAeC,OAAf,CAAuBF,QAAvB,EAAiCG,MAAjC,CAAwCC,KAAK,IAAI,aAAanB,KAAK,CAACoB,cAAN,CAAqBD,KAArB,CAA9D,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,SAAT,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+B;AACpC,MAAID,GAAG,IAAI,IAAX,EAAiB;;AAEjB,MAAIrB,UAAU,CAACqB,GAAD,CAAd,EAAqB;AACnBA,OAAG,CAACC,KAAD,CAAH;AACA;AACD;;AAED,MAAI;AACF;AACAD,OAAG,CAACE,OAAJ,GAAcD,KAAd;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIb,KAAJ,CAAU,0BAA0BW,KAA1B,GAAkC,YAAlC,GAAiDD,GAAjD,GAAuD,GAAjE,CAAN;AACD;AACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASI,SAAT,GAAqB;AAC1B,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,QAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,SAAOT,KAAK,IAAI;AACdO,QAAI,CAACG,OAAL,CAAaX,GAAG,IAAID,SAAS,CAACC,GAAD,EAAMC,KAAN,CAA7B;AACD,GAFD;AAGD","names":["React","isFunction","createContext","options","strict","errorMessage","name","Context","undefined","displayName","useContext","context","Error","Provider","getValidChildren","children","Children","toArray","filter","child","isValidElement","assignRef","ref","value","current","error","mergeRefs","_len","arguments","length","refs","Array","_key","forEach"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/utils/dist/esm/react-helpers.js"],"sourcesContent":["import * as React from \"react\";\nimport { isFunction } from \"./assertion\";\n\n/**\n * Creates a named context, provider, and hook.\n *\n * @param options create context options\n */\nexport function createContext(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var {\n    strict = true,\n    errorMessage = \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\",\n    name\n  } = options;\n  var Context = /*#__PURE__*/React.createContext(undefined);\n  Context.displayName = name;\n\n  function useContext() {\n    var context = React.useContext(Context);\n\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n\n    return context;\n  }\n\n  return [Context.Provider, useContext, Context];\n}\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\n\nexport function getValidChildren(children) {\n  return React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child));\n}\n\n/**\n * Assigns a value to a ref function or object\n *\n * @param ref the ref to assign to\n * @param value the value\n */\nexport function assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (isFunction(ref)) {\n    ref(value);\n    return;\n  }\n\n  try {\n    // @ts-ignore\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\" + value + \"' to ref '\" + ref + \"'\");\n  }\n}\n/**\n * Combine multiple React refs into a single ref function.\n * This is used mostly when you need to allow consumers forward refs to\n * internal components\n *\n * @param refs refs to assign to value to\n */\n\nexport function mergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return value => {\n    refs.forEach(ref => assignRef(ref, value));\n  };\n}\n//# sourceMappingURL=react-helpers.js.map"]},"metadata":{},"sourceType":"module"}