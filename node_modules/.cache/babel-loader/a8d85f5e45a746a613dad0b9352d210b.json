{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    sub.add(scheduler.schedule(function () {\n      return input.then(function (value) {\n        sub.add(scheduler.schedule(function () {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(function () {\n            return subscriber.complete();\n          }));\n        }));\n      }, function (err) {\n        sub.add(scheduler.schedule(function () {\n          return subscriber.error(err);\n        }));\n      });\n    }));\n    return sub;\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,SAAhC,EAA2C;AAC9C,SAAO,IAAIJ,UAAJ,CAAe,UAAUK,UAAV,EAAsB;AACxC,QAAIC,GAAG,GAAG,IAAIL,YAAJ,EAAV;AACAK,OAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,YAAY;AACnC,aAAOL,KAAK,CAACM,IAAN,CAAW,UAAUC,KAAV,EAAiB;AAC/BJ,WAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,YAAY;AACnCH,oBAAU,CAACM,IAAX,CAAgBD,KAAhB;AACAJ,aAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,YAAY;AAAE,mBAAOH,UAAU,CAACO,QAAX,EAAP;AAA+B,WAAhE,CAAR;AACH,SAHO,CAAR;AAIH,OALM,EAKJ,UAAUC,GAAV,EAAe;AACdP,WAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,YAAY;AAAE,iBAAOH,UAAU,CAACS,KAAX,CAAiBD,GAAjB,CAAP;AAA+B,SAAhE,CAAR;AACH,OAPM,CAAP;AAQH,KATO,CAAR;AAUA,WAAOP,GAAP;AACH,GAbM,CAAP;AAcH","names":["Observable","Subscription","schedulePromise","input","scheduler","subscriber","sub","add","schedule","then","value","next","complete","err","error"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js"],"sourcesContent":["/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            return input.then(function (value) {\n                sub.add(scheduler.schedule(function () {\n                    subscriber.next(value);\n                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                }));\n            }, function (err) {\n                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n            });\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=schedulePromise.js.map\n"]},"metadata":{},"sourceType":"module"}