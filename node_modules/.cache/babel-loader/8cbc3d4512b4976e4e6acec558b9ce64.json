{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isArray,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) {\n          return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n        }));\n      };\n    }\n  }\n\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var context = this;\n    var subject;\n    var params = {\n      context: context,\n      subject: subject,\n      callbackFunc: callbackFunc,\n      scheduler: scheduler\n    };\n    return new Observable(function (subscriber) {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject();\n\n          var handler = function () {\n            var innerArgs = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              innerArgs[_i] = arguments[_i];\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, args.concat([handler]));\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n\n        return subject.subscribe(subscriber);\n      } else {\n        var state = {\n          args: args,\n          subscriber: subscriber,\n          params: params\n        };\n        return scheduler.schedule(dispatch, 0, state);\n      }\n    });\n  };\n}\n\nfunction dispatch(state) {\n  var _this = this;\n\n  var self = this;\n  var args = state.args,\n      subscriber = state.subscriber,\n      params = state.params;\n  var callbackFunc = params.callbackFunc,\n      context = params.context,\n      scheduler = params.scheduler;\n  var subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject();\n\n    var handler = function () {\n      var innerArgs = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        innerArgs[_i] = arguments[_i];\n      }\n\n      var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n\n      _this.add(scheduler.schedule(dispatchNext, 0, {\n        value: value,\n        subject: subject\n      }));\n    };\n\n    try {\n      callbackFunc.apply(context, args.concat([handler]));\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\nfunction dispatchNext(state) {\n  var value = state.value,\n      subject = state.subject;\n  subject.next(value);\n  subject.complete();\n}\n\nfunction dispatchError(state) {\n  var err = state.err,\n      subject = state.subject;\n  subject.error(err);\n}","map":{"version":3,"mappings":"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","names":["Observable","AsyncSubject","map","canReportError","isArray","isScheduler","bindCallback","callbackFunc","resultSelector","scheduler","args","_i","arguments","length","apply","pipe","context","subject","params","subscriber","handler","innerArgs","next","complete","concat","err","error","console","warn","subscribe","state","schedule","dispatch","_this","self","value","add","dispatchNext","dispatchError"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/bindCallback.js"],"sourcesContent":["/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isArray,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var context = this;\n        var subject;\n        var params = {\n            context: context,\n            subject: subject,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n        };\n        return new Observable(function (subscriber) {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                var state = {\n                    args: args, subscriber: subscriber, params: params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    var _this = this;\n    var self = this;\n    var args = state.args, subscriber = state.subscriber, params = state.params;\n    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    var value = state.value, subject = state.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    var err = state.err, subject = state.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map\n"]},"metadata":{},"sourceType":"module"}