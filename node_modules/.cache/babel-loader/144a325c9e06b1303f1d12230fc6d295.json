{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useClickable } from \"@chakra-ui/clickable\";\nimport { useDescendant, useDescendants } from \"@chakra-ui/descendant\";\nimport { useControllableState, useDisclosure, useFocusOnHide, useId, useIds, useOutsideClick, useShortcut, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { usePopper } from \"@chakra-ui/popper\";\nimport { addItem, callAllHandlers, createContext, dataAttr, focus, getNextIndex, getNextItemFromSearch, getPrevIndex, getValidChildren, isArray, isString, mergeRefs, mergeWith, normalizeEventKey, removeItem } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nvar [MenuProvider, useMenuContext] = createContext({\n  strict: false,\n  name: \"MenuContext\"\n});\nexport { MenuProvider, useMenuContext };\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\n\nexport function useMenu(props) {\n  var {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    autoSelect = true,\n    isLazy,\n    placement = \"bottom-start\"\n  } = props;\n  var {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle\n  } = useDisclosure(props);\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n\n  var menuRef = React.useRef(null);\n  var buttonRef = React.useRef(null);\n  useOutsideClick({\n    ref: menuRef,\n    handler: event => {\n      var _buttonRef$current;\n\n      if (isOpen && closeOnBlur && !((_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n\n  var popper = usePopper(_extends({\n    placement\n  }, props));\n  var [focusedIndex, setFocusedIndex] = React.useState(-1);\n  /**\n   * Context to register all menu item nodes\n   */\n\n  var domContext = useDescendants();\n  /**\n   * Focus the button when we close the menu\n   */\n\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1);\n    }\n  }, [isOpen]);\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true\n  });\n  /**\n   * Generate unique ids for menu's list and button\n   */\n\n  var [buttonId, menuId] = useIds(id, \"menu-button\", \"menu-list\");\n  var openAndFocusMenu = React.useCallback(() => {\n    onOpen();\n    if (menuRef.current) focus(menuRef.current);\n  }, [onOpen, menuRef]);\n  var openAndFocusFirstItem = React.useCallback(() => {\n    onOpen();\n    setFocusedIndex(0);\n  }, [onOpen, setFocusedIndex]);\n  var openAndFocusLastItem = React.useCallback(() => {\n    onOpen();\n    setFocusedIndex(domContext.descendants.length - 1);\n  }, [onOpen, setFocusedIndex, domContext.descendants]);\n  var refocus = React.useCallback(() => {\n    var _menuRef$current, _domContext$descendan;\n\n    var hasFocusWithin = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(document.activeElement);\n    var shouldRefocus = isOpen && !hasFocusWithin;\n    if (!shouldRefocus) return;\n    var el = (_domContext$descendan = domContext.descendants[focusedIndex]) == null ? void 0 : _domContext$descendan.element;\n    el == null ? void 0 : el.focus({\n      preventScroll: true\n    });\n  }, [isOpen, focusedIndex, domContext.descendants]);\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    domContext,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy\n  };\n}\nexport function useMenuButton(props, externalRef) {\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n\n  var menu = useMenuContext();\n  var {\n    isOpen,\n    onClose,\n    autoSelect,\n    popper,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    openAndFocusMenu\n  } = menu;\n  var onClick = React.useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      var action = autoSelect ? openAndFocusFirstItem : openAndFocusMenu;\n      action();\n    }\n  }, [autoSelect, isOpen, onClose, openAndFocusFirstItem, openAndFocusMenu]);\n  var onKeyDown = React.useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Enter: openAndFocusFirstItem,\n      ArrowDown: openAndFocusFirstItem,\n      ArrowUp: openAndFocusLastItem\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n    }\n  }, [openAndFocusFirstItem, openAndFocusLastItem]);\n\n  var buttonProps = _extends({}, props, {\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\",\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onClick),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n\n  return popper.getReferenceProps(buttonProps, mergeRefs(menu.buttonRef, externalRef));\n}\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\n\nexport function useMenuList(props, ref) {\n  if (ref === void 0) {\n    ref = null;\n  }\n\n  var menu = useMenuContext();\n\n  if (!menu) {\n    throw new Error(\"useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>\");\n  }\n\n  var {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    popper,\n    domContext: {\n      descendants\n    },\n    isLazy\n  } = menu;\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n\n  var onCharacterPress = useShortcut({\n    preventDefault: event => event.key !== \" \"\n  });\n  var onKeyDown = React.useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Tab: event => {\n        event.preventDefault();\n      },\n      Escape: onClose,\n      ArrowDown: () => {\n        var nextIndex = getNextIndex(focusedIndex, descendants.length);\n        setFocusedIndex(nextIndex);\n      },\n      ArrowUp: () => {\n        var prevIndex = getPrevIndex(focusedIndex, descendants.length);\n        setFocusedIndex(prevIndex);\n      }\n    };\n    var fn = keyMap[eventKey];\n\n    if (fn) {\n      event.preventDefault();\n      fn(event);\n      return;\n    }\n\n    var characterHandler = onCharacterPress(character => {\n      /**\n       * Typeahead: Based on current character pressed,\n       * find the next item to be selected\n       */\n      var nextItem = getNextItemFromSearch(descendants, character, node => {\n        var _node$element;\n\n        return ((_node$element = node.element) == null ? void 0 : _node$element.textContent) || \"\";\n      }, descendants[focusedIndex]);\n\n      if (nextItem) {\n        var index = descendants.indexOf(nextItem);\n        setFocusedIndex(index);\n      }\n    });\n    characterHandler(event);\n  }, [descendants, focusedIndex, onCharacterPress, onClose, setFocusedIndex]);\n\n  var menulistProps = _extends({}, props, {\n    ref: mergeRefs(menuRef, ref),\n    children: !isLazy || isOpen ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: _extends({}, props.style, {\n      transformOrigin: popper.transformOrigin\n    }),\n    \"aria-orientation\": \"vertical\",\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n\n  return menulistProps;\n}\nexport function useMenuPositioner(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    popper,\n    isOpen\n  } = useMenuContext();\n  return mergeWith(popper.getPopperProps(props), {\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\"\n    }\n  });\n}\nexport function useMenuItem(props, externalRef) {\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n\n  var {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    isDisabled,\n    isFocusable\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onClick\", \"isDisabled\", \"isFocusable\"]);\n\n  var menu = useMenuContext();\n  var {\n    domContext,\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect,\n    onClose,\n    menuRef,\n    isOpen\n  } = menu;\n  var ref = React.useRef(null);\n  var id = \"menuitem-\" + useId();\n  /**\n   * Register the menuitem's node into the domContext\n   */\n\n  var index = useDescendant({\n    element: ref.current,\n    context: domContext,\n    disabled: isDisabled,\n    focusable: isFocusable\n  });\n  var onMouseEnter = React.useCallback(event => {\n    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index, isDisabled, onMouseEnterProp]);\n  var onMouseMove = React.useCallback(event => {\n    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);\n\n    if (document.activeElement !== ref.current) {\n      onMouseEnter(event);\n    }\n  }, [onMouseEnter, onMouseMoveProp]);\n  var onMouseLeave = React.useCallback(event => {\n    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(-1);\n  }, [setFocusedIndex, isDisabled, onMouseLeaveProp]);\n  var onClick = React.useCallback(event => {\n    onClickProp == null ? void 0 : onClickProp(event);\n    /**\n     * Close menu and parent menu's if `closeOnSelect` is set to `true`\n     */\n\n    if (closeOnSelect) {\n      onClose();\n    }\n  }, [onClose, onClickProp, closeOnSelect]);\n  var isFocused = index === focusedIndex;\n  var trulyDisabled = isDisabled && !isFocusable;\n  useUpdateEffect(() => {\n    if (!isOpen) return;\n\n    if (isFocused && !trulyDisabled && ref.current) {\n      focus(ref.current);\n    } else if (document.activeElement !== menuRef.current) {\n      var _menuRef$current2;\n\n      (_menuRef$current2 = menuRef.current) == null ? void 0 : _menuRef$current2.focus();\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen]);\n  var tabbable = useClickable({\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(ref, externalRef),\n    isDisabled,\n    isFocusable\n  });\n  return _extends({}, htmlProps, tabbable, {\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1\n  });\n}\nexport function useMenuOption(props, externalRef) {\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n\n  var {\n    onClick,\n    isDisabled,\n    isFocusable,\n    type = \"radio\",\n    isChecked\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"onClick\", \"isDisabled\", \"isFocusable\", \"type\", \"isChecked\"]);\n\n  var hookProps = {\n    isDisabled,\n    isFocusable,\n    onClick\n  };\n  var optionsProps = useMenuItem(hookProps, externalRef);\n  return _extends({}, rest, optionsProps, {\n    role: \"menuitem\" + type,\n    \"aria-checked\": isChecked\n  });\n}\nexport function useMenuOptionGroup(props) {\n  var {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"children\", \"type\", \"value\", \"defaultValue\", \"onChange\"]);\n\n  var isRadio = type === \"radio\";\n  var fallback = isRadio ? \"\" : [];\n  var [value, setValue] = useControllableState({\n    defaultValue: defaultValue != null ? defaultValue : fallback,\n    value: valueProp,\n    onChange: onChangeProp\n  });\n  var onChange = React.useCallback(selectedValue => {\n    if (type === \"radio\" && isString(value)) {\n      setValue(selectedValue);\n    }\n\n    if (type === \"checkbox\" && isArray(value)) {\n      var nextValue = value.includes(selectedValue) ? removeItem(value, selectedValue) : addItem(value, selectedValue);\n      setValue(nextValue);\n    }\n  }, [value, setValue, type]);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(child => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if (child.type.id !== \"MenuItemOption\") return child;\n\n    var onClick = event => {\n      onChange(child.props.value);\n      child.props.onClick == null ? void 0 : child.props.onClick(event);\n    };\n\n    var isChecked = type === \"radio\" ? child.props.value === value : value.includes(child.props.value);\n    return /*#__PURE__*/React.cloneElement(child, {\n      type,\n      onClick,\n      isChecked\n    });\n  });\n  return _extends({}, htmlProps, {\n    children: clones\n  });\n}\nexport function useMenuState() {\n  var {\n    isOpen,\n    onClose\n  } = useMenuContext();\n  return {\n    isOpen,\n    onClose\n  };\n}","map":{"version":3,"mappings":"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","names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","useClickable","useDescendant","useDescendants","useControllableState","useDisclosure","useFocusOnHide","useId","useIds","useOutsideClick","useShortcut","useUpdateEffect","usePopper","addItem","callAllHandlers","createContext","dataAttr","focus","getNextIndex","getNextItemFromSearch","getPrevIndex","getValidChildren","isArray","isString","mergeRefs","mergeWith","normalizeEventKey","removeItem","React","MenuProvider","useMenuContext","strict","name","useMenu","props","id","closeOnSelect","closeOnBlur","autoSelect","isLazy","placement","isOpen","onOpen","onClose","onToggle","menuRef","useRef","buttonRef","ref","handler","event","_buttonRef$current","current","contains","popper","focusedIndex","setFocusedIndex","useState","domContext","focusRef","visible","shouldFocus","buttonId","menuId","openAndFocusMenu","useCallback","openAndFocusFirstItem","openAndFocusLastItem","descendants","refocus","_menuRef$current","_domContext$descendan","hasFocusWithin","document","activeElement","shouldRefocus","el","element","preventScroll","onTransitionEnd","forceUpdate","orientation","useMenuButton","externalRef","menu","onClick","action","onKeyDown","eventKey","keyMap","Enter","ArrowDown","ArrowUp","preventDefault","stopPropagation","buttonProps","getReferenceProps","useMenuList","Error","onCharacterPress","Tab","Escape","nextIndex","prevIndex","fn","characterHandler","character","nextItem","node","_node$element","textContent","index","menulistProps","children","tabIndex","role","style","transformOrigin","useMenuPositioner","getPopperProps","visibility","useMenuItem","onMouseEnter","onMouseEnterProp","onMouseMove","onMouseMoveProp","onMouseLeave","onMouseLeaveProp","onClickProp","isDisabled","isFocusable","htmlProps","context","disabled","focusable","isFocused","trulyDisabled","_menuRef$current2","tabbable","useMenuOption","type","isChecked","rest","hookProps","optionsProps","useMenuOptionGroup","value","valueProp","defaultValue","onChange","onChangeProp","isRadio","fallback","setValue","selectedValue","nextValue","includes","validChildren","clones","map","child","cloneElement","useMenuState"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/menu/dist/esm/use-menu.js"],"sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useClickable } from \"@chakra-ui/clickable\";\nimport { useDescendant, useDescendants } from \"@chakra-ui/descendant\";\nimport { useControllableState, useDisclosure, useFocusOnHide, useId, useIds, useOutsideClick, useShortcut, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { usePopper } from \"@chakra-ui/popper\";\nimport { addItem, callAllHandlers, createContext, dataAttr, focus, getNextIndex, getNextItemFromSearch, getPrevIndex, getValidChildren, isArray, isString, mergeRefs, mergeWith, normalizeEventKey, removeItem } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nvar [MenuProvider, useMenuContext] = createContext({\n  strict: false,\n  name: \"MenuContext\"\n});\nexport { MenuProvider, useMenuContext };\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport function useMenu(props) {\n  var {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    autoSelect = true,\n    isLazy,\n    placement = \"bottom-start\"\n  } = props;\n  var {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle\n  } = useDisclosure(props);\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n\n  var menuRef = React.useRef(null);\n  var buttonRef = React.useRef(null);\n  useOutsideClick({\n    ref: menuRef,\n    handler: event => {\n      var _buttonRef$current;\n\n      if (isOpen && closeOnBlur && !((_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n\n  var popper = usePopper(_extends({\n    placement\n  }, props));\n  var [focusedIndex, setFocusedIndex] = React.useState(-1);\n  /**\n   * Context to register all menu item nodes\n   */\n\n  var domContext = useDescendants();\n  /**\n   * Focus the button when we close the menu\n   */\n\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1);\n    }\n  }, [isOpen]);\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true\n  });\n  /**\n   * Generate unique ids for menu's list and button\n   */\n\n  var [buttonId, menuId] = useIds(id, \"menu-button\", \"menu-list\");\n  var openAndFocusMenu = React.useCallback(() => {\n    onOpen();\n    if (menuRef.current) focus(menuRef.current);\n  }, [onOpen, menuRef]);\n  var openAndFocusFirstItem = React.useCallback(() => {\n    onOpen();\n    setFocusedIndex(0);\n  }, [onOpen, setFocusedIndex]);\n  var openAndFocusLastItem = React.useCallback(() => {\n    onOpen();\n    setFocusedIndex(domContext.descendants.length - 1);\n  }, [onOpen, setFocusedIndex, domContext.descendants]);\n  var refocus = React.useCallback(() => {\n    var _menuRef$current, _domContext$descendan;\n\n    var hasFocusWithin = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(document.activeElement);\n    var shouldRefocus = isOpen && !hasFocusWithin;\n    if (!shouldRefocus) return;\n    var el = (_domContext$descendan = domContext.descendants[focusedIndex]) == null ? void 0 : _domContext$descendan.element;\n    el == null ? void 0 : el.focus({\n      preventScroll: true\n    });\n  }, [isOpen, focusedIndex, domContext.descendants]);\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    domContext,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy\n  };\n}\nexport function useMenuButton(props, externalRef) {\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n\n  var menu = useMenuContext();\n  var {\n    isOpen,\n    onClose,\n    autoSelect,\n    popper,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    openAndFocusMenu\n  } = menu;\n  var onClick = React.useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      var action = autoSelect ? openAndFocusFirstItem : openAndFocusMenu;\n      action();\n    }\n  }, [autoSelect, isOpen, onClose, openAndFocusFirstItem, openAndFocusMenu]);\n  var onKeyDown = React.useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Enter: openAndFocusFirstItem,\n      ArrowDown: openAndFocusFirstItem,\n      ArrowUp: openAndFocusLastItem\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n    }\n  }, [openAndFocusFirstItem, openAndFocusLastItem]);\n\n  var buttonProps = _extends({}, props, {\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\",\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onClick),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n\n  return popper.getReferenceProps(buttonProps, mergeRefs(menu.buttonRef, externalRef));\n}\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\n\nexport function useMenuList(props, ref) {\n  if (ref === void 0) {\n    ref = null;\n  }\n\n  var menu = useMenuContext();\n\n  if (!menu) {\n    throw new Error(\"useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>\");\n  }\n\n  var {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    popper,\n    domContext: {\n      descendants\n    },\n    isLazy\n  } = menu;\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n\n  var onCharacterPress = useShortcut({\n    preventDefault: event => event.key !== \" \"\n  });\n  var onKeyDown = React.useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Tab: event => {\n        event.preventDefault();\n      },\n      Escape: onClose,\n      ArrowDown: () => {\n        var nextIndex = getNextIndex(focusedIndex, descendants.length);\n        setFocusedIndex(nextIndex);\n      },\n      ArrowUp: () => {\n        var prevIndex = getPrevIndex(focusedIndex, descendants.length);\n        setFocusedIndex(prevIndex);\n      }\n    };\n    var fn = keyMap[eventKey];\n\n    if (fn) {\n      event.preventDefault();\n      fn(event);\n      return;\n    }\n\n    var characterHandler = onCharacterPress(character => {\n      /**\n       * Typeahead: Based on current character pressed,\n       * find the next item to be selected\n       */\n      var nextItem = getNextItemFromSearch(descendants, character, node => {\n        var _node$element;\n\n        return ((_node$element = node.element) == null ? void 0 : _node$element.textContent) || \"\";\n      }, descendants[focusedIndex]);\n\n      if (nextItem) {\n        var index = descendants.indexOf(nextItem);\n        setFocusedIndex(index);\n      }\n    });\n    characterHandler(event);\n  }, [descendants, focusedIndex, onCharacterPress, onClose, setFocusedIndex]);\n\n  var menulistProps = _extends({}, props, {\n    ref: mergeRefs(menuRef, ref),\n    children: !isLazy || isOpen ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: _extends({}, props.style, {\n      transformOrigin: popper.transformOrigin\n    }),\n    \"aria-orientation\": \"vertical\",\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n\n  return menulistProps;\n}\nexport function useMenuPositioner(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    popper,\n    isOpen\n  } = useMenuContext();\n  return mergeWith(popper.getPopperProps(props), {\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\"\n    }\n  });\n}\nexport function useMenuItem(props, externalRef) {\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n\n  var {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    isDisabled,\n    isFocusable\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onClick\", \"isDisabled\", \"isFocusable\"]);\n\n  var menu = useMenuContext();\n  var {\n    domContext,\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect,\n    onClose,\n    menuRef,\n    isOpen\n  } = menu;\n  var ref = React.useRef(null);\n  var id = \"menuitem-\" + useId();\n  /**\n   * Register the menuitem's node into the domContext\n   */\n\n  var index = useDescendant({\n    element: ref.current,\n    context: domContext,\n    disabled: isDisabled,\n    focusable: isFocusable\n  });\n  var onMouseEnter = React.useCallback(event => {\n    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index, isDisabled, onMouseEnterProp]);\n  var onMouseMove = React.useCallback(event => {\n    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);\n\n    if (document.activeElement !== ref.current) {\n      onMouseEnter(event);\n    }\n  }, [onMouseEnter, onMouseMoveProp]);\n  var onMouseLeave = React.useCallback(event => {\n    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(-1);\n  }, [setFocusedIndex, isDisabled, onMouseLeaveProp]);\n  var onClick = React.useCallback(event => {\n    onClickProp == null ? void 0 : onClickProp(event);\n    /**\n     * Close menu and parent menu's if `closeOnSelect` is set to `true`\n     */\n\n    if (closeOnSelect) {\n      onClose();\n    }\n  }, [onClose, onClickProp, closeOnSelect]);\n  var isFocused = index === focusedIndex;\n  var trulyDisabled = isDisabled && !isFocusable;\n  useUpdateEffect(() => {\n    if (!isOpen) return;\n\n    if (isFocused && !trulyDisabled && ref.current) {\n      focus(ref.current);\n    } else if (document.activeElement !== menuRef.current) {\n      var _menuRef$current2;\n\n      (_menuRef$current2 = menuRef.current) == null ? void 0 : _menuRef$current2.focus();\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen]);\n  var tabbable = useClickable({\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(ref, externalRef),\n    isDisabled,\n    isFocusable\n  });\n  return _extends({}, htmlProps, tabbable, {\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1\n  });\n}\nexport function useMenuOption(props, externalRef) {\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n\n  var {\n    onClick,\n    isDisabled,\n    isFocusable,\n    type = \"radio\",\n    isChecked\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"onClick\", \"isDisabled\", \"isFocusable\", \"type\", \"isChecked\"]);\n\n  var hookProps = {\n    isDisabled,\n    isFocusable,\n    onClick\n  };\n  var optionsProps = useMenuItem(hookProps, externalRef);\n  return _extends({}, rest, optionsProps, {\n    role: \"menuitem\" + type,\n    \"aria-checked\": isChecked\n  });\n}\nexport function useMenuOptionGroup(props) {\n  var {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"children\", \"type\", \"value\", \"defaultValue\", \"onChange\"]);\n\n  var isRadio = type === \"radio\";\n  var fallback = isRadio ? \"\" : [];\n  var [value, setValue] = useControllableState({\n    defaultValue: defaultValue != null ? defaultValue : fallback,\n    value: valueProp,\n    onChange: onChangeProp\n  });\n  var onChange = React.useCallback(selectedValue => {\n    if (type === \"radio\" && isString(value)) {\n      setValue(selectedValue);\n    }\n\n    if (type === \"checkbox\" && isArray(value)) {\n      var nextValue = value.includes(selectedValue) ? removeItem(value, selectedValue) : addItem(value, selectedValue);\n      setValue(nextValue);\n    }\n  }, [value, setValue, type]);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(child => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if (child.type.id !== \"MenuItemOption\") return child;\n\n    var onClick = event => {\n      onChange(child.props.value);\n      child.props.onClick == null ? void 0 : child.props.onClick(event);\n    };\n\n    var isChecked = type === \"radio\" ? child.props.value === value : value.includes(child.props.value);\n    return /*#__PURE__*/React.cloneElement(child, {\n      type,\n      onClick,\n      isChecked\n    });\n  });\n  return _extends({}, htmlProps, {\n    children: clones\n  });\n}\nexport function useMenuState() {\n  var {\n    isOpen,\n    onClose\n  } = useMenuContext();\n  return {\n    isOpen,\n    onClose\n  };\n}\n//# sourceMappingURL=use-menu.js.map"]},"metadata":{},"sourceType":"module"}