{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { ToastManager } from \"./toast-manager\";\nvar portalId = \"chakra-toast-portal\";\n\nclass Toaster {\n  /**\n   * Initialize the manager and mount it in the DOM\n   * inside the portal node.\n   *\n   * @todo\n   *\n   * Update toast constructor to use `PortalManager`'s node or document.body.\n   * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n   */\n  constructor() {\n    var _this = this;\n\n    _defineProperty(this, \"createToast\", void 0);\n\n    _defineProperty(this, \"removeAll\", void 0);\n\n    _defineProperty(this, \"closeToast\", void 0);\n\n    _defineProperty(this, \"updateToast\", void 0);\n\n    _defineProperty(this, \"isToastActive\", void 0);\n\n    _defineProperty(this, \"bindFunctions\", methods => {\n      this.createToast = methods.notify;\n      this.removeAll = methods.closeAll;\n      this.closeToast = methods.close;\n      this.updateToast = methods.update;\n      this.isToastActive = methods.isActive;\n    });\n\n    _defineProperty(this, \"notify\", function (message, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return _this.createToast == null ? void 0 : _this.createToast(message, options);\n    });\n\n    _defineProperty(this, \"close\", id => {\n      var _this$closeToast;\n\n      (_this$closeToast = this.closeToast) == null ? void 0 : _this$closeToast.call(this, id);\n    });\n\n    _defineProperty(this, \"closeAll\", options => {\n      var _this$removeAll;\n\n      (_this$removeAll = this.removeAll) == null ? void 0 : _this$removeAll.call(this, options);\n    });\n\n    _defineProperty(this, \"update\", function (id, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this.updateToast == null ? void 0 : _this.updateToast(id, options);\n    });\n\n    _defineProperty(this, \"isActive\", id => {\n      var _this$isToastActive;\n\n      return (_this$isToastActive = this.isToastActive) == null ? void 0 : _this$isToastActive.call(this, id);\n    });\n\n    if (!isBrowser) return;\n    var portal;\n    var existingPortal = document.getElementById(portalId);\n\n    if (existingPortal) {\n      portal = existingPortal;\n    } else {\n      var _document$body;\n\n      var div = document.createElement(\"div\");\n      div.id = portalId;\n      (_document$body = document.body) == null ? void 0 : _document$body.appendChild(div);\n      portal = div;\n    }\n\n    render( /*#__PURE__*/React.createElement(ToastManager, {\n      notify: this.bindFunctions\n    }), portal);\n  }\n\n}\n\nexport var toast = new Toaster();","map":{"version":3,"mappings":"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","names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","isBrowser","React","render","ToastManager","portalId","Toaster","constructor","_this","methods","createToast","notify","removeAll","closeAll","closeToast","close","updateToast","update","isToastActive","isActive","message","options","id","_this$closeToast","call","_this$removeAll","_this$isToastActive","portal","existingPortal","document","getElementById","_document$body","div","createElement","body","appendChild","bindFunctions","toast"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/toast/dist/esm/toast.class.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { ToastManager } from \"./toast-manager\";\nvar portalId = \"chakra-toast-portal\";\n\nclass Toaster {\n  /**\n   * Initialize the manager and mount it in the DOM\n   * inside the portal node.\n   *\n   * @todo\n   *\n   * Update toast constructor to use `PortalManager`'s node or document.body.\n   * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n   */\n  constructor() {\n    var _this = this;\n\n    _defineProperty(this, \"createToast\", void 0);\n\n    _defineProperty(this, \"removeAll\", void 0);\n\n    _defineProperty(this, \"closeToast\", void 0);\n\n    _defineProperty(this, \"updateToast\", void 0);\n\n    _defineProperty(this, \"isToastActive\", void 0);\n\n    _defineProperty(this, \"bindFunctions\", methods => {\n      this.createToast = methods.notify;\n      this.removeAll = methods.closeAll;\n      this.closeToast = methods.close;\n      this.updateToast = methods.update;\n      this.isToastActive = methods.isActive;\n    });\n\n    _defineProperty(this, \"notify\", function (message, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return _this.createToast == null ? void 0 : _this.createToast(message, options);\n    });\n\n    _defineProperty(this, \"close\", id => {\n      var _this$closeToast;\n\n      (_this$closeToast = this.closeToast) == null ? void 0 : _this$closeToast.call(this, id);\n    });\n\n    _defineProperty(this, \"closeAll\", options => {\n      var _this$removeAll;\n\n      (_this$removeAll = this.removeAll) == null ? void 0 : _this$removeAll.call(this, options);\n    });\n\n    _defineProperty(this, \"update\", function (id, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this.updateToast == null ? void 0 : _this.updateToast(id, options);\n    });\n\n    _defineProperty(this, \"isActive\", id => {\n      var _this$isToastActive;\n\n      return (_this$isToastActive = this.isToastActive) == null ? void 0 : _this$isToastActive.call(this, id);\n    });\n\n    if (!isBrowser) return;\n    var portal;\n    var existingPortal = document.getElementById(portalId);\n\n    if (existingPortal) {\n      portal = existingPortal;\n    } else {\n      var _document$body;\n\n      var div = document.createElement(\"div\");\n      div.id = portalId;\n      (_document$body = document.body) == null ? void 0 : _document$body.appendChild(div);\n      portal = div;\n    }\n\n    render( /*#__PURE__*/React.createElement(ToastManager, {\n      notify: this.bindFunctions\n    }), portal);\n  }\n\n}\n\nexport var toast = new Toaster();\n//# sourceMappingURL=toast.class.js.map"]},"metadata":{},"sourceType":"module"}