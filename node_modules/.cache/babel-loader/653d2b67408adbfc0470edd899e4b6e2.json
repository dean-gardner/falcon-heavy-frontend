{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\n\nvar AsyncAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AsyncAction, _super);\n\n  function AsyncAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    _this.pending = false;\n    return _this;\n  }\n\n  AsyncAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (this.closed) {\n      return this;\n    }\n\n    this.state = state;\n    var id = this.id;\n    var scheduler = this.scheduler;\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.pending = true;\n    this.delay = delay;\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n    return this;\n  };\n\n  AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  };\n\n  AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n\n    clearInterval(id);\n    return undefined;\n  };\n\n  AsyncAction.prototype.execute = function (state, delay) {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n\n    var error = this._execute(state, delay);\n\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  };\n\n  AsyncAction.prototype._execute = function (state, delay) {\n    var errored = false;\n    var errorValue = undefined;\n\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  };\n\n  AsyncAction.prototype._unsubscribe = function () {\n    var id = this.id;\n    var scheduler = this.scheduler;\n    var actions = scheduler.actions;\n    var index = actions.indexOf(this);\n    this.work = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  };\n\n  return AsyncAction;\n}(Action);\n\nexport { AsyncAction };","map":{"version":3,"mappings":"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","names":["tslib_1","Action","AsyncAction","_super","__extends","scheduler","work","_this","call","pending","prototype","schedule","state","delay","closed","id","recycleAsyncId","requestAsyncId","setInterval","flush","bind","clearInterval","undefined","execute","Error","error","_execute","errored","errorValue","e","unsubscribe","_unsubscribe","actions","index","indexOf","splice"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n"]},"metadata":{},"sourceType":"module"}