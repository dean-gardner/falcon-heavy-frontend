{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function distinctUntilChanged(compare, keySelector) {\n  return function (source) {\n    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n  };\n}\n\nvar DistinctUntilChangedOperator = /*@__PURE__*/function () {\n  function DistinctUntilChangedOperator(compare, keySelector) {\n    this.compare = compare;\n    this.keySelector = keySelector;\n  }\n\n  DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  };\n\n  return DistinctUntilChangedOperator;\n}();\n\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n\n  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.keySelector = keySelector;\n    _this.hasKey = false;\n\n    if (typeof compare === 'function') {\n      _this.compare = compare;\n    }\n\n    return _this;\n  }\n\n  DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n    return x === y;\n  };\n\n  DistinctUntilChangedSubscriber.prototype._next = function (value) {\n    var key;\n\n    try {\n      var keySelector = this.keySelector;\n      key = keySelector ? keySelector(value) : value;\n    } catch (err) {\n      return this.destination.error(err);\n    }\n\n    var result = false;\n\n    if (this.hasKey) {\n      try {\n        var compare = this.compare;\n        result = compare(this.key, key);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (!result) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  };\n\n  return DistinctUntilChangedSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,oBAAT,CAA8BC,OAA9B,EAAuCC,WAAvC,EAAoD;AACvD,SAAO,UAAUC,MAAV,EAAkB;AAAE,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,4BAAJ,CAAiCJ,OAAjC,EAA0CC,WAA1C,CAAZ,CAAP;AAA6E,GAAxG;AACH;;AACD,IAAIG,4BAA4B,GAAG,aAAe,YAAY;AAC1D,WAASA,4BAAT,CAAsCJ,OAAtC,EAA+CC,WAA/C,EAA4D;AACxD,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACH;;AACDG,8BAA4B,CAACC,SAA7B,CAAuCC,IAAvC,GAA8C,UAAUC,UAAV,EAAsBL,MAAtB,EAA8B;AACxE,WAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,8BAAJ,CAAmCF,UAAnC,EAA+C,KAAKP,OAApD,EAA6D,KAAKC,WAAlE,CAAjB,CAAP;AACH,GAFD;;AAGA,SAAOG,4BAAP;AACH,CATiD,EAAlD;;AAUA,IAAIK,8BAA8B,GAAG,aAAe,UAAUC,MAAV,EAAkB;AAClEb,SAAO,CAACc,SAAR,CAAkBF,8BAAlB,EAAkDC,MAAlD;;AACA,WAASD,8BAAT,CAAwCG,WAAxC,EAAqDZ,OAArD,EAA8DC,WAA9D,EAA2E;AACvE,QAAIY,KAAK,GAAGH,MAAM,CAACJ,IAAP,CAAY,IAAZ,EAAkBM,WAAlB,KAAkC,IAA9C;;AACAC,SAAK,CAACZ,WAAN,GAAoBA,WAApB;AACAY,SAAK,CAACC,MAAN,GAAe,KAAf;;AACA,QAAI,OAAOd,OAAP,KAAmB,UAAvB,EAAmC;AAC/Ba,WAAK,CAACb,OAAN,GAAgBA,OAAhB;AACH;;AACD,WAAOa,KAAP;AACH;;AACDJ,gCAA8B,CAACJ,SAA/B,CAAyCL,OAAzC,GAAmD,UAAUe,CAAV,EAAaC,CAAb,EAAgB;AAC/D,WAAOD,CAAC,KAAKC,CAAb;AACH,GAFD;;AAGAP,gCAA8B,CAACJ,SAA/B,CAAyCY,KAAzC,GAAiD,UAAUC,KAAV,EAAiB;AAC9D,QAAIC,GAAJ;;AACA,QAAI;AACA,UAAIlB,WAAW,GAAG,KAAKA,WAAvB;AACAkB,SAAG,GAAGlB,WAAW,GAAGA,WAAW,CAACiB,KAAD,CAAd,GAAwBA,KAAzC;AACH,KAHD,CAIA,OAAOE,GAAP,EAAY;AACR,aAAO,KAAKR,WAAL,CAAiBS,KAAjB,CAAuBD,GAAvB,CAAP;AACH;;AACD,QAAIE,MAAM,GAAG,KAAb;;AACA,QAAI,KAAKR,MAAT,EAAiB;AACb,UAAI;AACA,YAAId,OAAO,GAAG,KAAKA,OAAnB;AACAsB,cAAM,GAAGtB,OAAO,CAAC,KAAKmB,GAAN,EAAWA,GAAX,CAAhB;AACH,OAHD,CAIA,OAAOC,GAAP,EAAY;AACR,eAAO,KAAKR,WAAL,CAAiBS,KAAjB,CAAuBD,GAAvB,CAAP;AACH;AACJ,KARD,MASK;AACD,WAAKN,MAAL,GAAc,IAAd;AACH;;AACD,QAAI,CAACQ,MAAL,EAAa;AACT,WAAKH,GAAL,GAAWA,GAAX;AACA,WAAKP,WAAL,CAAiBW,IAAjB,CAAsBL,KAAtB;AACH;AACJ,GA1BD;;AA2BA,SAAOT,8BAAP;AACH,CA1CmD,CA0ClDX,UA1CkD,CAApD","names":["tslib_1","Subscriber","distinctUntilChanged","compare","keySelector","source","lift","DistinctUntilChangedOperator","prototype","call","subscriber","subscribe","DistinctUntilChangedSubscriber","_super","__extends","destination","_this","hasKey","x","y","_next","value","key","err","error","result","next"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            var keySelector = this.keySelector;\n            key = keySelector ? keySelector(value) : value;\n        }\n        catch (err) {\n            return this.destination.error(err);\n        }\n        var result = false;\n        if (this.hasKey) {\n            try {\n                var compare = this.compare;\n                result = compare(this.key, key);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (!result) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n"]},"metadata":{},"sourceType":"module"}