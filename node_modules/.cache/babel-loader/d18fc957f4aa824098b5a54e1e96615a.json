{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period, scheduler) {\n  if (period === void 0) {\n    period = 0;\n  }\n\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable(function (subscriber) {\n    subscriber.add(scheduler.schedule(dispatch, period, {\n      subscriber: subscriber,\n      counter: 0,\n      period: period\n    }));\n    return subscriber;\n  });\n}\n\nfunction dispatch(state) {\n  var subscriber = state.subscriber,\n      counter = state.counter,\n      period = state.period;\n  subscriber.next(counter);\n  this.schedule({\n    subscriber: subscriber,\n    counter: counter + 1,\n    period: period\n  }, period);\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,SAA1B,EAAqC;AACxC,MAAID,MAAM,KAAK,KAAK,CAApB,EAAuB;AACnBA,UAAM,GAAG,CAAT;AACH;;AACD,MAAIC,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACtBA,aAAS,GAAGJ,KAAZ;AACH;;AACD,MAAI,CAACC,SAAS,CAACE,MAAD,CAAV,IAAsBA,MAAM,GAAG,CAAnC,EAAsC;AAClCA,UAAM,GAAG,CAAT;AACH;;AACD,MAAI,CAACC,SAAD,IAAc,OAAOA,SAAS,CAACC,QAAjB,KAA8B,UAAhD,EAA4D;AACxDD,aAAS,GAAGJ,KAAZ;AACH;;AACD,SAAO,IAAID,UAAJ,CAAe,UAAUO,UAAV,EAAsB;AACxCA,cAAU,CAACC,GAAX,CAAeH,SAAS,CAACC,QAAV,CAAmBG,QAAnB,EAA6BL,MAA7B,EAAqC;AAAEG,gBAAU,EAAEA,UAAd;AAA0BG,aAAO,EAAE,CAAnC;AAAsCN,YAAM,EAAEA;AAA9C,KAArC,CAAf;AACA,WAAOG,UAAP;AACH,GAHM,CAAP;AAIH;;AACD,SAASE,QAAT,CAAkBE,KAAlB,EAAyB;AACrB,MAAIJ,UAAU,GAAGI,KAAK,CAACJ,UAAvB;AAAA,MAAmCG,OAAO,GAAGC,KAAK,CAACD,OAAnD;AAAA,MAA4DN,MAAM,GAAGO,KAAK,CAACP,MAA3E;AACAG,YAAU,CAACK,IAAX,CAAgBF,OAAhB;AACA,OAAKJ,QAAL,CAAc;AAAEC,cAAU,EAAEA,UAAd;AAA0BG,WAAO,EAAEA,OAAO,GAAG,CAA7C;AAAgDN,UAAM,EAAEA;AAAxD,GAAd,EAAgFA,MAAhF;AACH","names":["Observable","async","isNumeric","interval","period","scheduler","schedule","subscriber","add","dispatch","counter","state","next"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/interval.js"],"sourcesContent":["/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period, scheduler) {\n    if (period === void 0) {\n        period = 0;\n    }\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    var subscriber = state.subscriber, counter = state.counter, period = state.period;\n    subscriber.next(counter);\n    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);\n}\n//# sourceMappingURL=interval.js.map\n"]},"metadata":{},"sourceType":"module"}