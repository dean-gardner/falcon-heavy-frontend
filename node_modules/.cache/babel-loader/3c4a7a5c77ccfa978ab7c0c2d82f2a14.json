{"ast":null,"code":"import * as React from \"react\";\n\nfunction setScript(initialValue) {\n  var mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  var systemPreference = mql.matches ? \"dark\" : \"light\";\n  var persistedPreference;\n\n  try {\n    persistedPreference = localStorage.getItem(\"chakra-ui-color-mode\");\n  } catch (error) {\n    console.log(\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\");\n  }\n\n  var isInStorage = typeof persistedPreference === \"string\";\n  var colorMode;\n\n  if (isInStorage) {\n    colorMode = persistedPreference;\n  } else {\n    colorMode = initialValue === \"system\" ? systemPreference : initialValue;\n  }\n\n  if (colorMode) {\n    var root = document.documentElement;\n    root.style.setProperty(\"--chakra-ui-color-mode\", colorMode);\n  }\n}\n/**\n * Script to add to the root of your application when using localStorage,\n * to help prevent flash of color mode that can happen during page load.\n */\n\n\nexport var ColorModeScript = props => {\n  var {\n    initialColorMode = \"light\"\n  } = props;\n  var html = \"(\" + String(setScript) + \")('\" + initialColorMode + \"')\";\n  return /*#__PURE__*/React.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  });\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,SAAT,CAAmBC,YAAnB,EAAiC;AAC/B,MAAIC,GAAG,GAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAAV;AACA,MAAIC,gBAAgB,GAAGH,GAAG,CAACI,OAAJ,GAAc,MAAd,GAAuB,OAA9C;AACA,MAAIC,mBAAJ;;AAEA,MAAI;AACFA,uBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAtB;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,WAAO,CAACC,GAAR,CAAY,6FAAZ;AACD;;AAED,MAAIC,WAAW,GAAG,OAAON,mBAAP,KAA+B,QAAjD;AACA,MAAIO,SAAJ;;AAEA,MAAID,WAAJ,EAAiB;AACfC,aAAS,GAAGP,mBAAZ;AACD,GAFD,MAEO;AACLO,aAAS,GAAGb,YAAY,KAAK,QAAjB,GAA4BI,gBAA5B,GAA+CJ,YAA3D;AACD;;AAED,MAAIa,SAAJ,EAAe;AACb,QAAIC,IAAI,GAAGC,QAAQ,CAACC,eAApB;AACAF,QAAI,CAACG,KAAL,CAAWC,WAAX,CAAuB,wBAAvB,EAAiDL,SAAjD;AACD;AACF;AAED;AACA;AACA;AACA;;;AACA,OAAO,IAAIM,eAAe,GAAGC,KAAK,IAAI;AACpC,MAAI;AACFC,oBAAgB,GAAG;AADjB,MAEAD,KAFJ;AAGA,MAAIE,IAAI,GAAG,MAAMC,MAAM,CAACxB,SAAD,CAAZ,GAA0B,KAA1B,GAAkCsB,gBAAlC,GAAqD,IAAhE;AACA,SAAO,aAAavB,KAAK,CAAC0B,aAAN,CAAoB,QAApB,EAA8B;AAChDC,2BAAuB,EAAE;AACvBC,YAAM,EAAEJ;AADe;AADuB,GAA9B,CAApB;AAKD,CAVM","names":["React","setScript","initialValue","mql","window","matchMedia","systemPreference","matches","persistedPreference","localStorage","getItem","error","console","log","isInStorage","colorMode","root","document","documentElement","style","setProperty","ColorModeScript","props","initialColorMode","html","String","createElement","dangerouslySetInnerHTML","__html"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/react/node_modules/@chakra-ui/color-mode/dist/esm/color-mode-script.js"],"sourcesContent":["import * as React from \"react\";\n\nfunction setScript(initialValue) {\n  var mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  var systemPreference = mql.matches ? \"dark\" : \"light\";\n  var persistedPreference;\n\n  try {\n    persistedPreference = localStorage.getItem(\"chakra-ui-color-mode\");\n  } catch (error) {\n    console.log(\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\");\n  }\n\n  var isInStorage = typeof persistedPreference === \"string\";\n  var colorMode;\n\n  if (isInStorage) {\n    colorMode = persistedPreference;\n  } else {\n    colorMode = initialValue === \"system\" ? systemPreference : initialValue;\n  }\n\n  if (colorMode) {\n    var root = document.documentElement;\n    root.style.setProperty(\"--chakra-ui-color-mode\", colorMode);\n  }\n}\n\n/**\n * Script to add to the root of your application when using localStorage,\n * to help prevent flash of color mode that can happen during page load.\n */\nexport var ColorModeScript = props => {\n  var {\n    initialColorMode = \"light\"\n  } = props;\n  var html = \"(\" + String(setScript) + \")('\" + initialColorMode + \"')\";\n  return /*#__PURE__*/React.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  });\n};\n//# sourceMappingURL=color-mode-script.js.map"]},"metadata":{},"sourceType":"module"}