{"ast":null,"code":"import { isBrowser, noop } from \"@chakra-ui/utils\";\nvar classNames = {\n  light: \"chakra-ui-light\",\n  dark: \"chakra-ui-dark\"\n};\n/**\n * SSR: Graceful fallback for the `body` element\n */\n\nvar mockBody = {\n  classList: {\n    add: noop,\n    remove: noop\n  }\n};\n\nvar getBody = () => {\n  return isBrowser ? document.body : mockBody;\n};\n/**\n * Function to add/remove class from `body` based on color mode\n */\n\n\nexport function syncBodyClassName(isDark) {\n  var body = getBody();\n  body.classList.add(isDark ? classNames.dark : classNames.light);\n  body.classList.remove(isDark ? classNames.light : classNames.dark);\n}\n/**\n * Check if JS media query matches the query string passed\n */\n\nfunction getMediaQuery(query) {\n  var mediaQueryList = window.matchMedia == null ? void 0 : window.matchMedia(query);\n\n  if (!mediaQueryList) {\n    return undefined;\n  }\n\n  return !!mediaQueryList.media === mediaQueryList.matches;\n}\n\nexport var queries = {\n  light: \"(prefers-color-scheme: light)\",\n  dark: \"(prefers-color-scheme: dark)\"\n};\nexport var lightQuery = queries.light;\nexport var darkQuery = queries.dark;\nexport function getColorScheme(fallback) {\n  var _getMediaQuery;\n\n  var isDark = (_getMediaQuery = getMediaQuery(queries.dark)) != null ? _getMediaQuery : fallback === \"dark\";\n  return isDark ? \"dark\" : \"light\";\n}\n/**\n * Adds system os color mode listener, and run the callback\n * once preference changes\n */\n\nexport function addListener(fn) {\n  if (!(\"matchMedia\" in window)) {\n    return noop;\n  }\n\n  var mediaQueryList = window.matchMedia(queries.dark);\n\n  var listener = () => {\n    fn(mediaQueryList.matches ? \"dark\" : \"light\");\n  };\n\n  listener();\n  mediaQueryList.addListener(listener);\n  return () => {\n    mediaQueryList.removeListener(listener);\n  };\n}\nexport var root = {\n  get: () => document.documentElement.style.getPropertyValue(\"--chakra-ui-color-mode\"),\n  set: mode => {\n    if (isBrowser) {\n      document.documentElement.style.setProperty(\"--chakra-ui-color-mode\", mode);\n    }\n  }\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,IAAIC,UAAU,GAAG;AACfC,OAAK,EAAE,iBADQ;AAEfC,MAAI,EAAE;AAFS,CAAjB;AAKA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG;AACbC,WAAS,EAAE;AACTC,OAAG,EAAEN,IADI;AAETO,UAAM,EAAEP;AAFC;AADE,CAAf;;AAOA,IAAIQ,OAAO,GAAG,MAAM;AAClB,SAAOT,SAAS,GAAGU,QAAQ,CAACC,IAAZ,GAAmBN,QAAnC;AACD,CAFD;AAGA;AACA;AACA;;;AAGA,OAAO,SAASO,iBAAT,CAA2BC,MAA3B,EAAmC;AACxC,MAAIF,IAAI,GAAGF,OAAO,EAAlB;AACAE,MAAI,CAACL,SAAL,CAAeC,GAAf,CAAmBM,MAAM,GAAGX,UAAU,CAACE,IAAd,GAAqBF,UAAU,CAACC,KAAzD;AACAQ,MAAI,CAACL,SAAL,CAAeE,MAAf,CAAsBK,MAAM,GAAGX,UAAU,CAACC,KAAd,GAAsBD,UAAU,CAACE,IAA7D;AACD;AACD;AACA;AACA;;AAEA,SAASU,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAIC,cAAc,GAAGC,MAAM,CAACC,UAAP,IAAqB,IAArB,GAA4B,KAAK,CAAjC,GAAqCD,MAAM,CAACC,UAAP,CAAkBH,KAAlB,CAA1D;;AAEA,MAAI,CAACC,cAAL,EAAqB;AACnB,WAAOG,SAAP;AACD;;AAED,SAAO,CAAC,CAACH,cAAc,CAACI,KAAjB,KAA2BJ,cAAc,CAACK,OAAjD;AACD;;AAED,OAAO,IAAIC,OAAO,GAAG;AACnBnB,OAAK,EAAE,+BADY;AAEnBC,MAAI,EAAE;AAFa,CAAd;AAIP,OAAO,IAAImB,UAAU,GAAGD,OAAO,CAACnB,KAAzB;AACP,OAAO,IAAIqB,SAAS,GAAGF,OAAO,CAAClB,IAAxB;AACP,OAAO,SAASqB,cAAT,CAAwBC,QAAxB,EAAkC;AACvC,MAAIC,cAAJ;;AAEA,MAAId,MAAM,GAAG,CAACc,cAAc,GAAGb,aAAa,CAACQ,OAAO,CAAClB,IAAT,CAA/B,KAAkD,IAAlD,GAAyDuB,cAAzD,GAA0ED,QAAQ,KAAK,MAApG;AACA,SAAOb,MAAM,GAAG,MAAH,GAAY,OAAzB;AACD;AACD;AACA;AACA;AACA;;AAEA,OAAO,SAASe,WAAT,CAAqBC,EAArB,EAAyB;AAC9B,MAAI,EAAE,gBAAgBZ,MAAlB,CAAJ,EAA+B;AAC7B,WAAOhB,IAAP;AACD;;AAED,MAAIe,cAAc,GAAGC,MAAM,CAACC,UAAP,CAAkBI,OAAO,CAAClB,IAA1B,CAArB;;AAEA,MAAI0B,QAAQ,GAAG,MAAM;AACnBD,MAAE,CAACb,cAAc,CAACK,OAAf,GAAyB,MAAzB,GAAkC,OAAnC,CAAF;AACD,GAFD;;AAIAS,UAAQ;AACRd,gBAAc,CAACY,WAAf,CAA2BE,QAA3B;AACA,SAAO,MAAM;AACXd,kBAAc,CAACe,cAAf,CAA8BD,QAA9B;AACD,GAFD;AAGD;AACD,OAAO,IAAIE,IAAI,GAAG;AAChBC,KAAG,EAAE,MAAMvB,QAAQ,CAACwB,eAAT,CAAyBC,KAAzB,CAA+BC,gBAA/B,CAAgD,wBAAhD,CADK;AAEhBC,KAAG,EAAEC,IAAI,IAAI;AACX,QAAItC,SAAJ,EAAe;AACbU,cAAQ,CAACwB,eAAT,CAAyBC,KAAzB,CAA+BI,WAA/B,CAA2C,wBAA3C,EAAqED,IAArE;AACD;AACF;AANe,CAAX","names":["isBrowser","noop","classNames","light","dark","mockBody","classList","add","remove","getBody","document","body","syncBodyClassName","isDark","getMediaQuery","query","mediaQueryList","window","matchMedia","undefined","media","matches","queries","lightQuery","darkQuery","getColorScheme","fallback","_getMediaQuery","addListener","fn","listener","removeListener","root","get","documentElement","style","getPropertyValue","set","mode","setProperty"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/skeleton/node_modules/@chakra-ui/color-mode/dist/esm/color-mode.utils.js"],"sourcesContent":["import { isBrowser, noop } from \"@chakra-ui/utils\";\nvar classNames = {\n  light: \"chakra-ui-light\",\n  dark: \"chakra-ui-dark\"\n};\n\n/**\n * SSR: Graceful fallback for the `body` element\n */\nvar mockBody = {\n  classList: {\n    add: noop,\n    remove: noop\n  }\n};\n\nvar getBody = () => {\n  return isBrowser ? document.body : mockBody;\n};\n/**\n * Function to add/remove class from `body` based on color mode\n */\n\n\nexport function syncBodyClassName(isDark) {\n  var body = getBody();\n  body.classList.add(isDark ? classNames.dark : classNames.light);\n  body.classList.remove(isDark ? classNames.light : classNames.dark);\n}\n/**\n * Check if JS media query matches the query string passed\n */\n\nfunction getMediaQuery(query) {\n  var mediaQueryList = window.matchMedia == null ? void 0 : window.matchMedia(query);\n\n  if (!mediaQueryList) {\n    return undefined;\n  }\n\n  return !!mediaQueryList.media === mediaQueryList.matches;\n}\n\nexport var queries = {\n  light: \"(prefers-color-scheme: light)\",\n  dark: \"(prefers-color-scheme: dark)\"\n};\nexport var lightQuery = queries.light;\nexport var darkQuery = queries.dark;\nexport function getColorScheme(fallback) {\n  var _getMediaQuery;\n\n  var isDark = (_getMediaQuery = getMediaQuery(queries.dark)) != null ? _getMediaQuery : fallback === \"dark\";\n  return isDark ? \"dark\" : \"light\";\n}\n/**\n * Adds system os color mode listener, and run the callback\n * once preference changes\n */\n\nexport function addListener(fn) {\n  if (!(\"matchMedia\" in window)) {\n    return noop;\n  }\n\n  var mediaQueryList = window.matchMedia(queries.dark);\n\n  var listener = () => {\n    fn(mediaQueryList.matches ? \"dark\" : \"light\");\n  };\n\n  listener();\n  mediaQueryList.addListener(listener);\n  return () => {\n    mediaQueryList.removeListener(listener);\n  };\n}\nexport var root = {\n  get: () => document.documentElement.style.getPropertyValue(\"--chakra-ui-color-mode\"),\n  set: mode => {\n    if (isBrowser) {\n      document.documentElement.style.setProperty(\"--chakra-ui-color-mode\", mode);\n    }\n  }\n};\n//# sourceMappingURL=color-mode.utils.js.map"]},"metadata":{},"sourceType":"module"}