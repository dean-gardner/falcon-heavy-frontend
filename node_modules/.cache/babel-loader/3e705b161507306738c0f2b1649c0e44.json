{"ast":null,"code":"import { isFocusable, isTabbable, isHTMLElement } from \"./tabbable\";\nvar focusableElList = [\"input:not([disabled])\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"embed\", \"iframe\", \"object\", \"a[href]\", \"area[href]\", \"button:not([disabled])\", \"[tabindex]\", \"audio[controls]\", \"video[controls]\", \"*[tabindex]:not([aria-disabled])\", \"*[contenteditable]\"];\nvar focusableElSelector = focusableElList.join();\nexport var isRightClick = event => event.button !== 0;\nexport function getAllFocusable(container) {\n  var focusableEls = Array.from(container.querySelectorAll(focusableElSelector));\n  focusableEls.unshift(container);\n  return focusableEls.filter(isFocusable).filter(el => window.getComputedStyle(el).display !== \"none\");\n}\nexport function getFirstFocusable(container) {\n  var allFocusable = getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nexport function getAllTabbable(container, fallbackToFocusable) {\n  var allFocusable = Array.from(container.querySelectorAll(focusableElSelector));\n  var allTabbable = allFocusable.filter(isTabbable);\n\n  if (isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n\n  return allTabbable;\n}\nexport function getFirstTabbableIn(container, fallbackToFocusable) {\n  var [first] = getAllTabbable(container, fallbackToFocusable);\n  return first || null;\n}\nexport function getLastTabbableIn(container, fallbackToFocusable) {\n  var allTabbable = getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nexport function getNextTabbable(container, fallbackToFocusable) {\n  var allFocusable = getAllFocusable(container);\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nexport function getPreviousTabbable(container, fallbackToFocusable) {\n  var allFocusable = getAllFocusable(container).reverse();\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nexport function focusNextTabbable(container, fallbackToFocusable) {\n  var nextTabbable = getNextTabbable(container, fallbackToFocusable);\n\n  if (nextTabbable && isHTMLElement(nextTabbable)) {\n    nextTabbable.focus();\n  }\n}\nexport function focusPreviousTabbable(container, fallbackToFocusable) {\n  var previousTabbable = getPreviousTabbable(container, fallbackToFocusable);\n\n  if (previousTabbable && isHTMLElement(previousTabbable)) {\n    previousTabbable.focus();\n  }\n}\n\nfunction matches(element, selectors) {\n  if (\"matches\" in element) return element.matches(selectors);\n  if (\"msMatchesSelector\" in element) return element.msMatchesSelector(selectors);\n  return element.webkitMatchesSelector(selectors);\n}\n\nexport function closest(element, selectors) {\n  if (\"closest\" in element) return element.closest(selectors);\n\n  do {\n    if (matches(element, selectors)) return element;\n    element = element.parentElement || element.parentNode;\n  } while (element !== null && element.nodeType === 1);\n\n  return null;\n}","map":{"version":3,"mappings":"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","names":["isFocusable","isTabbable","isHTMLElement","focusableElList","focusableElSelector","join","isRightClick","event","button","getAllFocusable","container","focusableEls","Array","from","querySelectorAll","unshift","filter","el","window","getComputedStyle","display","getFirstFocusable","allFocusable","length","getAllTabbable","fallbackToFocusable","allTabbable","getFirstTabbableIn","first","getLastTabbableIn","getNextTabbable","index","indexOf","document","activeElement","slice","find","getPreviousTabbable","reverse","focusNextTabbable","nextTabbable","focus","focusPreviousTabbable","previousTabbable","matches","element","selectors","msMatchesSelector","webkitMatchesSelector","closest","parentElement","parentNode","nodeType"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/utils/dist/esm/dom-query.js"],"sourcesContent":["import { isFocusable, isTabbable, isHTMLElement } from \"./tabbable\";\nvar focusableElList = [\"input:not([disabled])\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"embed\", \"iframe\", \"object\", \"a[href]\", \"area[href]\", \"button:not([disabled])\", \"[tabindex]\", \"audio[controls]\", \"video[controls]\", \"*[tabindex]:not([aria-disabled])\", \"*[contenteditable]\"];\nvar focusableElSelector = focusableElList.join();\nexport var isRightClick = event => event.button !== 0;\nexport function getAllFocusable(container) {\n  var focusableEls = Array.from(container.querySelectorAll(focusableElSelector));\n  focusableEls.unshift(container);\n  return focusableEls.filter(isFocusable).filter(el => window.getComputedStyle(el).display !== \"none\");\n}\nexport function getFirstFocusable(container) {\n  var allFocusable = getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nexport function getAllTabbable(container, fallbackToFocusable) {\n  var allFocusable = Array.from(container.querySelectorAll(focusableElSelector));\n  var allTabbable = allFocusable.filter(isTabbable);\n\n  if (isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n\n  return allTabbable;\n}\nexport function getFirstTabbableIn(container, fallbackToFocusable) {\n  var [first] = getAllTabbable(container, fallbackToFocusable);\n  return first || null;\n}\nexport function getLastTabbableIn(container, fallbackToFocusable) {\n  var allTabbable = getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nexport function getNextTabbable(container, fallbackToFocusable) {\n  var allFocusable = getAllFocusable(container);\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nexport function getPreviousTabbable(container, fallbackToFocusable) {\n  var allFocusable = getAllFocusable(container).reverse();\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nexport function focusNextTabbable(container, fallbackToFocusable) {\n  var nextTabbable = getNextTabbable(container, fallbackToFocusable);\n\n  if (nextTabbable && isHTMLElement(nextTabbable)) {\n    nextTabbable.focus();\n  }\n}\nexport function focusPreviousTabbable(container, fallbackToFocusable) {\n  var previousTabbable = getPreviousTabbable(container, fallbackToFocusable);\n\n  if (previousTabbable && isHTMLElement(previousTabbable)) {\n    previousTabbable.focus();\n  }\n}\n\nfunction matches(element, selectors) {\n  if (\"matches\" in element) return element.matches(selectors);\n  if (\"msMatchesSelector\" in element) return element.msMatchesSelector(selectors);\n  return element.webkitMatchesSelector(selectors);\n}\n\nexport function closest(element, selectors) {\n  if (\"closest\" in element) return element.closest(selectors);\n\n  do {\n    if (matches(element, selectors)) return element;\n    element = element.parentElement || element.parentNode;\n  } while (element !== null && element.nodeType === 1);\n\n  return null;\n}\n//# sourceMappingURL=dom-query.js.map"]},"metadata":{},"sourceType":"module"}