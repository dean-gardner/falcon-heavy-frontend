{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n  return function refCountOperatorFunction(source) {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nvar RefCountOperator = /*@__PURE__*/function () {\n  function RefCountOperator(connectable) {\n    this.connectable = connectable;\n  }\n\n  RefCountOperator.prototype.call = function (subscriber, source) {\n    var connectable = this.connectable;\n    connectable._refCount++;\n    var refCounter = new RefCountSubscriber(subscriber, connectable);\n    var subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      refCounter.connection = connectable.connect();\n    }\n\n    return subscription;\n  };\n\n  return RefCountOperator;\n}();\n\nvar RefCountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RefCountSubscriber, _super);\n\n  function RefCountSubscriber(destination, connectable) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.connectable = connectable;\n    return _this;\n  }\n\n  RefCountSubscriber.prototype._unsubscribe = function () {\n    var connectable = this.connectable;\n\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    var refCount = connectable._refCount;\n\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    connectable._refCount = refCount - 1;\n\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    var connection = this.connection;\n    var sharedConnection = connectable._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  };\n\n  return RefCountSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,QAAT,GAAoB;AACvB,SAAO,SAASC,wBAAT,CAAkCC,MAAlC,EAA0C;AAC7C,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,gBAAJ,CAAqBF,MAArB,CAAZ,CAAP;AACH,GAFD;AAGH;;AACD,IAAIE,gBAAgB,GAAG,aAAe,YAAY;AAC9C,WAASA,gBAAT,CAA0BC,WAA1B,EAAuC;AACnC,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AACDD,kBAAgB,CAACE,SAAjB,CAA2BC,IAA3B,GAAkC,UAAUC,UAAV,EAAsBN,MAAtB,EAA8B;AAC5D,QAAIG,WAAW,GAAG,KAAKA,WAAvB;AACAA,eAAW,CAACI,SAAZ;AACA,QAAIC,UAAU,GAAG,IAAIC,kBAAJ,CAAuBH,UAAvB,EAAmCH,WAAnC,CAAjB;AACA,QAAIO,YAAY,GAAGV,MAAM,CAACW,SAAP,CAAiBH,UAAjB,CAAnB;;AACA,QAAI,CAACA,UAAU,CAACI,MAAhB,EAAwB;AACpBJ,gBAAU,CAACK,UAAX,GAAwBV,WAAW,CAACW,OAAZ,EAAxB;AACH;;AACD,WAAOJ,YAAP;AACH,GATD;;AAUA,SAAOR,gBAAP;AACH,CAfqC,EAAtC;;AAgBA,IAAIO,kBAAkB,GAAG,aAAe,UAAUM,MAAV,EAAkB;AACtDnB,SAAO,CAACoB,SAAR,CAAkBP,kBAAlB,EAAsCM,MAAtC;;AACA,WAASN,kBAAT,CAA4BQ,WAA5B,EAAyCd,WAAzC,EAAsD;AAClD,QAAIe,KAAK,GAAGH,MAAM,CAACV,IAAP,CAAY,IAAZ,EAAkBY,WAAlB,KAAkC,IAA9C;;AACAC,SAAK,CAACf,WAAN,GAAoBA,WAApB;AACA,WAAOe,KAAP;AACH;;AACDT,oBAAkB,CAACL,SAAnB,CAA6Be,YAA7B,GAA4C,YAAY;AACpD,QAAIhB,WAAW,GAAG,KAAKA,WAAvB;;AACA,QAAI,CAACA,WAAL,EAAkB;AACd,WAAKU,UAAL,GAAkB,IAAlB;AACA;AACH;;AACD,SAAKV,WAAL,GAAmB,IAAnB;AACA,QAAIL,QAAQ,GAAGK,WAAW,CAACI,SAA3B;;AACA,QAAIT,QAAQ,IAAI,CAAhB,EAAmB;AACf,WAAKe,UAAL,GAAkB,IAAlB;AACA;AACH;;AACDV,eAAW,CAACI,SAAZ,GAAwBT,QAAQ,GAAG,CAAnC;;AACA,QAAIA,QAAQ,GAAG,CAAf,EAAkB;AACd,WAAKe,UAAL,GAAkB,IAAlB;AACA;AACH;;AACD,QAAIA,UAAU,GAAG,KAAKA,UAAtB;AACA,QAAIO,gBAAgB,GAAGjB,WAAW,CAACkB,WAAnC;AACA,SAAKR,UAAL,GAAkB,IAAlB;;AACA,QAAIO,gBAAgB,KAAK,CAACP,UAAD,IAAeO,gBAAgB,KAAKP,UAAzC,CAApB,EAA0E;AACtEO,sBAAgB,CAACE,WAAjB;AACH;AACJ,GAvBD;;AAwBA,SAAOb,kBAAP;AACH,CAhCuC,CAgCtCZ,UAhCsC,CAAxC","names":["tslib_1","Subscriber","refCount","refCountOperatorFunction","source","lift","RefCountOperator","connectable","prototype","call","subscriber","_refCount","refCounter","RefCountSubscriber","subscription","subscribe","closed","connection","connect","_super","__extends","destination","_this","_unsubscribe","sharedConnection","_connection","unsubscribe"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/refCount.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map\n"]},"metadata":{},"sourceType":"module"}