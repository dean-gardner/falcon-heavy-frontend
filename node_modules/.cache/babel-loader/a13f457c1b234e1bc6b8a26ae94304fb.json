{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useControllableState, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { ariaAttr, callAllHandlers, isEmpty, mergeRefs, normalizeEventKey } from \"@chakra-ui/utils\";\nimport { useCallback, useRef, useState } from \"react\";\n/**\n * React hook for managing the inline renaming of some text.\n *\n * @see Docs https://chakra-ui.com/components/useEditable\n */\n\nexport function useEditable(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    onChange: onChangeProp,\n    onCancel: onCancelProp,\n    onSubmit: onSubmitProp,\n    value: valueProp,\n    isDisabled,\n    defaultValue,\n    startWithEditView,\n    isPreviewFocusable = true,\n    submitOnBlur = true,\n    selectAllOnFocus = true,\n    placeholder,\n    onEdit: onEditProp\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"onChange\", \"onCancel\", \"onSubmit\", \"value\", \"isDisabled\", \"defaultValue\", \"startWithEditView\", \"isPreviewFocusable\", \"submitOnBlur\", \"selectAllOnFocus\", \"placeholder\", \"onEdit\"]);\n\n  var defaultIsEditing = Boolean(startWithEditView && !isDisabled);\n  var [isEditing, setIsEditing] = useState(defaultIsEditing);\n  var [value, setValue] = useControllableState({\n    defaultValue: defaultValue || \"\",\n    value: valueProp,\n    onChange: onChangeProp\n  });\n  /**\n   * Keep track of the previous value, so if users\n   * presses `cancel`, we can revert to it.\n   */\n\n  var [prevValue, setPrevValue] = useState(value);\n  /**\n   * Ref to help focus the input in edit mode\n   */\n\n  var inputRef = useRef(null);\n  var previewRef = useRef(null);\n  var editButtonRef = useRef(null);\n  var isInteractive = !isEditing || !isDisabled;\n  useUpdateEffect(() => {\n    if (!isEditing) {\n      var _editButtonRef$curren;\n\n      (_editButtonRef$curren = editButtonRef.current) == null ? void 0 : _editButtonRef$curren.focus();\n      return;\n    }\n\n    if (selectAllOnFocus) {\n      var _inputRef$current;\n\n      (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.select();\n    } else {\n      var _inputRef$current2;\n\n      (_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.focus();\n    }\n\n    onEditProp == null ? void 0 : onEditProp();\n  }, [isEditing, onEditProp, selectAllOnFocus]);\n  var onEdit = useCallback(() => {\n    if (isInteractive) {\n      setIsEditing(true);\n    }\n  }, [isInteractive]);\n  var onCancel = useCallback(() => {\n    setIsEditing(false);\n    setValue(prevValue);\n    onCancelProp == null ? void 0 : onCancelProp(prevValue);\n  }, [onCancelProp, setValue, prevValue]);\n  var onSubmit = useCallback(() => {\n    setIsEditing(false);\n    setPrevValue(value);\n    onSubmitProp == null ? void 0 : onSubmitProp(value);\n  }, [value, onSubmitProp]);\n  var onChange = useCallback(event => {\n    setValue(event.target.value);\n  }, [setValue]);\n  var onKeyDown = useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Escape: onCancel,\n      Enter: event => {\n        if (!event.shiftKey && !event.metaKey) {\n          onSubmit();\n        }\n      }\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [onCancel, onSubmit]);\n  var isValueEmpty = isEmpty(value);\n\n  var getTabIndex = () => {\n    var shouldHaveTabIndex = isInteractive && isPreviewFocusable;\n    return shouldHaveTabIndex ? 0 : undefined;\n  };\n\n  var onBlur = useCallback(() => {\n    if (submitOnBlur) {\n      onSubmit();\n    }\n  }, [submitOnBlur, onSubmit]);\n\n  var getPreviewProps = function getPreviewProps(props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(ref, previewRef),\n      children: isValueEmpty ? placeholder : value,\n      hidden: isEditing,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      tabIndex: getTabIndex(),\n      onFocus: callAllHandlers(props.onFocus, onEdit)\n    });\n  };\n\n  var getInputProps = function getInputProps(props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      hidden: !isEditing,\n      placeholder,\n      ref: mergeRefs(ref, inputRef),\n      disabled: isDisabled,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      value,\n      onBlur: callAllHandlers(props.onBlur, onBlur),\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n    });\n  };\n\n  var getEditButtonProps = function getEditButtonProps(props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Edit\"\n    }, props, {\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onEdit),\n      ref: mergeRefs(ref, editButtonRef)\n    });\n  };\n\n  var getSubmitButtonProps = function getSubmitButtonProps(props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      \"aria-label\": \"Submit\",\n      ref,\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onSubmit)\n    });\n  };\n\n  var getCancelButtonProps = function getCancelButtonProps(props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Cancel\"\n    }, props, {\n      ref,\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onCancel)\n    });\n  };\n\n  return {\n    isEditing,\n    isDisabled,\n    isValueEmpty,\n    value,\n    onEdit,\n    onCancel,\n    onSubmit,\n    getPreviewProps,\n    getInputProps,\n    getEditButtonProps,\n    getSubmitButtonProps,\n    getCancelButtonProps,\n    htmlProps\n  };\n}","map":{"version":3,"mappings":"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","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useControllableState","useUpdateEffect","ariaAttr","callAllHandlers","isEmpty","mergeRefs","normalizeEventKey","useCallback","useRef","useState","useEditable","props","onChange","onChangeProp","onCancel","onCancelProp","onSubmit","onSubmitProp","value","valueProp","isDisabled","defaultValue","startWithEditView","isPreviewFocusable","submitOnBlur","selectAllOnFocus","placeholder","onEdit","onEditProp","htmlProps","defaultIsEditing","Boolean","isEditing","setIsEditing","setValue","prevValue","setPrevValue","inputRef","previewRef","editButtonRef","isInteractive","_editButtonRef$curren","current","focus","_inputRef$current","select","_inputRef$current2","event","onKeyDown","eventKey","keyMap","Escape","Enter","shiftKey","metaKey","action","preventDefault","isValueEmpty","getTabIndex","shouldHaveTabIndex","undefined","onBlur","getPreviewProps","ref","children","hidden","tabIndex","onFocus","getInputProps","disabled","getEditButtonProps","type","onClick","getSubmitButtonProps","getCancelButtonProps"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/editable/dist/esm/use-editable.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useControllableState, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { ariaAttr, callAllHandlers, isEmpty, mergeRefs, normalizeEventKey } from \"@chakra-ui/utils\";\nimport { useCallback, useRef, useState } from \"react\";\n\n/**\n * React hook for managing the inline renaming of some text.\n *\n * @see Docs https://chakra-ui.com/components/useEditable\n */\nexport function useEditable(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    onChange: onChangeProp,\n    onCancel: onCancelProp,\n    onSubmit: onSubmitProp,\n    value: valueProp,\n    isDisabled,\n    defaultValue,\n    startWithEditView,\n    isPreviewFocusable = true,\n    submitOnBlur = true,\n    selectAllOnFocus = true,\n    placeholder,\n    onEdit: onEditProp\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"onChange\", \"onCancel\", \"onSubmit\", \"value\", \"isDisabled\", \"defaultValue\", \"startWithEditView\", \"isPreviewFocusable\", \"submitOnBlur\", \"selectAllOnFocus\", \"placeholder\", \"onEdit\"]);\n\n  var defaultIsEditing = Boolean(startWithEditView && !isDisabled);\n  var [isEditing, setIsEditing] = useState(defaultIsEditing);\n  var [value, setValue] = useControllableState({\n    defaultValue: defaultValue || \"\",\n    value: valueProp,\n    onChange: onChangeProp\n  });\n  /**\n   * Keep track of the previous value, so if users\n   * presses `cancel`, we can revert to it.\n   */\n\n  var [prevValue, setPrevValue] = useState(value);\n  /**\n   * Ref to help focus the input in edit mode\n   */\n\n  var inputRef = useRef(null);\n  var previewRef = useRef(null);\n  var editButtonRef = useRef(null);\n  var isInteractive = !isEditing || !isDisabled;\n  useUpdateEffect(() => {\n    if (!isEditing) {\n      var _editButtonRef$curren;\n\n      (_editButtonRef$curren = editButtonRef.current) == null ? void 0 : _editButtonRef$curren.focus();\n      return;\n    }\n\n    if (selectAllOnFocus) {\n      var _inputRef$current;\n\n      (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.select();\n    } else {\n      var _inputRef$current2;\n\n      (_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.focus();\n    }\n\n    onEditProp == null ? void 0 : onEditProp();\n  }, [isEditing, onEditProp, selectAllOnFocus]);\n  var onEdit = useCallback(() => {\n    if (isInteractive) {\n      setIsEditing(true);\n    }\n  }, [isInteractive]);\n  var onCancel = useCallback(() => {\n    setIsEditing(false);\n    setValue(prevValue);\n    onCancelProp == null ? void 0 : onCancelProp(prevValue);\n  }, [onCancelProp, setValue, prevValue]);\n  var onSubmit = useCallback(() => {\n    setIsEditing(false);\n    setPrevValue(value);\n    onSubmitProp == null ? void 0 : onSubmitProp(value);\n  }, [value, onSubmitProp]);\n  var onChange = useCallback(event => {\n    setValue(event.target.value);\n  }, [setValue]);\n  var onKeyDown = useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Escape: onCancel,\n      Enter: event => {\n        if (!event.shiftKey && !event.metaKey) {\n          onSubmit();\n        }\n      }\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [onCancel, onSubmit]);\n  var isValueEmpty = isEmpty(value);\n\n  var getTabIndex = () => {\n    var shouldHaveTabIndex = isInteractive && isPreviewFocusable;\n    return shouldHaveTabIndex ? 0 : undefined;\n  };\n\n  var onBlur = useCallback(() => {\n    if (submitOnBlur) {\n      onSubmit();\n    }\n  }, [submitOnBlur, onSubmit]);\n\n  var getPreviewProps = function getPreviewProps(props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(ref, previewRef),\n      children: isValueEmpty ? placeholder : value,\n      hidden: isEditing,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      tabIndex: getTabIndex(),\n      onFocus: callAllHandlers(props.onFocus, onEdit)\n    });\n  };\n\n  var getInputProps = function getInputProps(props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      hidden: !isEditing,\n      placeholder,\n      ref: mergeRefs(ref, inputRef),\n      disabled: isDisabled,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      value,\n      onBlur: callAllHandlers(props.onBlur, onBlur),\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n    });\n  };\n\n  var getEditButtonProps = function getEditButtonProps(props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Edit\"\n    }, props, {\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onEdit),\n      ref: mergeRefs(ref, editButtonRef)\n    });\n  };\n\n  var getSubmitButtonProps = function getSubmitButtonProps(props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      \"aria-label\": \"Submit\",\n      ref,\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onSubmit)\n    });\n  };\n\n  var getCancelButtonProps = function getCancelButtonProps(props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Cancel\"\n    }, props, {\n      ref,\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onCancel)\n    });\n  };\n\n  return {\n    isEditing,\n    isDisabled,\n    isValueEmpty,\n    value,\n    onEdit,\n    onCancel,\n    onSubmit,\n    getPreviewProps,\n    getInputProps,\n    getEditButtonProps,\n    getSubmitButtonProps,\n    getCancelButtonProps,\n    htmlProps\n  };\n}\n//# sourceMappingURL=use-editable.js.map"]},"metadata":{},"sourceType":"module"}