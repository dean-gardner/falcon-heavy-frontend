{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, omit, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { TabsProvider, useTab, useTabIndicator, useTabList, useTabPanel, useTabPanels, useTabs } from \"./use-tabs\";\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components. It doesn't render\n * any DOM node.\n */\n\nexport var Tabs = /*#__PURE__*/forwardRef(function Tabs(props, ref) {\n  var styles = useMultiStyleConfig(\"Tabs\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      {\n    children,\n    className\n  } = _omitThemingProps,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"children\", \"className\"]);\n\n  var _useTabs = useTabs(rest),\n      {\n    htmlProps\n  } = _useTabs,\n      ctx = _objectWithoutPropertiesLoose(_useTabs, [\"htmlProps\"]);\n\n  var context = React.useMemo(() => ctx, [ctx]);\n  var rootProps = omit(htmlProps, [\"isFitted\"]);\n  return /*#__PURE__*/React.createElement(TabsProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: cx(\"chakra-tabs\", className),\n    ref: ref\n  }, rootProps, {\n    __css: styles.root\n  }), children)));\n});\n\nif (__DEV__) {\n  Tabs.displayName = \"Tabs\";\n}\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\n\n\nexport var Tab = /*#__PURE__*/forwardRef(function Tab(props, ref) {\n  var styles = useStyles();\n  var tabProps = useTab(_extends({}, props, {\n    ref\n  }));\n\n  var tabStyles = _extends({\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, styles.tab);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({}, tabProps, {\n    className: cx(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  }));\n});\n\nif (__DEV__) {\n  Tab.displayName = \"Tab\";\n}\n/**\n * TabList is used to manage a list of tab buttons. It renders a `div` by default,\n * and is responsible the keyboard interaction between tabs.\n */\n\n\nexport var TabList = /*#__PURE__*/forwardRef(function TabList(props, ref) {\n  var tablistProps = useTabList(_extends({}, props, {\n    ref\n  }));\n  var styles = useStyles();\n\n  var tablistStyles = _extends({\n    display: \"flex\"\n  }, styles.tablist);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, tablistProps, {\n    className: cx(\"chakra-tabs__tablist\", props.className),\n    __css: tablistStyles\n  }));\n});\n\nif (__DEV__) {\n  TabList.displayName = \"TabList\";\n}\n/**\n * TabPanel\n * Used to render the content for a specific tab.\n */\n\n\nexport var TabPanel = /*#__PURE__*/forwardRef(function TabPanel(props, ref) {\n  var panelProps = useTabPanel(_extends({}, props, {\n    ref\n  }));\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, panelProps, {\n    className: cx(\"chakra-tabs__tab-panel\", props.className),\n    __css: styles.tabpanel\n  }));\n});\n\nif (__DEV__) {\n  TabPanel.displayName = \"TabPanel\";\n}\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\n\n\nexport var TabPanels = /*#__PURE__*/forwardRef(function TabPanels(props, ref) {\n  var panelsProps = useTabPanels(props);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, panelsProps, {\n    width: \"100%\",\n    ref: ref,\n    className: cx(\"chakra-tabs__tab-panels\", props.className)\n  }));\n});\n\nif (__DEV__) {\n  TabPanels.displayName = \"TabPanels\";\n}\n/**\n * TabIndicator\n *\n * Used to render an active tab indicator that animates between\n * selected tabs.\n */\n\n\nexport var TabIndicator = /*#__PURE__*/forwardRef(function TabIndicator(props, ref) {\n  var indicatorStyle = useTabIndicator();\n\n  var style = _extends({}, props.style, indicatorStyle);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-tabs__tab-indicator\", props.className),\n    style: style,\n    __css: styles.indicator\n  }));\n});\n\nif (__DEV__) {\n  TabIndicator.displayName = \"TabIndicator\";\n}","map":{"version":3,"mappings":"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","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","omit","__DEV__","React","TabsProvider","useTab","useTabIndicator","useTabList","useTabPanel","useTabPanels","useTabs","Tabs","props","ref","styles","_omitThemingProps","children","className","rest","_useTabs","htmlProps","ctx","context","useMemo","rootProps","createElement","value","div","__css","root","displayName","Tab","tabProps","tabStyles","outline","display","alignItems","justifyContent","tab","button","TabList","tablistProps","tablistStyles","tablist","TabPanel","panelProps","tabpanel","TabPanels","panelsProps","width","TabIndicator","indicatorStyle","style","indicator"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/tabs/dist/esm/tabs.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, omit, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { TabsProvider, useTab, useTabIndicator, useTabList, useTabPanel, useTabPanels, useTabs } from \"./use-tabs\";\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components. It doesn't render\n * any DOM node.\n */\nexport var Tabs = /*#__PURE__*/forwardRef(function Tabs(props, ref) {\n  var styles = useMultiStyleConfig(\"Tabs\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      {\n    children,\n    className\n  } = _omitThemingProps,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"children\", \"className\"]);\n\n  var _useTabs = useTabs(rest),\n      {\n    htmlProps\n  } = _useTabs,\n      ctx = _objectWithoutPropertiesLoose(_useTabs, [\"htmlProps\"]);\n\n  var context = React.useMemo(() => ctx, [ctx]);\n  var rootProps = omit(htmlProps, [\"isFitted\"]);\n  return /*#__PURE__*/React.createElement(TabsProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: cx(\"chakra-tabs\", className),\n    ref: ref\n  }, rootProps, {\n    __css: styles.root\n  }), children)));\n});\n\nif (__DEV__) {\n  Tabs.displayName = \"Tabs\";\n}\n\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\nexport var Tab = /*#__PURE__*/forwardRef(function Tab(props, ref) {\n  var styles = useStyles();\n  var tabProps = useTab(_extends({}, props, {\n    ref\n  }));\n\n  var tabStyles = _extends({\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, styles.tab);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({}, tabProps, {\n    className: cx(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  }));\n});\n\nif (__DEV__) {\n  Tab.displayName = \"Tab\";\n}\n\n/**\n * TabList is used to manage a list of tab buttons. It renders a `div` by default,\n * and is responsible the keyboard interaction between tabs.\n */\nexport var TabList = /*#__PURE__*/forwardRef(function TabList(props, ref) {\n  var tablistProps = useTabList(_extends({}, props, {\n    ref\n  }));\n  var styles = useStyles();\n\n  var tablistStyles = _extends({\n    display: \"flex\"\n  }, styles.tablist);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, tablistProps, {\n    className: cx(\"chakra-tabs__tablist\", props.className),\n    __css: tablistStyles\n  }));\n});\n\nif (__DEV__) {\n  TabList.displayName = \"TabList\";\n}\n\n/**\n * TabPanel\n * Used to render the content for a specific tab.\n */\nexport var TabPanel = /*#__PURE__*/forwardRef(function TabPanel(props, ref) {\n  var panelProps = useTabPanel(_extends({}, props, {\n    ref\n  }));\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, panelProps, {\n    className: cx(\"chakra-tabs__tab-panel\", props.className),\n    __css: styles.tabpanel\n  }));\n});\n\nif (__DEV__) {\n  TabPanel.displayName = \"TabPanel\";\n}\n\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\nexport var TabPanels = /*#__PURE__*/forwardRef(function TabPanels(props, ref) {\n  var panelsProps = useTabPanels(props);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, panelsProps, {\n    width: \"100%\",\n    ref: ref,\n    className: cx(\"chakra-tabs__tab-panels\", props.className)\n  }));\n});\n\nif (__DEV__) {\n  TabPanels.displayName = \"TabPanels\";\n}\n\n/**\n * TabIndicator\n *\n * Used to render an active tab indicator that animates between\n * selected tabs.\n */\nexport var TabIndicator = /*#__PURE__*/forwardRef(function TabIndicator(props, ref) {\n  var indicatorStyle = useTabIndicator();\n\n  var style = _extends({}, props.style, indicatorStyle);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-tabs__tab-indicator\", props.className),\n    style: style,\n    __css: styles.indicator\n  }));\n});\n\nif (__DEV__) {\n  TabIndicator.displayName = \"TabIndicator\";\n}\n//# sourceMappingURL=tabs.js.map"]},"metadata":{},"sourceType":"module"}