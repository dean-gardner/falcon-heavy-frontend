{"ast":null,"code":"import { createContext, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useCheckboxGroup } from \"./use-checkbox-group\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\nexport { useCheckboxGroupContext };\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/components/checkbox\n */\n\nexport var CheckboxGroup = props => {\n  var {\n    colorScheme,\n    size,\n    variant,\n    children\n  } = props;\n  var {\n    value,\n    onChange\n  } = useCheckboxGroup(props);\n  var group = React.useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant\n  }), [size, onChange, colorScheme, value, variant]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,EAAwBC,OAAxB,QAAuC,kBAAvC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,IAAI,CAACC,qBAAD,EAAwBC,uBAAxB,IAAmDL,aAAa,CAAC;AACnEM,MAAI,EAAE,sBAD6D;AAEnEC,QAAM,EAAE;AAF2D,CAAD,CAApE;AAIA,SAASF,uBAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIG,aAAa,GAAGC,KAAK,IAAI;AAClC,MAAI;AACFC,eADE;AAEFC,QAFE;AAGFC,WAHE;AAIFC;AAJE,MAKAJ,KALJ;AAMA,MAAI;AACFK,SADE;AAEFC;AAFE,MAGAZ,gBAAgB,CAACM,KAAD,CAHpB;AAIA,MAAIO,KAAK,GAAGd,KAAK,CAACe,OAAN,CAAc,OAAO;AAC/BN,QAD+B;AAE/BI,YAF+B;AAG/BL,eAH+B;AAI/BI,SAJ+B;AAK/BF;AAL+B,GAAP,CAAd,EAMR,CAACD,IAAD,EAAOI,QAAP,EAAiBL,WAAjB,EAA8BI,KAA9B,EAAqCF,OAArC,CANQ,CAAZ;AAOA,SAAO,aAAaV,KAAK,CAACgB,aAAN,CAAoBd,qBAApB,EAA2C;AAC7DU,SAAK,EAAEE;AADsD,GAA3C,EAEjBH,QAFiB,CAApB;AAGD,CArBM;;AAuBP,IAAIZ,OAAJ,EAAa;AACXO,eAAa,CAACW,WAAd,GAA4B,eAA5B;AACD","names":["createContext","__DEV__","React","useCheckboxGroup","CheckboxGroupProvider","useCheckboxGroupContext","name","strict","CheckboxGroup","props","colorScheme","size","variant","children","value","onChange","group","useMemo","createElement","displayName"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/checkbox/dist/esm/checkbox-group.js"],"sourcesContent":["import { createContext, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useCheckboxGroup } from \"./use-checkbox-group\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\nexport { useCheckboxGroupContext };\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/components/checkbox\n */\n\nexport var CheckboxGroup = props => {\n  var {\n    colorScheme,\n    size,\n    variant,\n    children\n  } = props;\n  var {\n    value,\n    onChange\n  } = useCheckboxGroup(props);\n  var group = React.useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant\n  }), [size, onChange, colorScheme, value, variant]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n//# sourceMappingURL=checkbox-group.js.map"]},"metadata":{},"sourceType":"module"}