{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\n\nvar toString = /*@__PURE__*/function () {\n  return Object.prototype.toString;\n}();\n\nexport function fromEvent(target, eventName, options, resultSelector) {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n\n  if (resultSelector) {\n    return fromEvent(target, eventName, options).pipe(map(function (args) {\n      return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n    }));\n  }\n\n  return new Observable(function (subscriber) {\n    function handler(e) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n\n    setupSubscription(target, eventName, handler, subscriber, options);\n  });\n}\n\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n  var unsubscribe;\n\n  if (isEventTarget(sourceObj)) {\n    var source_1 = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n\n    unsubscribe = function () {\n      return source_1.removeEventListener(eventName, handler, options);\n    };\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    var source_2 = sourceObj;\n    sourceObj.on(eventName, handler);\n\n    unsubscribe = function () {\n      return source_2.off(eventName, handler);\n    };\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    var source_3 = sourceObj;\n    sourceObj.addListener(eventName, handler);\n\n    unsubscribe = function () {\n      return source_3.removeListener(eventName, handler);\n    };\n  } else if (sourceObj && sourceObj.length) {\n    for (var i = 0, len = sourceObj.length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj) {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj) {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj) {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}","map":{"version":3,"mappings":"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","names":["Observable","isArray","isFunction","map","toString","Object","prototype","fromEvent","target","eventName","options","resultSelector","undefined","pipe","args","apply","subscriber","handler","e","arguments","length","next","Array","slice","call","setupSubscription","sourceObj","unsubscribe","isEventTarget","source_1","addEventListener","removeEventListener","isJQueryStyleEventEmitter","source_2","on","off","isNodeStyleEventEmitter","source_3","addListener","removeListener","i","len","TypeError","add"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/fromEvent.js"],"sourcesContent":["/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nvar toString = /*@__PURE__*/ (function () { return Object.prototype.toString; })();\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    var unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        var source_1 = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        var source_2 = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = function () { return source_2.off(eventName, handler); };\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        var source_3 = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (var i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map\n"]},"metadata":{},"sourceType":"module"}