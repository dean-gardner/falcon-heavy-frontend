{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nvar SubscribeOnObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SubscribeOnObservable, _super);\n\n  function SubscribeOnObservable(source, delayTime, scheduler) {\n    if (delayTime === void 0) {\n      delayTime = 0;\n    }\n\n    if (scheduler === void 0) {\n      scheduler = asap;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.source = source;\n    _this.delayTime = delayTime;\n    _this.scheduler = scheduler;\n\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      _this.delayTime = 0;\n    }\n\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      _this.scheduler = asap;\n    }\n\n    return _this;\n  }\n\n  SubscribeOnObservable.create = function (source, delay, scheduler) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (scheduler === void 0) {\n      scheduler = asap;\n    }\n\n    return new SubscribeOnObservable(source, delay, scheduler);\n  };\n\n  SubscribeOnObservable.dispatch = function (arg) {\n    var source = arg.source,\n        subscriber = arg.subscriber;\n    return this.add(source.subscribe(subscriber));\n  };\n\n  SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n    var delay = this.delayTime;\n    var source = this.source;\n    var scheduler = this.scheduler;\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source: source,\n      subscriber: subscriber\n    });\n  };\n\n  return SubscribeOnObservable;\n}(Observable);\n\nexport { SubscribeOnObservable };","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AACA,IAAIC,qBAAqB,GAAG,aAAe,UAAUC,MAAV,EAAkB;AACzDL,SAAO,CAACM,SAAR,CAAkBF,qBAAlB,EAAyCC,MAAzC;;AACA,WAASD,qBAAT,CAA+BG,MAA/B,EAAuCC,SAAvC,EAAkDC,SAAlD,EAA6D;AACzD,QAAID,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACtBA,eAAS,GAAG,CAAZ;AACH;;AACD,QAAIC,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACtBA,eAAS,GAAGP,IAAZ;AACH;;AACD,QAAIQ,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACAD,SAAK,CAACH,MAAN,GAAeA,MAAf;AACAG,SAAK,CAACF,SAAN,GAAkBA,SAAlB;AACAE,SAAK,CAACD,SAAN,GAAkBA,SAAlB;;AACA,QAAI,CAACN,SAAS,CAACK,SAAD,CAAV,IAAyBA,SAAS,GAAG,CAAzC,EAA4C;AACxCE,WAAK,CAACF,SAAN,GAAkB,CAAlB;AACH;;AACD,QAAI,CAACC,SAAD,IAAc,OAAOA,SAAS,CAACG,QAAjB,KAA8B,UAAhD,EAA4D;AACxDF,WAAK,CAACD,SAAN,GAAkBP,IAAlB;AACH;;AACD,WAAOQ,KAAP;AACH;;AACDN,uBAAqB,CAACS,MAAtB,GAA+B,UAAUN,MAAV,EAAkBO,KAAlB,EAAyBL,SAAzB,EAAoC;AAC/D,QAAIK,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAClBA,WAAK,GAAG,CAAR;AACH;;AACD,QAAIL,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACtBA,eAAS,GAAGP,IAAZ;AACH;;AACD,WAAO,IAAIE,qBAAJ,CAA0BG,MAA1B,EAAkCO,KAAlC,EAAyCL,SAAzC,CAAP;AACH,GARD;;AASAL,uBAAqB,CAACW,QAAtB,GAAiC,UAAUC,GAAV,EAAe;AAC5C,QAAIT,MAAM,GAAGS,GAAG,CAACT,MAAjB;AAAA,QAAyBU,UAAU,GAAGD,GAAG,CAACC,UAA1C;AACA,WAAO,KAAKC,GAAL,CAASX,MAAM,CAACY,SAAP,CAAiBF,UAAjB,CAAT,CAAP;AACH,GAHD;;AAIAb,uBAAqB,CAACgB,SAAtB,CAAgCC,UAAhC,GAA6C,UAAUJ,UAAV,EAAsB;AAC/D,QAAIH,KAAK,GAAG,KAAKN,SAAjB;AACA,QAAID,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIE,SAAS,GAAG,KAAKA,SAArB;AACA,WAAOA,SAAS,CAACG,QAAV,CAAmBR,qBAAqB,CAACW,QAAzC,EAAmDD,KAAnD,EAA0D;AAC7DP,YAAM,EAAEA,MADqD;AAC7CU,gBAAU,EAAEA;AADiC,KAA1D,CAAP;AAGH,GAPD;;AAQA,SAAOb,qBAAP;AACH,CA3C0C,CA2CzCH,UA3CyC,CAA3C;;AA4CA,SAASG,qBAAT","names":["tslib_1","Observable","asap","isNumeric","SubscribeOnObservable","_super","__extends","source","delayTime","scheduler","_this","call","schedule","create","delay","dispatch","arg","subscriber","add","subscribe","prototype","_subscribe"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) {\n            delayTime = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.delayTime = delayTime;\n        _this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            _this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = asap;\n        }\n        return _this;\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable));\nexport { SubscribeOnObservable };\n//# sourceMappingURL=SubscribeOnObservable.js.map\n"]},"metadata":{},"sourceType":"module"}