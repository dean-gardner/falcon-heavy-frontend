{"ast":null,"code":"import { OpKind, RpcClient } from '@taquito/rpc';\nexport { OpKind } from '@taquito/rpc';\nimport { combineLatest, ReplaySubject, from, defer, timer, throwError, of, range, concat, Subject, NEVER, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, takeWhile, tap, shareReplay, filter, first, switchMap, distinctUntilKeyChanged, timeoutWith, startWith, concatMap, mapTo, switchMapTo, takeUntil, retry, catchError, pluck, publishReplay, refCount } from 'rxjs/operators';\nimport BigNumber from 'bignumber.js';\nimport { Schema, ParameterSchema } from '@taquito/michelson-encoder';\nexport { MichelsonMap, UnitValue } from '@taquito/michelson-encoder';\nimport { Parser } from '@taquito/michel-codec';\nimport { encodeExpr } from '@taquito/utils';\nimport { HttpResponseError, STATUS_CODE } from '@taquito/http-utils';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\n\nvar RpcForger =\n/** @class */\nfunction () {\n  function RpcForger(context) {\n    this.context = context;\n  }\n\n  RpcForger.prototype.forge = function (_a) {\n    var branch = _a.branch,\n        contents = _a.contents;\n    return this.context.rpc.forgeOperations({\n      branch: branch,\n      contents: contents\n    });\n  };\n\n  return RpcForger;\n}();\n\nvar RpcInjector =\n/** @class */\nfunction () {\n  function RpcInjector(context) {\n    this.context = context;\n  }\n\n  RpcInjector.prototype.inject = function (signedOperationBytes) {\n    return this.context.rpc.injectOperation(signedOperationBytes);\n  };\n\n  return RpcInjector;\n}();\n\nvar UnconfiguredSignerError =\n/** @class */\nfunction () {\n  function UnconfiguredSignerError() {\n    this.name = 'UnconfiguredSignerError';\n    this.message = 'No signer has been configured. Please configure one by calling setProvider({signer}) on your TezosToolkit instance.';\n  }\n\n  return UnconfiguredSignerError;\n}();\n/**\r\n * @description Default signer implementation which does nothing and produce invalid signature\r\n */\n\n\nvar NoopSigner =\n/** @class */\nfunction () {\n  function NoopSigner() {}\n\n  NoopSigner.prototype.publicKey = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new UnconfiguredSignerError();\n      });\n    });\n  };\n\n  NoopSigner.prototype.publicKeyHash = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new UnconfiguredSignerError();\n      });\n    });\n  };\n\n  NoopSigner.prototype.secretKey = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new UnconfiguredSignerError();\n      });\n    });\n  };\n\n  NoopSigner.prototype.sign = function (_bytes, _watermark) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new UnconfiguredSignerError();\n      });\n    });\n  };\n\n  return NoopSigner;\n}();\n\nvar attachKind = function (op, kind) {\n  return __assign(__assign({}, op), {\n    kind: kind\n  });\n};\n\nvar findWithKind = function (arr, kind) {\n  if (Array.isArray(arr)) {\n    var found = arr.find(function (op) {\n      return op.kind === kind;\n    });\n\n    if (found && isKind(found, kind)) {\n      return found;\n    }\n  }\n};\n\nvar isKind = function (op, kind) {\n  return op.kind === kind;\n};\n\nvar isOpWithFee = function (op) {\n  return ['transaction', 'delegation', 'origination', 'reveal'].indexOf(op.kind) !== -1;\n};\n\nvar isOpRequireReveal = function (op) {\n  return ['transaction', 'delegation', 'origination'].indexOf(op.kind) !== -1;\n};\n\nvar hasMetadata = function (op) {\n  return 'metadata' in op;\n};\n\nvar hasMetadataWithResult = function (op) {\n  return hasMetadata(op) && 'operation_result' in op.metadata;\n};\n\nvar hasMetadataWithInternalOperationResult = function (op) {\n  return hasMetadata(op) && 'internal_operation_results' in op.metadata;\n};\n\nvar isErrorWithMessage = function (error) {\n  return 'with' in error;\n};\n\nvar TezosOperationError =\n/** @class */\nfunction () {\n  function TezosOperationError(errors) {\n    this.errors = errors;\n    this.name = 'TezosOperationError'; // Last error is 'often' the one with more detail\n\n    var lastError = errors[errors.length - 1];\n    this.id = lastError.id;\n    this.kind = lastError.kind;\n    this.message = \"(\" + this.kind + \") \" + this.id;\n\n    if (isErrorWithMessage(lastError) && lastError.with.string) {\n      this.message = lastError.with.string;\n    }\n  }\n\n  return TezosOperationError;\n}();\n\nvar TezosPreapplyFailureError =\n/** @class */\nfunction () {\n  function TezosPreapplyFailureError(result) {\n    this.result = result;\n    this.name = 'TezosPreapplyFailureError';\n    this.message = 'Preapply returned an unexpected result';\n  }\n\n  return TezosPreapplyFailureError;\n}(); // Flatten all operation content results and internal operation results into a single array\n// Some cases where we can have multiple operation results or internal operation results are:\n// - When an operation includes a reveal operation\n// - When an operation is made using the batch API\n// - Smart contract call can contains internal operation results when they call other smart contract internally or originate contracts\n\n\nvar flattenOperationResult = function (response) {\n  var results = Array.isArray(response) ? response : [response];\n  var returnedResults = [];\n\n  for (var i = 0; i < results.length; i++) {\n    for (var j = 0; j < results[i].contents.length; j++) {\n      var content = results[i].contents[j];\n\n      if (hasMetadataWithResult(content)) {\n        returnedResults.push(__assign({\n          fee: content.fee\n        }, content.metadata.operation_result));\n\n        if (Array.isArray(content.metadata.internal_operation_results)) {\n          content.metadata.internal_operation_results.forEach(function (x) {\n            return returnedResults.push(x.result);\n          });\n        }\n      }\n    }\n  }\n\n  return returnedResults;\n};\n/***\r\n * @description Flatten all error from preapply response (including internal error)\r\n */\n\n\nvar flattenErrors = function (response, status) {\n  var e_1, _a;\n\n  if (status === void 0) {\n    status = 'failed';\n  }\n\n  var results = Array.isArray(response) ? response : [response];\n  var errors = []; // Transaction that do not fail will be backtracked in case one failure occur\n\n  for (var i = 0; i < results.length; i++) {\n    for (var j = 0; j < results[i].contents.length; j++) {\n      var content = results[i].contents[j];\n\n      if (hasMetadata(content)) {\n        if (hasMetadataWithResult(content) && content.metadata.operation_result.status === status) {\n          errors = errors.concat(content.metadata.operation_result.errors || []);\n        }\n\n        if (hasMetadataWithInternalOperationResult(content) && Array.isArray(content.metadata.internal_operation_results)) {\n          try {\n            for (var _b = (e_1 = void 0, __values(content.metadata.internal_operation_results)), _c = _b.next(); !_c.done; _c = _b.next()) {\n              var internalResult = _c.value;\n\n              if ('result' in internalResult && internalResult.result.status === status) {\n                errors = errors.concat(internalResult.result.errors || []);\n              }\n            }\n          } catch (e_1_1) {\n            e_1 = {\n              error: e_1_1\n            };\n          } finally {\n            try {\n              if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return errors;\n};\n\nvar receiptFromOperation = function (op, _a) {\n  var _b = _a === void 0 ? {\n    ALLOCATION_BURN: 257,\n    ORIGINATION_BURN: 257\n  } : _a,\n      ALLOCATION_BURN = _b.ALLOCATION_BURN,\n      ORIGINATION_BURN = _b.ORIGINATION_BURN;\n\n  var operationResults = flattenOperationResult({\n    contents: op\n  });\n  var totalGas = new BigNumber(0);\n  var totalStorage = new BigNumber(0);\n  var totalFee = new BigNumber(0);\n  var totalOriginationBurn = new BigNumber(0);\n  var totalAllocationBurn = new BigNumber(0);\n  var totalPaidStorageDiff = new BigNumber(0);\n  operationResults.forEach(function (result) {\n    totalFee = totalFee.plus(result.fee || 0);\n    totalOriginationBurn = totalOriginationBurn.plus(Array.isArray(result.originated_contracts) ? result.originated_contracts.length * ORIGINATION_BURN : 0);\n    totalAllocationBurn = totalAllocationBurn.plus('allocated_destination_contract' in result ? ALLOCATION_BURN : 0);\n    totalGas = totalGas.plus(result.consumed_gas || 0);\n    totalPaidStorageDiff = totalPaidStorageDiff.plus('paid_storage_size_diff' in result ? Number(result.paid_storage_size_diff) || 0 : 0);\n  });\n  totalStorage = totalStorage.plus(totalAllocationBurn).plus(totalOriginationBurn).plus(totalPaidStorageDiff);\n  return {\n    totalFee: totalFee,\n    totalGas: totalGas,\n    totalStorage: totalStorage,\n    totalAllocationBurn: totalAllocationBurn,\n    totalOriginationBurn: totalOriginationBurn,\n    totalPaidStorageDiff: totalPaidStorageDiff,\n    totalStorageBurn: new BigNumber(totalStorage.multipliedBy(1000))\n  };\n};\n\nvar MissedBlockDuringConfirmationError =\n/** @class */\nfunction () {\n  function MissedBlockDuringConfirmationError() {\n    this.name = 'MissedBlockDuringConfirmationError';\n    this.message = 'Taquito missed a block while waiting for operation confirmation and was not able to find the operation';\n  }\n\n  return MissedBlockDuringConfirmationError;\n}();\n\nvar MAX_BRANCH_ANCESTORS = 60;\n/**\r\n * @description WalletOperation allows to monitor operation inclusion on chains and surface information related to the operation\r\n */\n\nvar WalletOperation =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param opHash Operation hash\r\n   * @param raw Raw operation that was injected\r\n   * @param context Taquito context allowing access to rpc and signer\r\n   */\n  function WalletOperation(opHash, context, _newHead$) {\n    var _this = this;\n\n    this.opHash = opHash;\n    this.context = context;\n    this._newHead$ = _newHead$;\n    this._operationResult = new ReplaySubject(1);\n    this._includedInBlock = new ReplaySubject(1);\n    this._included = false;\n    this.newHead$ = this._newHead$.pipe(tap(function (newHead) {\n      if (!_this._included && _this.lastHead && newHead.header.level - _this.lastHead.header.level > 1) {\n        throw new MissedBlockDuringConfirmationError();\n      }\n\n      _this.lastHead = newHead;\n    }), shareReplay({\n      bufferSize: 1,\n      refCount: true\n    })); // Observable that emit once operation is seen in a block\n\n    this.confirmed$ = this.newHead$.pipe(map(function (head) {\n      var e_1, _a, e_2, _b;\n\n      try {\n        for (var _c = __values(head.operations), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var opGroup = _d.value;\n\n          try {\n            for (var opGroup_1 = (e_2 = void 0, __values(opGroup)), opGroup_1_1 = opGroup_1.next(); !opGroup_1_1.done; opGroup_1_1 = opGroup_1.next()) {\n              var op = opGroup_1_1.value;\n\n              if (op.hash === _this.opHash) {\n                _this._included = true;\n\n                _this._includedInBlock.next(head);\n\n                _this._operationResult.next(op.contents); // Return the block where the operation was found\n\n\n                return head;\n              }\n            }\n          } catch (e_2_1) {\n            e_2 = {\n              error: e_2_1\n            };\n          } finally {\n            try {\n              if (opGroup_1_1 && !opGroup_1_1.done && (_b = opGroup_1.return)) _b.call(opGroup_1);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }), filter(function (x) {\n      return typeof x !== 'undefined';\n    }), first(), shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n    this.confirmed$.pipe(first()).subscribe();\n  }\n\n  WalletOperation.prototype.operationResults = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this._operationResult.pipe(first()).toPromise()];\n      });\n    });\n  };\n  /**\r\n   * @description Receipt expose the total amount of tezos token burn and spent on fees\r\n   * The promise returned by receipt will resolve only once the transaction is included\r\n   */\n\n\n  WalletOperation.prototype.receipt = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = receiptFromOperation;\n            return [4\n            /*yield*/\n            , this.operationResults()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.apply(void 0, [_b.sent()])];\n        }\n      });\n    });\n  };\n\n  WalletOperation.prototype.getCurrentConfirmation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!this._included) {\n          return [2\n          /*return*/\n          , 0];\n        }\n\n        return [2\n        /*return*/\n        , combineLatest([this._includedInBlock, from(this.context.rpc.getBlock())]).pipe(map(function (_a) {\n          var _b = __read(_a, 2),\n              foundAtBlock = _b[0],\n              head = _b[1];\n\n          return head.header.level - foundAtBlock.header.level + 1;\n        }), first()).toPromise()];\n      });\n    });\n  };\n\n  WalletOperation.prototype.isInCurrentBranch = function (tipBlockIdentifier) {\n    if (tipBlockIdentifier === void 0) {\n      tipBlockIdentifier = 'head';\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var tipBlockHeader, inclusionBlock, levelDiff, tipBlockLevel, blocks, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            // By default it is assumed that the operation is in the current branch\n            if (!this._included) {\n              return [2\n              /*return*/\n              , true];\n            }\n\n            return [4\n            /*yield*/\n            , this.context.rpc.getBlockHeader({\n              block: tipBlockIdentifier\n            })];\n\n          case 1:\n            tipBlockHeader = _b.sent();\n            return [4\n            /*yield*/\n            , this._includedInBlock.pipe(first()).toPromise()];\n\n          case 2:\n            inclusionBlock = _b.sent();\n            levelDiff = tipBlockHeader.level - inclusionBlock.header.level; // Block produced before the operation is included are assumed to be part of the current branch\n\n            if (levelDiff <= 0) {\n              return [2\n              /*return*/\n              , true];\n            }\n\n            tipBlockLevel = Math.min(inclusionBlock.header.level + levelDiff, inclusionBlock.header.level + MAX_BRANCH_ANCESTORS);\n            _a = Set.bind;\n            return [4\n            /*yield*/\n            , this.context.rpc.getLiveBlocks({\n              block: String(tipBlockLevel)\n            })];\n\n          case 3:\n            blocks = new (_a.apply(Set, [void 0, _b.sent()]))();\n            return [2\n            /*return*/\n            , blocks.has(inclusionBlock.hash)];\n        }\n      });\n    });\n  };\n\n  WalletOperation.prototype.confirmationObservable = function (confirmations) {\n    var _this = this;\n\n    if (typeof confirmations !== 'undefined' && confirmations < 1) {\n      throw new Error('Confirmation count must be at least 1');\n    }\n\n    var defaultConfirmationCount = this.context.config.defaultConfirmationCount;\n    var conf = confirmations !== undefined ? confirmations : defaultConfirmationCount;\n    return combineLatest([this._includedInBlock, this.newHead$]).pipe(distinctUntilChanged(function (_a, _b) {\n      var _c = __read(_a, 2),\n          previousHead = _c[1];\n\n      var _d = __read(_b, 2),\n          newHead = _d[1];\n\n      return previousHead.hash === newHead.hash;\n    }), map(function (_a) {\n      var _b = __read(_a, 2),\n          foundAtBlock = _b[0],\n          head = _b[1];\n\n      return {\n        block: head,\n        expectedConfirmation: conf,\n        currentConfirmation: head.header.level - foundAtBlock.header.level + 1,\n        completed: head.header.level - foundAtBlock.header.level >= conf - 1,\n        isInCurrentBranch: function () {\n          return _this.isInCurrentBranch(head.hash);\n        }\n      };\n    }), takeWhile(function (_a) {\n      var completed = _a.completed;\n      return !completed;\n    }, true));\n  };\n  /**\r\n   *\r\n   * @param confirmations [0] Number of confirmation to wait for\r\n   */\n\n\n  WalletOperation.prototype.confirmation = function (confirmations) {\n    return this.confirmationObservable(confirmations).toPromise();\n  };\n\n  return WalletOperation;\n}();\n\nvar DelegationWalletOperation =\n/** @class */\nfunction (_super) {\n  __extends(DelegationWalletOperation, _super);\n\n  function DelegationWalletOperation(opHash, context, newHead$) {\n    var _this = _super.call(this, opHash, context, newHead$) || this;\n\n    _this.opHash = opHash;\n    _this.context = context;\n    return _this;\n  }\n\n  DelegationWalletOperation.prototype.revealOperation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var operationResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.operationResults()];\n\n          case 1:\n            operationResult = _a.sent();\n            return [2\n            /*return*/\n            , operationResult.find(function (x) {\n              return x.kind === OpKind.REVEAL;\n            })];\n        }\n      });\n    });\n  };\n\n  DelegationWalletOperation.prototype.delegationOperation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var operationResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.operationResults()];\n\n          case 1:\n            operationResult = _a.sent();\n            return [2\n            /*return*/\n            , operationResult.find(function (x) {\n              return x.kind === OpKind.DELEGATION;\n            })];\n        }\n      });\n    });\n  };\n\n  DelegationWalletOperation.prototype.status = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var op;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._included) {\n              return [2\n              /*return*/\n              , 'pending'];\n            }\n\n            return [4\n            /*yield*/\n            , this.delegationOperation()];\n\n          case 1:\n            op = _a.sent();\n\n            if (!op) {\n              return [2\n              /*return*/\n              , 'unknown'];\n            }\n\n            return [2\n            /*return*/\n            , op.metadata.operation_result.status];\n        }\n      });\n    });\n  };\n\n  return DelegationWalletOperation;\n}(WalletOperation);\n\nvar OriginationWalletOperation =\n/** @class */\nfunction (_super) {\n  __extends(OriginationWalletOperation, _super);\n\n  function OriginationWalletOperation(opHash, context, newHead$) {\n    var _this = _super.call(this, opHash, context, newHead$) || this;\n\n    _this.opHash = opHash;\n    _this.context = context;\n    return _this;\n  }\n\n  OriginationWalletOperation.prototype.originationOperation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var operationResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.operationResults()];\n\n          case 1:\n            operationResult = _a.sent();\n            return [2\n            /*return*/\n            , findWithKind(operationResult, OpKind.ORIGINATION)];\n        }\n      });\n    });\n  };\n\n  OriginationWalletOperation.prototype.revealOperation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var operationResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.operationResults()];\n\n          case 1:\n            operationResult = _a.sent();\n            return [2\n            /*return*/\n            , findWithKind(operationResult, OpKind.REVEAL)];\n        }\n      });\n    });\n  };\n\n  OriginationWalletOperation.prototype.status = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var op;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._included) {\n              return [2\n              /*return*/\n              , 'pending'];\n            }\n\n            return [4\n            /*yield*/\n            , this.originationOperation()];\n\n          case 1:\n            op = _a.sent();\n\n            if (!op) {\n              return [2\n              /*return*/\n              , 'unknown'];\n            }\n\n            return [2\n            /*return*/\n            , op.metadata.operation_result.status];\n        }\n      });\n    });\n  };\n\n  OriginationWalletOperation.prototype.contract = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var op, address;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.originationOperation()];\n\n          case 1:\n            op = _a.sent();\n            address = (op.metadata.operation_result.originated_contracts || [])[0];\n            return [2\n            /*return*/\n            , this.context.wallet.at(address)];\n        }\n      });\n    });\n  };\n\n  return OriginationWalletOperation;\n}(WalletOperation);\n\nvar TransactionWalletOperation =\n/** @class */\nfunction (_super) {\n  __extends(TransactionWalletOperation, _super);\n\n  function TransactionWalletOperation(opHash, context, newHead$) {\n    var _this = _super.call(this, opHash, context, newHead$) || this;\n\n    _this.opHash = opHash;\n    _this.context = context;\n    return _this;\n  }\n\n  TransactionWalletOperation.prototype.revealOperation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var operationResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.operationResults()];\n\n          case 1:\n            operationResult = _a.sent();\n            return [2\n            /*return*/\n            , operationResult.find(function (x) {\n              return x.kind === OpKind.REVEAL;\n            })];\n        }\n      });\n    });\n  };\n\n  TransactionWalletOperation.prototype.transactionOperation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var operationResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.operationResults()];\n\n          case 1:\n            operationResult = _a.sent();\n            return [2\n            /*return*/\n            , operationResult.find(function (x) {\n              return x.kind === OpKind.TRANSACTION;\n            })];\n        }\n      });\n    });\n  };\n\n  TransactionWalletOperation.prototype.status = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var op;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._included) {\n              return [2\n              /*return*/\n              , 'pending'];\n            }\n\n            return [4\n            /*yield*/\n            , this.transactionOperation()];\n\n          case 1:\n            op = _a.sent();\n\n            if (!op) {\n              return [2\n              /*return*/\n              , 'unknown'];\n            }\n\n            return [2\n            /*return*/\n            , op.metadata.operation_result.status];\n        }\n      });\n    });\n  };\n\n  return TransactionWalletOperation;\n}(WalletOperation);\n\nvar cacheUntil = function (cacheUntilObs) {\n  return function (source) {\n    var subject = null;\n    return defer(function () {\n      if (!subject) {\n        subject = new ReplaySubject();\n        source.pipe(first()).subscribe(subject);\n        cacheUntilObs.pipe(first()).subscribe(function () {\n          subject = null;\n        });\n      }\n\n      return subject;\n    });\n  };\n};\n\nvar createNewPollingBasedHeadObservable = function (pollingTimer, sharedHeadOb, context, scheduler) {\n  return pollingTimer.pipe(switchMap(function () {\n    return sharedHeadOb;\n  }), distinctUntilKeyChanged('hash'), timeoutWith(context.config.confirmationPollingTimeoutSecond * 1000, throwError(new Error('Confirmation polling timed out')), scheduler), shareReplay({\n    refCount: true,\n    scheduler: scheduler\n  }));\n};\n\nvar OperationFactory =\n/** @class */\nfunction () {\n  function OperationFactory(context) {\n    var _this = this;\n\n    this.context = context; // Cache the last block for one second across all operations\n\n    this.sharedHeadObs = defer(function () {\n      return from(_this.context.rpc.getBlock());\n    }).pipe(cacheUntil(timer(0, 1000)));\n  }\n\n  OperationFactory.prototype.createNewHeadObservable = function () {\n    return createNewPollingBasedHeadObservable(timer(0, this.context.config.confirmationPollingIntervalSecond * 1000), this.sharedHeadObs, this.context);\n  };\n\n  OperationFactory.prototype.createPastBlockWalker = function (startBlock, count) {\n    var _this = this;\n\n    if (count === void 0) {\n      count = 1;\n    }\n\n    return from(this.context.rpc.getBlock({\n      block: startBlock\n    })).pipe(switchMap(function (block) {\n      if (count === 1) {\n        return of(block);\n      }\n\n      return range(block.header.level, count - 1).pipe(startWith(block), concatMap(function (level) {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            return [2\n            /*return*/\n            , this.context.rpc.getBlock({\n              block: String(level)\n            })];\n          });\n        });\n      }));\n    }));\n  };\n\n  OperationFactory.prototype.createHeadObservableFromConfig = function (_a) {\n    var blockIdentifier = _a.blockIdentifier;\n    var observableSequence = [];\n\n    if (blockIdentifier) {\n      observableSequence.push(this.createPastBlockWalker(blockIdentifier));\n    }\n\n    observableSequence.push(this.createNewHeadObservable());\n    return concat.apply(void 0, __spread(observableSequence));\n  };\n\n  OperationFactory.prototype.createOperation = function (hash, config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    return new WalletOperation(hash, this.context.clone(), this.createHeadObservableFromConfig(config));\n  };\n\n  OperationFactory.prototype.createTransactionOperation = function (hash, config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    return new TransactionWalletOperation(hash, this.context.clone(), this.createHeadObservableFromConfig(config));\n  };\n\n  OperationFactory.prototype.createDelegationOperation = function (hash, config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    return new DelegationWalletOperation(hash, this.context.clone(), this.createHeadObservableFromConfig(config));\n  };\n\n  OperationFactory.prototype.createOriginationOperation = function (hash, config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    return new OriginationWalletOperation(hash, this.context.clone(), this.createHeadObservableFromConfig(config));\n  };\n\n  return OperationFactory;\n}();\n\nvar DEFAULT_GAS_LIMIT;\n\n(function (DEFAULT_GAS_LIMIT) {\n  DEFAULT_GAS_LIMIT[DEFAULT_GAS_LIMIT[\"DELEGATION\"] = 10600] = \"DELEGATION\";\n  DEFAULT_GAS_LIMIT[DEFAULT_GAS_LIMIT[\"ORIGINATION\"] = 10600] = \"ORIGINATION\";\n  DEFAULT_GAS_LIMIT[DEFAULT_GAS_LIMIT[\"TRANSFER\"] = 10600] = \"TRANSFER\";\n  DEFAULT_GAS_LIMIT[DEFAULT_GAS_LIMIT[\"REVEAL\"] = 10600] = \"REVEAL\";\n})(DEFAULT_GAS_LIMIT || (DEFAULT_GAS_LIMIT = {}));\n\nvar DEFAULT_FEE;\n\n(function (DEFAULT_FEE) {\n  DEFAULT_FEE[DEFAULT_FEE[\"DELEGATION\"] = 1257] = \"DELEGATION\";\n  DEFAULT_FEE[DEFAULT_FEE[\"ORIGINATION\"] = 10000] = \"ORIGINATION\";\n  DEFAULT_FEE[DEFAULT_FEE[\"TRANSFER\"] = 10000] = \"TRANSFER\";\n  DEFAULT_FEE[DEFAULT_FEE[\"REVEAL\"] = 1420] = \"REVEAL\";\n})(DEFAULT_FEE || (DEFAULT_FEE = {}));\n\nvar DEFAULT_STORAGE_LIMIT;\n\n(function (DEFAULT_STORAGE_LIMIT) {\n  DEFAULT_STORAGE_LIMIT[DEFAULT_STORAGE_LIMIT[\"DELEGATION\"] = 0] = \"DELEGATION\";\n  DEFAULT_STORAGE_LIMIT[DEFAULT_STORAGE_LIMIT[\"ORIGINATION\"] = 257] = \"ORIGINATION\";\n  DEFAULT_STORAGE_LIMIT[DEFAULT_STORAGE_LIMIT[\"TRANSFER\"] = 257] = \"TRANSFER\";\n  DEFAULT_STORAGE_LIMIT[DEFAULT_STORAGE_LIMIT[\"REVEAL\"] = 0] = \"REVEAL\";\n})(DEFAULT_STORAGE_LIMIT || (DEFAULT_STORAGE_LIMIT = {}));\n\nvar Protocols;\n\n(function (Protocols) {\n  Protocols[\"Pt24m4xi\"] = \"Pt24m4xiPbLDhVgVfABUjirbmda3yohdN82Sp9FeuAXJ4eV9otd\";\n  Protocols[\"PsBABY5H\"] = \"PsBABY5HQTSkA4297zNHfsZNKtxULfL18y95qb3m53QJiXGmrbU\";\n  Protocols[\"PsBabyM1\"] = \"PsBabyM1eUXZseaJdmXFApDSBqj8YBfwELoxZHHW77EMcAbbwAS\";\n  Protocols[\"PsCARTHA\"] = \"PsCARTHAGazKbHtnKfLzQg3kms52kSRpgnDY982a9oYsSXRLQEb\";\n  Protocols[\"PsDELPH1\"] = \"PsDELPH1Kxsxt8f9eWbxQeRxkjfbxoqM52jvs5Y5fBxWWh4ifpo\";\n})(Protocols || (Protocols = {}));\n\nvar protocols = {\n  '004': [Protocols.Pt24m4xi],\n  '005': [Protocols.PsBABY5H, Protocols.PsBabyM1],\n  '006': [Protocols.PsCARTHA],\n  '007': [Protocols.PsDELPH1]\n};\nvar DefaultLambdaAddresses;\n\n(function (DefaultLambdaAddresses) {\n  DefaultLambdaAddresses[\"MAINNET\"] = \"KT1CPuTzwC7h7uLXd5WQmpMFso1HxrLBUtpE\";\n  DefaultLambdaAddresses[\"CARTHAGENET\"] = \"KT1VAy1o1FGiXYfD3YT7x7k5eF5HSHhmc1u6\";\n  DefaultLambdaAddresses[\"DELPHINET\"] = \"KT19abMFs3haqyKYwqdLjK9GbtofryZLvpiK\";\n})(DefaultLambdaAddresses || (DefaultLambdaAddresses = {}));\n\nvar ChainIds;\n\n(function (ChainIds) {\n  ChainIds[\"MAINNET\"] = \"NetXdQprcVkpaWU\";\n  ChainIds[\"CARTHAGENET\"] = \"NetXjD3HPJJjmcd\";\n  ChainIds[\"DELPHINET\"] = \"NetXm8tYqnMWky1\";\n})(ChainIds || (ChainIds = {}));\n\nvar OperationEmitter =\n/** @class */\nfunction () {\n  function OperationEmitter(context) {\n    this.context = context;\n  }\n\n  Object.defineProperty(OperationEmitter.prototype, \"rpc\", {\n    get: function () {\n      return this.context.rpc;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OperationEmitter.prototype, \"signer\", {\n    get: function () {\n      return this.context.signer;\n    },\n    enumerable: false,\n    configurable: true\n  }); // Originally from sotez (Copyright (c) 2018 Andrew Kishino)\n\n  OperationEmitter.prototype.prepareOperation = function (_a) {\n    var operation = _a.operation,\n        source = _a.source;\n    return __awaiter(this, void 0, void 0, function () {\n      var counter, counters, requiresReveal, ops, head, blockHeaderPromise, blockMetaPromise, publicKeyHash, counterPromise, managerPromise, i, counter_1, _b, header, metadata, headCounter, manager, haveManager, reveal, getFee, getSource, constructOps, branch, contents, protocol;\n\n      var _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            counters = {};\n            requiresReveal = false;\n            ops = [];\n            blockHeaderPromise = this.rpc.getBlockHeader();\n            blockMetaPromise = this.rpc.getBlockMetadata();\n\n            if (Array.isArray(operation)) {\n              ops = __spread(operation);\n            } else {\n              ops = [operation];\n            }\n\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 1:\n            publicKeyHash = _d.sent();\n            counterPromise = Promise.resolve(undefined);\n            managerPromise = Promise.resolve(undefined);\n            i = 0;\n            _d.label = 2;\n\n          case 2:\n            if (!(i < ops.length)) return [3\n            /*break*/\n            , 5];\n            if (!isOpRequireReveal(ops[i])) return [3\n            /*break*/\n            , 4];\n            requiresReveal = true;\n            return [4\n            /*yield*/\n            , this.rpc.getContract(publicKeyHash)];\n\n          case 3:\n            counter_1 = _d.sent().counter;\n            counterPromise = Promise.resolve(counter_1);\n            managerPromise = this.rpc.getManagerKey(publicKeyHash);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            i++;\n            return [3\n            /*break*/\n            , 2];\n\n          case 5:\n            return [4\n            /*yield*/\n            , Promise.all([blockHeaderPromise, blockMetaPromise, counterPromise, managerPromise])];\n\n          case 6:\n            _b = __read.apply(void 0, [_d.sent(), 4]), header = _b[0], metadata = _b[1], headCounter = _b[2], manager = _b[3];\n\n            if (!header) {\n              throw new Error('Unable to fetch latest block header');\n            }\n\n            if (!metadata) {\n              throw new Error('Unable to fetch latest metadata');\n            }\n\n            head = header;\n            if (!requiresReveal) return [3\n            /*break*/\n            , 8];\n            haveManager = manager && typeof manager === 'object' ? !!manager.key : !!manager;\n            if (!!haveManager) return [3\n            /*break*/\n            , 8];\n            _c = {\n              kind: OpKind.REVEAL,\n              fee: DEFAULT_FEE.REVEAL\n            };\n            return [4\n            /*yield*/\n            , this.signer.publicKey()];\n\n          case 7:\n            reveal = (_c.public_key = _d.sent(), _c.source = publicKeyHash, _c.gas_limit = DEFAULT_GAS_LIMIT.REVEAL, _c.storage_limit = DEFAULT_STORAGE_LIMIT.REVEAL, _c);\n            ops.unshift(reveal);\n            _d.label = 8;\n\n          case 8:\n            counter = parseInt(headCounter || '0', 10);\n\n            if (!counters[publicKeyHash] || counters[publicKeyHash] < counter) {\n              counters[publicKeyHash] = counter;\n            }\n\n            getFee = function (op) {\n              var opCounter = ++counters[publicKeyHash];\n              return {\n                counter: \"\" + opCounter,\n                // tslint:disable-next-line: strict-type-predicates\n                fee: typeof op.fee === 'undefined' ? '0' : \"\" + op.fee,\n                // tslint:disable-next-line: strict-type-predicates\n                gas_limit: typeof op.gas_limit === 'undefined' ? '0' : \"\" + op.gas_limit,\n                // tslint:disable-next-line: strict-type-predicates\n                storage_limit: typeof op.storage_limit === 'undefined' ? '0' : \"\" + op.storage_limit\n              };\n            };\n\n            getSource = function (op) {\n              return {\n                source: typeof op.source === 'undefined' ? source || publicKeyHash : op.source\n              };\n            };\n\n            constructOps = function (cOps) {\n              // tslint:disable strict-type-predicates\n              return cOps.map(function (op) {\n                switch (op.kind) {\n                  case OpKind.ACTIVATION:\n                    return __assign({}, op);\n\n                  case OpKind.REVEAL:\n                    return __assign(__assign(__assign({}, op), getSource(op)), getFee(op));\n\n                  case OpKind.ORIGINATION:\n                    return __assign(__assign(__assign(__assign({}, op), {\n                      balance: typeof op.balance !== 'undefined' ? \"\" + op.balance : '0'\n                    }), getSource(op)), getFee(op));\n\n                  case OpKind.TRANSACTION:\n                    var cops = __assign(__assign(__assign(__assign({}, op), {\n                      amount: typeof op.amount !== 'undefined' ? \"\" + op.amount : '0'\n                    }), getSource(op)), getFee(op));\n\n                    if (cops.source.toLowerCase().startsWith('kt1')) {\n                      throw new Error(\"KT1 addresses are not supported as source since \" + Protocols.PsBabyM1);\n                    }\n\n                    return cops;\n\n                  case OpKind.DELEGATION:\n                    return __assign(__assign(__assign({}, op), getSource(op)), getFee(op));\n\n                  default:\n                    throw new Error('Unsupported operation');\n                }\n              });\n            };\n\n            branch = head.hash;\n            contents = constructOps(ops);\n            protocol = metadata.next_protocol;\n            return [2\n            /*return*/\n            , {\n              opOb: {\n                branch: branch,\n                contents: contents,\n                protocol: protocol\n              },\n              counter: counter\n            }];\n        }\n      });\n    });\n  };\n\n  OperationEmitter.prototype.prepareAndForge = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var prepared;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.prepareOperation(params)];\n\n          case 1:\n            prepared = _a.sent();\n            return [2\n            /*return*/\n            , this.forge(prepared)];\n        }\n      });\n    });\n  };\n\n  OperationEmitter.prototype.forge = function (_a) {\n    var _b = _a.opOb,\n        branch = _b.branch,\n        contents = _b.contents,\n        protocol = _b.protocol,\n        counter = _a.counter;\n    return __awaiter(this, void 0, void 0, function () {\n      var forgedBytes;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.context.forger.forge({\n              branch: branch,\n              contents: contents\n            })];\n\n          case 1:\n            forgedBytes = _c.sent();\n            return [2\n            /*return*/\n            , {\n              opbytes: forgedBytes,\n              opOb: {\n                branch: branch,\n                contents: contents,\n                protocol: protocol\n              },\n              counter: counter\n            }];\n        }\n      });\n    });\n  };\n\n  OperationEmitter.prototype.simulate = function (op) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = {};\n            return [4\n            /*yield*/\n            , this.rpc.runOperation(op)];\n\n          case 1:\n            return [2\n            /*return*/\n            , (_a.opResponse = _b.sent(), _a.op = op, _a.context = this.context.clone(), _a)];\n        }\n      });\n    });\n  };\n\n  OperationEmitter.prototype.estimate = function (_a, estimator) {\n    var fee = _a.fee,\n        gasLimit = _a.gasLimit,\n        storageLimit = _a.storageLimit,\n        rest = __rest(_a, [\"fee\", \"gasLimit\", \"storageLimit\"]);\n\n    return __awaiter(this, void 0, void 0, function () {\n      var calculatedFee, calculatedGas, calculatedStorage, estimation;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            calculatedFee = fee;\n            calculatedGas = gasLimit;\n            calculatedStorage = storageLimit;\n            if (!(fee === undefined || gasLimit === undefined || storageLimit === undefined)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , estimator(__assign({\n              fee: fee,\n              gasLimit: gasLimit,\n              storageLimit: storageLimit\n            }, rest))];\n\n          case 1:\n            estimation = _b.sent();\n\n            if (calculatedFee === undefined) {\n              calculatedFee = estimation.suggestedFeeMutez;\n            }\n\n            if (calculatedGas === undefined) {\n              calculatedGas = estimation.gasLimit;\n            }\n\n            if (calculatedStorage === undefined) {\n              calculatedStorage = estimation.storageLimit;\n            }\n\n            _b.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , {\n              fee: calculatedFee,\n              gasLimit: calculatedGas,\n              storageLimit: calculatedStorage\n            }];\n        }\n      });\n    });\n  };\n\n  OperationEmitter.prototype.signAndInject = function (forgedBytes) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signed, opResponse, results, i, j, errors;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.signer.sign(forgedBytes.opbytes, new Uint8Array([3]))];\n\n          case 1:\n            signed = _b.sent();\n            forgedBytes.opbytes = signed.sbytes;\n            forgedBytes.opOb.signature = signed.prefixSig;\n            opResponse = [];\n            return [4\n            /*yield*/\n            , this.rpc.preapplyOperations([forgedBytes.opOb])];\n\n          case 2:\n            results = _b.sent();\n\n            if (!Array.isArray(results)) {\n              throw new TezosPreapplyFailureError(results);\n            }\n\n            for (i = 0; i < results.length; i++) {\n              for (j = 0; j < results[i].contents.length; j++) {\n                opResponse.push(results[i].contents[j]);\n              }\n            }\n\n            errors = flattenErrors(results);\n\n            if (errors.length) {\n              // @ts-ignore\n              throw new TezosOperationError(errors);\n            }\n\n            _a = {};\n            return [4\n            /*yield*/\n            , this.context.injector.inject(forgedBytes.opbytes)];\n\n          case 3:\n            return [2\n            /*return*/\n            , (_a.hash = _b.sent(), _a.forgedBytes = forgedBytes, _a.opResponse = opResponse, _a.context = this.context.clone(), _a)];\n        }\n      });\n    });\n  };\n\n  return OperationEmitter;\n}();\n/**\r\n * @description Utility class to interact with Tezos operations\r\n */\n\n\nvar Operation =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param hash Operation hash\r\n   * @param raw Raw operation that was injected\r\n   * @param context Taquito context allowing access to rpc and signer\r\n   */\n  function Operation(hash, raw, results, context) {\n    var _this = this;\n\n    this.hash = hash;\n    this.raw = raw;\n    this.results = results;\n    this.context = context;\n    this._pollingConfig$ = new ReplaySubject(1);\n    this._currentHeadPromise = undefined; // Caching the current head for one second\n\n    this.currentHead$ = defer(function () {\n      if (!_this._currentHeadPromise) {\n        _this._currentHeadPromise = _this.context.rpc.getBlock();\n        timer(1000).pipe(first()).subscribe(function () {\n          _this._currentHeadPromise = undefined;\n        });\n      }\n\n      return from(_this._currentHeadPromise);\n    }); // Polling observable that emit until timeout is reached\n\n    this.polling$ = defer(function () {\n      return _this._pollingConfig$.pipe(tap(function (_a) {\n        var timeout = _a.timeout,\n            interval = _a.interval;\n\n        if (timeout <= 0) {\n          throw new Error('Timeout must be more than 0');\n        }\n\n        if (interval <= 0) {\n          throw new Error('Interval must be more than 0');\n        }\n      }), map(function (config) {\n        return __assign(__assign({}, config), {\n          timeoutAt: Math.ceil(config.timeout / config.interval) + 1,\n          count: 0\n        });\n      }), switchMap(function (config) {\n        return timer(0, config.interval * 1000).pipe(mapTo(config));\n      }), tap(function (config) {\n        config.count++;\n\n        if (config.count > config.timeoutAt) {\n          throw new Error(\"Confirmation polling timed out\");\n        }\n      }));\n    }); // Observable that emit once operation is seen in a block\n\n    this.confirmed$ = this.polling$.pipe(switchMapTo(this.currentHead$), map(function (head) {\n      for (var i = 3; i >= 0; i--) {\n        head.operations[i].forEach(function (op) {\n          if (op.hash === _this.hash) {\n            _this._foundAt = head.header.level;\n          }\n        });\n      }\n\n      if (head.header.level - _this._foundAt >= 0) {\n        return _this._foundAt;\n      }\n    }), filter(function (x) {\n      return x !== undefined;\n    }), first(), shareReplay());\n    this._foundAt = Number.POSITIVE_INFINITY;\n    this.confirmed$.pipe(first()).subscribe();\n  }\n\n  Object.defineProperty(Operation.prototype, \"includedInBlock\", {\n    get: function () {\n      return this._foundAt;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Operation.prototype, \"revealOperation\", {\n    get: function () {\n      return Array.isArray(this.results) && this.results.find(function (op) {\n        return op.kind === 'reveal';\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Operation.prototype, \"revealStatus\", {\n    get: function () {\n      if (this.revealOperation) {\n        return this.revealOperation.metadata.operation_result.status;\n      } else {\n        return 'unknown';\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Operation.prototype, \"status\", {\n    get: function () {\n      return this.results.map(function (result) {\n        if (hasMetadataWithResult(result)) {\n          return result.metadata.operation_result.status;\n        } else {\n          return 'unknown';\n        }\n      })[0] || 'unknown';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   *\r\n   * @param confirmations [0] Number of confirmation to wait for\r\n   * @param interval [10] Polling interval\r\n   * @param timeout [180] Timeout\r\n   */\n\n  Operation.prototype.confirmation = function (confirmations, interval, timeout) {\n    var _this = this;\n\n    if (typeof confirmations !== 'undefined' && confirmations < 1) {\n      throw new Error('Confirmation count must be at least 1');\n    }\n\n    var _a = this.context.config,\n        defaultConfirmationCount = _a.defaultConfirmationCount,\n        confirmationPollingIntervalSecond = _a.confirmationPollingIntervalSecond,\n        confirmationPollingTimeoutSecond = _a.confirmationPollingTimeoutSecond;\n\n    this._pollingConfig$.next({\n      interval: interval || confirmationPollingIntervalSecond,\n      timeout: timeout || confirmationPollingTimeoutSecond\n    });\n\n    var conf = confirmations !== undefined ? confirmations : defaultConfirmationCount;\n    return new Promise(function (resolve, reject) {\n      _this.confirmed$.pipe(switchMap(function () {\n        return _this.polling$;\n      }), switchMap(function () {\n        return _this.currentHead$;\n      }), filter(function (head) {\n        return head.header.level - _this._foundAt >= conf - 1;\n      }), first()).subscribe(function (_) {\n        resolve(_this._foundAt + (conf - 1));\n      }, reject);\n    });\n  };\n\n  return Operation;\n}();\n\nvar RpcTzProvider =\n/** @class */\nfunction (_super) {\n  __extends(RpcTzProvider, _super);\n\n  function RpcTzProvider(context) {\n    return _super.call(this, context) || this;\n  }\n\n  RpcTzProvider.prototype.getBalance = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.rpc.getBalance(address)];\n      });\n    });\n  };\n\n  RpcTzProvider.prototype.getDelegate = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.rpc.getDelegate(address)];\n      });\n    });\n  };\n\n  RpcTzProvider.prototype.activate = function (pkh, secret) {\n    return __awaiter(this, void 0, void 0, function () {\n      var operation, forgedBytes, bytes, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            operation = {\n              kind: OpKind.ACTIVATION,\n              pkh: pkh,\n              secret: secret\n            };\n            return [4\n            /*yield*/\n            , this.prepareAndForge({\n              operation: [operation],\n              source: pkh\n            })];\n\n          case 1:\n            forgedBytes = _b.sent();\n            bytes = forgedBytes.opbytes + \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\";\n            _a = Operation.bind;\n            return [4\n            /*yield*/\n            , this.rpc.injectOperation(bytes)];\n\n          case 2:\n            return [2\n            /*return*/\n            , new (_a.apply(Operation, [void 0, _b.sent(), __assign(__assign({}, forgedBytes), {\n              opbytes: bytes\n            }), [], this.context.clone()]))()];\n        }\n      });\n    });\n  };\n\n  return RpcTzProvider;\n}(OperationEmitter);\n\nvar MINIMAL_FEE_MUTEZ = 100;\nvar MINIMAL_FEE_PER_BYTE_MUTEZ = 1;\nvar MINIMAL_FEE_PER_GAS_MUTEZ = 0.1;\nvar GAS_BUFFER = 100;\n/**\r\n * Examples of use :\r\n *\r\n *  Estimate a transfer operation :\r\n * ```\r\n * // Assuming that provider and signer are already configured...\r\n *\r\n * const amount = 2;\r\n * const address = 'tz1h3rQ8wBxFd8L9B3d7Jhaawu6Z568XU3xY';\r\n *\r\n * // Estimate gasLimit, storageLimit and fees for a transfer operation\r\n * const est = await Tezos.estimate.transfer({ to: address, amount: amount })\r\n * console.log(est.burnFeeMutez, est.gasLimit, est.minimalFeeMutez, est.storageLimit,\r\n *  est.suggestedFeeMutez, est.totalCost, est.usingBaseFeeMutez)\r\n *\r\n * ```\r\n *\r\n * Estimate a contract origination :\r\n * ```\r\n * // generic.json is referring to a Michelson Smart Contract\r\n *\r\n * const genericMultisigJSON = require('./generic.json')\r\n * const est = await Tezos.estimate.originate({\r\n *   code: genericMultisigJSON,\r\n *   storage: {\r\n *     stored_counter: 0,\r\n *     threshold: 1,\r\n *     keys: ['edpkuLxx9PQD8fZ45eUzrK3BhfDZJHhBuK4Zi49DcEGANwd2rpX82t']\r\n *   }\r\n * })\r\n * console.log(est.burnFeeMutez, est.gasLimit, est.minimalFeeMutez, est.storageLimit,\r\n *   est.suggestedFeeMutez, est.totalCost, est.usingBaseFeeMutez)\r\n *\r\n * ```\r\n */\n\nvar Estimate =\n/** @class */\nfunction () {\n  function Estimate(_milligasLimit, _storageLimit, opSize, minimalFeePerStorageByteMutez,\n  /**\r\n   * @description Base fee in mutez (1 mutez = 1e10−6 tez)\r\n   */\n  baseFeeMutez) {\n    if (baseFeeMutez === void 0) {\n      baseFeeMutez = MINIMAL_FEE_MUTEZ;\n    }\n\n    this._milligasLimit = _milligasLimit;\n    this._storageLimit = _storageLimit;\n    this.opSize = opSize;\n    this.minimalFeePerStorageByteMutez = minimalFeePerStorageByteMutez;\n    this.baseFeeMutez = baseFeeMutez;\n  }\n\n  Object.defineProperty(Estimate.prototype, \"burnFeeMutez\", {\n    /**\r\n     * @description The number of Mutez that will be burned for the storage of the [operation](https://tezos.gitlab.io/user/glossary.html#operations). (Storage + Allocation fees)\r\n     */\n    get: function () {\n      return this.roundUp(Number(this.storageLimit) * Number(this.minimalFeePerStorageByteMutez));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Estimate.prototype, \"storageLimit\", {\n    /**\r\n     * @description  The limit on the amount of storage an [operation](https://tezos.gitlab.io/user/glossary.html#operations) can use.\r\n     */\n    get: function () {\n      var limit = Math.max(Number(this._storageLimit), 0);\n      return limit > 0 ? limit : 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Estimate.prototype, \"gasLimit\", {\n    /**\r\n     * @description The limit on the amount of [gas](https://tezos.gitlab.io/user/glossary.html#gas) a given operation can consume.\r\n     */\n    get: function () {\n      return this.roundUp(Number(this._milligasLimit) / 1000 + GAS_BUFFER);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Estimate.prototype, \"operationFeeMutez\", {\n    get: function () {\n      return (Number(this._milligasLimit) / 1000 + GAS_BUFFER) * MINIMAL_FEE_PER_GAS_MUTEZ + Number(this.opSize) * MINIMAL_FEE_PER_BYTE_MUTEZ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Estimate.prototype.roundUp = function (nanotez) {\n    return Math.ceil(Number(nanotez));\n  };\n\n  Object.defineProperty(Estimate.prototype, \"minimalFeeMutez\", {\n    /**\r\n     * @description Minimum fees for the [operation](https://tezos.gitlab.io/user/glossary.html#operations) according to [baker](https://tezos.gitlab.io/user/glossary.html#baker) defaults.\r\n     */\n    get: function () {\n      return this.roundUp(MINIMAL_FEE_MUTEZ + this.operationFeeMutez);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Estimate.prototype, \"suggestedFeeMutez\", {\n    /**\r\n     * @description The suggested fee for the operation which includes minimal fees and a small buffer.\r\n     */\n    get: function () {\n      return this.roundUp(this.operationFeeMutez + MINIMAL_FEE_MUTEZ * 2);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Estimate.prototype, \"usingBaseFeeMutez\", {\n    /**\r\n     * @description Fees according to your specified base fee will ensure that at least minimum fees are used.\r\n     */\n    get: function () {\n      return Math.max(Number(this.baseFeeMutez), MINIMAL_FEE_MUTEZ) + this.roundUp(this.operationFeeMutez);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Estimate.prototype, \"totalCost\", {\n    /**\r\n     * @description The sum of `minimalFeeMutez` + `burnFeeMutez`.\r\n     */\n    get: function () {\n      return this.minimalFeeMutez + this.burnFeeMutez;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Estimate.prototype, \"consumedMilligas\", {\n    /**\r\n     * @description Since Delphinet, consumed gas is provided in milligas for more precision.\r\n     * This function returns an estimation of the gas that operation will consume in milligas.\r\n     */\n    get: function () {\n      return Number(this._milligasLimit);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Estimate;\n}();\n\nvar TZ_DECIMALS = 6;\nvar MTZ_DECIMALS = 3;\n\nfunction getDecimal(format) {\n  switch (format) {\n    case 'tz':\n      return TZ_DECIMALS;\n\n    case 'mtz':\n      return MTZ_DECIMALS;\n\n    case 'mutez':\n    default:\n      return 0;\n  }\n}\n\nfunction format(from, to, amount) {\n  if (from === void 0) {\n    from = 'mutez';\n  }\n\n  if (to === void 0) {\n    to = 'mutez';\n  }\n\n  var bigNum = new BigNumber(amount);\n\n  if (bigNum.isNaN()) {\n    return amount;\n  }\n\n  return bigNum.multipliedBy(Math.pow(10, getDecimal(from))).dividedBy(Math.pow(10, getDecimal(to)));\n}\n\nvar createOriginationOperation = function (_a) {\n  var code = _a.code,\n      init = _a.init,\n      _b = _a.balance,\n      balance = _b === void 0 ? \"0\" : _b,\n      delegate = _a.delegate,\n      storage = _a.storage,\n      _c = _a.fee,\n      fee = _c === void 0 ? DEFAULT_FEE.ORIGINATION : _c,\n      _d = _a.gasLimit,\n      gasLimit = _d === void 0 ? DEFAULT_GAS_LIMIT.ORIGINATION : _d,\n      _e = _a.storageLimit,\n      storageLimit = _e === void 0 ? DEFAULT_STORAGE_LIMIT.ORIGINATION : _e;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parser, contractCode, c, c, order_1, contractStorage, storageType, schema, c, script, operation;\n    return __generator(this, function (_f) {\n      // tslint:disable-next-line: strict-type-predicates\n      if (storage !== undefined && init !== undefined) {\n        throw new Error(\"Storage and Init cannot be set a the same time. Please either use storage or init but not both.\");\n      }\n\n      parser = new Parser({\n        expandMacros: true\n      });\n\n      if (typeof code === 'string') {\n        c = parser.parseScript(code);\n\n        if (c === null) {\n          throw new Error('Empty Michelson source');\n        }\n\n        contractCode = c;\n      } else {\n        c = parser.parseJSON(code);\n\n        if (!Array.isArray(c)) {\n          throw new Error('JSON encoded Michelson script must be an array');\n        }\n\n        order_1 = ['parameter', 'storage', 'code']; // Ensure correct ordering for RPC\n\n        contractCode = c.sort(function (a, b) {\n          return order_1.indexOf(a.prim) - order_1.indexOf(b.prim);\n        });\n      }\n\n      if (storage !== undefined) {\n        storageType = contractCode.find(function (p) {\n          return 'prim' in p && p.prim === 'storage';\n        });\n\n        if ((storageType === null || storageType === void 0 ? void 0 : storageType.args) === undefined) {\n          throw new Error('Missing storage section');\n        }\n\n        schema = new Schema(storageType.args[0]);\n        contractStorage = schema.Encode(storage);\n      } else if (typeof init === 'string') {\n        c = parser.parseMichelineExpression(init);\n\n        if (c === null) {\n          throw new Error('Empty initial storage value');\n        }\n\n        contractStorage = c;\n      } else if (typeof init === 'object') {\n        contractStorage = parser.parseJSON(init);\n      }\n\n      script = {\n        code: contractCode,\n        storage: contractStorage\n      };\n      operation = {\n        kind: OpKind.ORIGINATION,\n        fee: fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        balance: format(\"tz\", \"mutez\", balance).toString(),\n        script: script\n      };\n\n      if (delegate) {\n        operation.delegate = delegate;\n      }\n\n      return [2\n      /*return*/\n      , operation];\n    });\n  });\n};\n\nvar createTransferOperation = function (_a) {\n  var to = _a.to,\n      amount = _a.amount,\n      parameter = _a.parameter,\n      _b = _a.fee,\n      fee = _b === void 0 ? DEFAULT_FEE.TRANSFER : _b,\n      _c = _a.gasLimit,\n      gasLimit = _c === void 0 ? DEFAULT_GAS_LIMIT.TRANSFER : _c,\n      _d = _a.storageLimit,\n      storageLimit = _d === void 0 ? DEFAULT_STORAGE_LIMIT.TRANSFER : _d,\n      _e = _a.mutez,\n      mutez = _e === void 0 ? false : _e;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var operation;\n    return __generator(this, function (_f) {\n      operation = {\n        kind: OpKind.TRANSACTION,\n        fee: fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        amount: mutez ? amount.toString() : format(\"tz\", \"mutez\", amount).toString(),\n        destination: to,\n        parameters: parameter\n      };\n      return [2\n      /*return*/\n      , operation];\n    });\n  });\n};\n\nvar createSetDelegateOperation = function (_a) {\n  var delegate = _a.delegate,\n      source = _a.source,\n      _b = _a.fee,\n      fee = _b === void 0 ? DEFAULT_FEE.DELEGATION : _b,\n      _c = _a.gasLimit,\n      gasLimit = _c === void 0 ? DEFAULT_GAS_LIMIT.DELEGATION : _c,\n      _d = _a.storageLimit,\n      storageLimit = _d === void 0 ? DEFAULT_STORAGE_LIMIT.DELEGATION : _d;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var operation;\n    return __generator(this, function (_e) {\n      operation = {\n        kind: OpKind.DELEGATION,\n        source: source,\n        fee: fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        delegate: delegate\n      };\n      return [2\n      /*return*/\n      , operation];\n    });\n  });\n};\n\nvar createRegisterDelegateOperation = function (_a, source) {\n  var _b = _a.fee,\n      fee = _b === void 0 ? DEFAULT_FEE.DELEGATION : _b,\n      _c = _a.gasLimit,\n      gasLimit = _c === void 0 ? DEFAULT_GAS_LIMIT.DELEGATION : _c,\n      _d = _a.storageLimit,\n      storageLimit = _d === void 0 ? DEFAULT_STORAGE_LIMIT.DELEGATION : _d;\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_e) {\n      return [2\n      /*return*/\n      , {\n        kind: OpKind.DELEGATION,\n        fee: fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        delegate: source\n      }];\n    });\n  });\n};\n\nvar mergeLimits = function (userDefinedLimit, defaultLimits) {\n  return {\n    fee: typeof userDefinedLimit.fee === 'undefined' ? defaultLimits.fee : userDefinedLimit.fee,\n    gasLimit: typeof userDefinedLimit.gasLimit === 'undefined' ? defaultLimits.gasLimit : userDefinedLimit.gasLimit,\n    storageLimit: typeof userDefinedLimit.storageLimit === 'undefined' ? defaultLimits.storageLimit : userDefinedLimit.storageLimit\n  };\n}; // RPC requires a signature but does not verify it\n\n\nvar SIGNATURE_STUB = 'edsigtkpiSSschcaCt9pUVrpNPf7TTcgvgDEDD6NCEHMy8NNQJCGnMfLZzYoQj74yLjo9wx6MPVV29CvVzgi7qEcEUok3k7AuMg';\n\nvar RPCEstimateProvider =\n/** @class */\nfunction (_super) {\n  __extends(RPCEstimateProvider, _super);\n\n  function RPCEstimateProvider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ALLOCATION_STORAGE = 257;\n    _this.ORIGINATION_STORAGE = 257;\n    return _this;\n  } // Maximum values defined by the protocol\n\n\n  RPCEstimateProvider.prototype.getAccountLimits = function (pkh) {\n    return __awaiter(this, void 0, void 0, function () {\n      var balance, _a, hard_gas_limit_per_operation, hard_storage_limit_per_operation, cost_per_byte;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.rpc.getBalance(pkh)];\n\n          case 1:\n            balance = _b.sent();\n            return [4\n            /*yield*/\n            , this.rpc.getConstants()];\n\n          case 2:\n            _a = _b.sent(), hard_gas_limit_per_operation = _a.hard_gas_limit_per_operation, hard_storage_limit_per_operation = _a.hard_storage_limit_per_operation, cost_per_byte = _a.cost_per_byte;\n            return [2\n            /*return*/\n            , {\n              fee: 0,\n              gasLimit: hard_gas_limit_per_operation.toNumber(),\n              storageLimit: Math.floor(BigNumber.min(balance.dividedBy(cost_per_byte), hard_storage_limit_per_operation).toNumber())\n            }];\n        }\n      });\n    });\n  };\n\n  RPCEstimateProvider.prototype.createEstimateFromOperationContent = function (content, size, costPerByte) {\n    var _this = this;\n\n    var operationResults = flattenOperationResult({\n      contents: [content]\n    });\n    var totalGas = 0;\n    var totalMilligas = 0;\n    var totalStorage = 0;\n    operationResults.forEach(function (result) {\n      totalStorage += 'originated_contracts' in result && typeof result.originated_contracts !== 'undefined' ? result.originated_contracts.length * _this.ORIGINATION_STORAGE : 0;\n      totalStorage += 'allocated_destination_contract' in result ? _this.ALLOCATION_STORAGE : 0;\n      totalGas += Number(result.consumed_gas) || 0;\n      totalMilligas += Number(result.consumed_milligas) || 0;\n      totalStorage += 'paid_storage_size_diff' in result ? Number(result.paid_storage_size_diff) || 0 : 0;\n    });\n\n    if (totalGas !== 0 && totalMilligas === 0) {\n      // This will convert gas to milligas for Carthagenet where result does not contain consumed gas in milligas.\n      totalMilligas = totalGas * 1000;\n    }\n\n    if (isOpWithFee(content)) {\n      return new Estimate(totalMilligas || 0, Number(totalStorage || 0), size, costPerByte.toNumber());\n    } else {\n      return new Estimate(0, 0, size, costPerByte.toNumber(), 0);\n    }\n  };\n\n  RPCEstimateProvider.prototype.createEstimate = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, opbytes, _b, branch, contents, operation, opResponse, cost_per_byte, errors;\n\n      var _c;\n\n      var _this = this;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.prepareAndForge(params)];\n\n          case 1:\n            _a = _d.sent(), opbytes = _a.opbytes, _b = _a.opOb, branch = _b.branch, contents = _b.contents;\n            _c = {\n              operation: {\n                branch: branch,\n                contents: contents,\n                signature: SIGNATURE_STUB\n              }\n            };\n            return [4\n            /*yield*/\n            , this.rpc.getChainId()];\n\n          case 2:\n            operation = (_c.chain_id = _d.sent(), _c);\n            return [4\n            /*yield*/\n            , this.simulate(operation)];\n\n          case 3:\n            opResponse = _d.sent().opResponse;\n            return [4\n            /*yield*/\n            , this.rpc.getConstants()];\n\n          case 4:\n            cost_per_byte = _d.sent().cost_per_byte;\n            errors = __spread(flattenErrors(opResponse, 'backtracked'), flattenErrors(opResponse)); // Fail early in case of errors\n\n            if (errors.length) {\n              throw new TezosOperationError(errors);\n            }\n\n            while (opResponse.contents.length !== (Array.isArray(params.operation) ? params.operation.length : 1)) {\n              opResponse.contents.shift();\n            }\n\n            return [2\n            /*return*/\n            , opResponse.contents.map(function (x) {\n              return _this.createEstimateFromOperationContent(x, opbytes.length / 2 / opResponse.contents.length, cost_per_byte);\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Estimate gasLimit, storageLimit and fees for an origination operation\r\n   *\r\n   * @returns An estimation of gasLimit, storageLimit and fees for the operation\r\n   *\r\n   * @param OriginationOperation Originate operation parameter\r\n   */\n\n\n  RPCEstimateProvider.prototype.originate = function (_a) {\n    var fee = _a.fee,\n        storageLimit = _a.storageLimit,\n        gasLimit = _a.gasLimit,\n        rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n\n    return __awaiter(this, void 0, void 0, function () {\n      var pkh, DEFAULT_PARAMS, op;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 1:\n            pkh = _b.sent();\n            return [4\n            /*yield*/\n            , this.getAccountLimits(pkh)];\n\n          case 2:\n            DEFAULT_PARAMS = _b.sent();\n            return [4\n            /*yield*/\n            , createOriginationOperation(__assign(__assign({}, rest), mergeLimits({\n              fee: fee,\n              storageLimit: storageLimit,\n              gasLimit: gasLimit\n            }, DEFAULT_PARAMS)))];\n\n          case 3:\n            op = _b.sent();\n            return [4\n            /*yield*/\n            , this.createEstimate({\n              operation: op,\n              source: pkh\n            })];\n\n          case 4:\n            return [2\n            /*return*/\n            , _b.sent()[0]];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Estimate gasLimit, storageLimit and fees for an transfer operation\r\n   *\r\n   * @returns An estimation of gasLimit, storageLimit and fees for the operation\r\n   *\r\n   * @param TransferOperation Originate operation parameter\r\n   */\n\n\n  RPCEstimateProvider.prototype.transfer = function (_a) {\n    var fee = _a.fee,\n        storageLimit = _a.storageLimit,\n        gasLimit = _a.gasLimit,\n        rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n\n    return __awaiter(this, void 0, void 0, function () {\n      var pkh, DEFAULT_PARAMS, op;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 1:\n            pkh = _b.sent();\n            return [4\n            /*yield*/\n            , this.getAccountLimits(pkh)];\n\n          case 2:\n            DEFAULT_PARAMS = _b.sent();\n            return [4\n            /*yield*/\n            , createTransferOperation(__assign(__assign({}, rest), mergeLimits({\n              fee: fee,\n              storageLimit: storageLimit,\n              gasLimit: gasLimit\n            }, DEFAULT_PARAMS)))];\n\n          case 3:\n            op = _b.sent();\n            return [4\n            /*yield*/\n            , this.createEstimate({\n              operation: op,\n              source: pkh\n            })];\n\n          case 4:\n            return [2\n            /*return*/\n            , _b.sent()[0]];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Estimate gasLimit, storageLimit and fees for a delegate operation\r\n   *\r\n   * @returns An estimation of gasLimit, storageLimit and fees for the operation\r\n   *\r\n   * @param Estimate\r\n   */\n\n\n  RPCEstimateProvider.prototype.setDelegate = function (_a) {\n    var fee = _a.fee,\n        gasLimit = _a.gasLimit,\n        storageLimit = _a.storageLimit,\n        rest = __rest(_a, [\"fee\", \"gasLimit\", \"storageLimit\"]);\n\n    return __awaiter(this, void 0, void 0, function () {\n      var sourceOrDefault, _b, DEFAULT_PARAMS, op;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _b = rest.source;\n            if (_b) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 1:\n            _b = _c.sent();\n            _c.label = 2;\n\n          case 2:\n            sourceOrDefault = _b;\n            return [4\n            /*yield*/\n            , this.getAccountLimits(sourceOrDefault)];\n\n          case 3:\n            DEFAULT_PARAMS = _c.sent();\n            return [4\n            /*yield*/\n            , createSetDelegateOperation(__assign(__assign({}, rest), mergeLimits({\n              fee: fee,\n              storageLimit: storageLimit,\n              gasLimit: gasLimit\n            }, DEFAULT_PARAMS)))];\n\n          case 4:\n            op = _c.sent();\n            return [4\n            /*yield*/\n            , this.createEstimate({\n              operation: op,\n              source: sourceOrDefault\n            })];\n\n          case 5:\n            return [2\n            /*return*/\n            , _c.sent()[0]];\n        }\n      });\n    });\n  };\n\n  RPCEstimateProvider.prototype.batch = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var operations, DEFAULT_PARAMS, _a, params_1, params_1_1, param, _b, _c, _d, _e, _f, _g, _h, e_1_1;\n\n      var e_1, _j;\n\n      return __generator(this, function (_k) {\n        switch (_k.label) {\n          case 0:\n            operations = [];\n            _a = this.getAccountLimits;\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.apply(this, [_k.sent()])];\n\n          case 2:\n            DEFAULT_PARAMS = _k.sent();\n            _k.label = 3;\n\n          case 3:\n            _k.trys.push([3, 15, 16, 17]);\n\n            params_1 = __values(params), params_1_1 = params_1.next();\n            _k.label = 4;\n\n          case 4:\n            if (!!params_1_1.done) return [3\n            /*break*/\n            , 14];\n            param = params_1_1.value;\n            _b = param.kind;\n\n            switch (_b) {\n              case OpKind.TRANSACTION:\n                return [3\n                /*break*/\n                , 5];\n\n              case OpKind.ORIGINATION:\n                return [3\n                /*break*/\n                , 7];\n\n              case OpKind.DELEGATION:\n                return [3\n                /*break*/\n                , 9];\n\n              case OpKind.ACTIVATION:\n                return [3\n                /*break*/\n                , 11];\n            }\n\n            return [3\n            /*break*/\n            , 12];\n\n          case 5:\n            _d = (_c = operations).push;\n            return [4\n            /*yield*/\n            , createTransferOperation(__assign(__assign({}, param), mergeLimits(param, DEFAULT_PARAMS)))];\n\n          case 6:\n            _d.apply(_c, [_k.sent()]);\n\n            return [3\n            /*break*/\n            , 13];\n\n          case 7:\n            _f = (_e = operations).push;\n            return [4\n            /*yield*/\n            , createOriginationOperation(__assign(__assign({}, param), mergeLimits(param, DEFAULT_PARAMS)))];\n\n          case 8:\n            _f.apply(_e, [_k.sent()]);\n\n            return [3\n            /*break*/\n            , 13];\n\n          case 9:\n            _h = (_g = operations).push;\n            return [4\n            /*yield*/\n            , createSetDelegateOperation(__assign(__assign({}, param), mergeLimits(param, DEFAULT_PARAMS)))];\n\n          case 10:\n            _h.apply(_g, [_k.sent()]);\n\n            return [3\n            /*break*/\n            , 13];\n\n          case 11:\n            operations.push(__assign(__assign({}, param), DEFAULT_PARAMS));\n            return [3\n            /*break*/\n            , 13];\n\n          case 12:\n            throw new Error(\"Unsupported operation kind: \" + param.kind);\n\n          case 13:\n            params_1_1 = params_1.next();\n            return [3\n            /*break*/\n            , 4];\n\n          case 14:\n            return [3\n            /*break*/\n            , 17];\n\n          case 15:\n            e_1_1 = _k.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 16:\n            try {\n              if (params_1_1 && !params_1_1.done && (_j = params_1.return)) _j.call(params_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 17:\n            return [2\n            /*return*/\n            , this.createEstimate({\n              operation: operations\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Estimate gasLimit, storageLimit and fees for a delegate operation\r\n   *\r\n   * @returns An estimation of gasLimit, storageLimit and fees for the operation\r\n   *\r\n   * @param Estimate\r\n   */\n\n\n  RPCEstimateProvider.prototype.registerDelegate = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var DEFAULT_PARAMS, _a, op, _b, _c, _d;\n\n      var _e;\n\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            _a = this.getAccountLimits;\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.apply(this, [_f.sent()])];\n\n          case 2:\n            DEFAULT_PARAMS = _f.sent();\n            _b = createRegisterDelegateOperation;\n            _c = [__assign(__assign({}, params), DEFAULT_PARAMS)];\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 3:\n            return [4\n            /*yield*/\n            , _b.apply(void 0, _c.concat([_f.sent()]))];\n\n          case 4:\n            op = _f.sent();\n            _d = this.createEstimate;\n            _e = {\n              operation: op\n            };\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 5:\n            return [4\n            /*yield*/\n            , _d.apply(this, [(_e.source = _f.sent(), _e)])];\n\n          case 6:\n            return [2\n            /*return*/\n            , _f.sent()[0]];\n        }\n      });\n    });\n  };\n\n  return RPCEstimateProvider;\n}(OperationEmitter);\n/**\r\n * @description Delegation operation provide utility function to fetch newly issued delegation\r\n *\r\n * @warn Currently support only one delegation per operation\r\n */\n\n\nvar DelegateOperation =\n/** @class */\nfunction (_super) {\n  __extends(DelegateOperation, _super);\n\n  function DelegateOperation(hash, params, source, raw, results, context) {\n    var _this = _super.call(this, hash, raw, results, context) || this;\n\n    _this.params = params;\n    _this.source = source;\n    return _this;\n  }\n\n  Object.defineProperty(DelegateOperation.prototype, \"operationResults\", {\n    get: function () {\n      var delegationOp = Array.isArray(this.results) && this.results.find(function (op) {\n        return op.kind === 'delegation';\n      });\n      var result = delegationOp && delegationOp.metadata && delegationOp.metadata.operation_result;\n      return result ? result : undefined;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DelegateOperation.prototype, \"status\", {\n    get: function () {\n      var operationResults = this.operationResults;\n\n      if (operationResults) {\n        return operationResults.status;\n      } else {\n        return 'unknown';\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DelegateOperation.prototype, \"delegate\", {\n    get: function () {\n      return this.delegate;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DelegateOperation.prototype, \"isRegisterOperation\", {\n    get: function () {\n      return this.delegate === this.source;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DelegateOperation.prototype, \"fee\", {\n    get: function () {\n      return this.params.fee;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DelegateOperation.prototype, \"gasLimit\", {\n    get: function () {\n      return this.params.gas_limit;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DelegateOperation.prototype, \"storageLimit\", {\n    get: function () {\n      return this.params.storage_limit;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DelegateOperation.prototype, \"consumedGas\", {\n    get: function () {\n      var consumedGas = this.operationResults && this.operationResults.consumed_gas;\n      return consumedGas ? consumedGas : undefined;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DelegateOperation.prototype, \"errors\", {\n    get: function () {\n      return this.operationResults && this.operationResults.errors;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DelegateOperation;\n}(Operation);\n/**\r\n * @description Origination operation provide utility function to fetch newly originated contract\r\n *\r\n * @warn Currently support only one origination per operation\r\n */\n\n\nvar OriginationOperation =\n/** @class */\nfunction (_super) {\n  __extends(OriginationOperation, _super);\n\n  function OriginationOperation(hash, params, raw, results, context, contractProvider) {\n    var _this = _super.call(this, hash, raw, results, context) || this;\n\n    _this.params = params;\n    _this.contractProvider = contractProvider;\n    var originatedContracts = _this.operationResults && _this.operationResults.originated_contracts;\n\n    if (Array.isArray(originatedContracts)) {\n      _this.contractAddress = originatedContracts[0];\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(OriginationOperation.prototype, \"status\", {\n    get: function () {\n      var operationResults = this.operationResults;\n\n      if (operationResults) {\n        return operationResults.status;\n      } else {\n        return 'unknown';\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OriginationOperation.prototype, \"operationResults\", {\n    get: function () {\n      var originationOp = Array.isArray(this.results) && this.results.find(function (op) {\n        return op.kind === 'origination';\n      });\n      var result = originationOp && hasMetadataWithResult(originationOp) && originationOp.metadata.operation_result;\n      return result ? result : undefined;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OriginationOperation.prototype, \"fee\", {\n    get: function () {\n      return this.params.fee;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OriginationOperation.prototype, \"gasLimit\", {\n    get: function () {\n      return this.params.gas_limit;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OriginationOperation.prototype, \"storageLimit\", {\n    get: function () {\n      return this.params.storage_limit;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OriginationOperation.prototype, \"consumedGas\", {\n    get: function () {\n      var consumedGas = this.operationResults && this.operationResults.consumed_gas;\n      return consumedGas ? consumedGas : undefined;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OriginationOperation.prototype, \"storageDiff\", {\n    get: function () {\n      var storageDiff = this.operationResults && this.operationResults.paid_storage_size_diff;\n      return storageDiff ? storageDiff : undefined;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OriginationOperation.prototype, \"storageSize\", {\n    get: function () {\n      var storageSize = this.operationResults && this.operationResults.storage_size;\n      return storageSize ? storageSize : undefined;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OriginationOperation.prototype, \"errors\", {\n    get: function () {\n      return this.operationResults && this.operationResults.errors;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @description Provide the contract abstract of the newly originated contract\r\n   */\n\n  OriginationOperation.prototype.contract = function (confirmations, interval, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.contractAddress) {\n              throw new Error('No contract was originated in this operation');\n            }\n\n            return [4\n            /*yield*/\n            , this.confirmation(confirmations, interval, timeout)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this.contractProvider.at(this.contractAddress)];\n        }\n      });\n    });\n  };\n\n  return OriginationOperation;\n}(Operation);\n/**\r\n * @description Transaction operation provides utility functions to fetch a newly issued transaction\r\n *\r\n * @warn Currently supports one transaction per operation\r\n */\n\n\nvar TransactionOperation =\n/** @class */\nfunction (_super) {\n  __extends(TransactionOperation, _super);\n\n  function TransactionOperation(hash, params, source, raw, results, context) {\n    var _this = _super.call(this, hash, raw, results, context) || this;\n\n    _this.params = params;\n    _this.source = source;\n    return _this;\n  }\n\n  Object.defineProperty(TransactionOperation.prototype, \"operationResults\", {\n    get: function () {\n      var transactionOp = Array.isArray(this.results) && this.results.find(function (op) {\n        return op.kind === 'transaction';\n      });\n      return transactionOp ? [transactionOp] : [];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TransactionOperation.prototype, \"status\", {\n    get: function () {\n      var operationResults = this.operationResults;\n      var txResult = operationResults[0];\n\n      if (txResult) {\n        return txResult.metadata.operation_result.status;\n      } else {\n        return 'unknown';\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TransactionOperation.prototype, \"amount\", {\n    get: function () {\n      return new BigNumber(this.params.amount);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TransactionOperation.prototype, \"destination\", {\n    get: function () {\n      return this.params.destination;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TransactionOperation.prototype, \"fee\", {\n    get: function () {\n      return this.params.fee;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TransactionOperation.prototype, \"gasLimit\", {\n    get: function () {\n      return this.params.gas_limit;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TransactionOperation.prototype, \"storageLimit\", {\n    get: function () {\n      return this.params.storage_limit;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TransactionOperation.prototype.sumProp = function (arr, prop) {\n    return arr.reduce(function (prev, current) {\n      return prop in current ? Number(current[prop]) + prev : prev;\n    }, 0);\n  };\n\n  Object.defineProperty(TransactionOperation.prototype, \"consumedGas\", {\n    get: function () {\n      return String(this.sumProp(flattenOperationResult({\n        contents: this.operationResults\n      }), 'consumed_gas'));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TransactionOperation.prototype, \"storageDiff\", {\n    get: function () {\n      return String(this.sumProp(flattenOperationResult({\n        contents: this.operationResults\n      }), 'paid_storage_size_diff'));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TransactionOperation.prototype, \"storageSize\", {\n    get: function () {\n      return String(this.sumProp(flattenOperationResult({\n        contents: this.operationResults\n      }), 'storage_size'));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TransactionOperation.prototype, \"errors\", {\n    get: function () {\n      return flattenErrors({\n        contents: this.operationResults\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return TransactionOperation;\n}(Operation);\n\nvar InvalidParameterError =\n/** @class */\nfunction () {\n  function InvalidParameterError(smartContractMethodName, sigs, args) {\n    this.smartContractMethodName = smartContractMethodName;\n    this.sigs = sigs;\n    this.args = args;\n    this.name = 'Invalid parameters error';\n    this.message = smartContractMethodName + \" Received \" + args.length + \" arguments while expecting one of the following signatures (\" + JSON.stringify(sigs) + \")\";\n  }\n\n  return InvalidParameterError;\n}();\n\nvar UndefinedLambdaContractError =\n/** @class */\nfunction () {\n  function UndefinedLambdaContractError() {\n    this.name = 'Undefined LambdaContract error';\n    this.message = \"This might happen if you are using a sandbox. Please provide the address of a lambda contract as a parameter of the read method.\";\n  }\n\n  return UndefinedLambdaContractError;\n}();\n\nvar InvalidDelegationSource =\n/** @class */\nfunction () {\n  function InvalidDelegationSource(source) {\n    this.source = source;\n    this.name = 'Invalid delegation source error';\n    this.message = \"Since Babylon delegation source can no longer be a contract address \" + source + \". Please use the smart contract abstraction to set your delegate.\";\n  }\n\n  return InvalidDelegationSource;\n}();\n\nvar setDelegate = function (key) {\n  return [{\n    prim: 'DROP'\n  }, {\n    prim: 'NIL',\n    args: [{\n      prim: 'operation'\n    }]\n  }, {\n    prim: 'PUSH',\n    args: [{\n      prim: 'key_hash'\n    }, {\n      string: key\n    }]\n  }, {\n    prim: 'SOME'\n  }, {\n    prim: 'SET_DELEGATE'\n  }, {\n    prim: 'CONS'\n  }];\n};\n\nvar transferImplicit = function (key, mutez) {\n  return [{\n    prim: 'DROP'\n  }, {\n    prim: 'NIL',\n    args: [{\n      prim: 'operation'\n    }]\n  }, {\n    prim: 'PUSH',\n    args: [{\n      prim: 'key_hash'\n    }, {\n      string: key\n    }]\n  }, {\n    prim: 'IMPLICIT_ACCOUNT'\n  }, {\n    prim: 'PUSH',\n    args: [{\n      prim: 'mutez'\n    }, {\n      int: \"\" + mutez\n    }]\n  }, {\n    prim: 'UNIT'\n  }, {\n    prim: 'TRANSFER_TOKENS'\n  }, {\n    prim: 'CONS'\n  }];\n};\n\nvar removeDelegate = function () {\n  return [{\n    prim: 'DROP'\n  }, {\n    prim: 'NIL',\n    args: [{\n      prim: 'operation'\n    }]\n  }, {\n    prim: 'NONE',\n    args: [{\n      prim: 'key_hash'\n    }]\n  }, {\n    prim: 'SET_DELEGATE'\n  }, {\n    prim: 'CONS'\n  }];\n};\n\nvar transferToContract = function (key, amount) {\n  return [{\n    prim: 'DROP'\n  }, {\n    prim: 'NIL',\n    args: [{\n      prim: 'operation'\n    }]\n  }, {\n    prim: 'PUSH',\n    args: [{\n      prim: 'address'\n    }, {\n      string: key\n    }]\n  }, {\n    prim: 'CONTRACT',\n    args: [{\n      prim: 'unit'\n    }]\n  }, [{\n    prim: 'IF_NONE',\n    args: [[[{\n      prim: 'UNIT'\n    }, {\n      prim: 'FAILWITH'\n    }]], []]\n  }], {\n    prim: 'PUSH',\n    args: [{\n      prim: 'mutez'\n    }, {\n      int: \"\" + amount\n    }]\n  }, {\n    prim: 'UNIT'\n  }, {\n    prim: 'TRANSFER_TOKENS'\n  }, {\n    prim: 'CONS'\n  }];\n};\n\nvar MANAGER_LAMBDA = {\n  setDelegate: setDelegate,\n  removeDelegate: removeDelegate,\n  transferImplicit: transferImplicit,\n  transferToContract: transferToContract\n};\n\nvar WalletOperationBatch =\n/** @class */\nfunction () {\n  function WalletOperationBatch(walletProvider, operationFactory) {\n    this.walletProvider = walletProvider;\n    this.operationFactory = operationFactory;\n    this.operations = [];\n  }\n  /**\r\n   *\r\n   * @description Add a transaction operation to the batch\r\n   *\r\n   * @param params Transfer operation parameter\r\n   */\n\n\n  WalletOperationBatch.prototype.withTransfer = function (params) {\n    this.operations.push(__assign({\n      kind: OpKind.TRANSACTION\n    }, params));\n    return this;\n  };\n  /**\r\n   *\r\n   * @description Add a transaction operation to the batch\r\n   *\r\n   * @param params Transfer operation parameter\r\n   */\n\n\n  WalletOperationBatch.prototype.withContractCall = function (params) {\n    return this.withTransfer(params.toTransferParams());\n  };\n  /**\r\n   *\r\n   * @description Add a delegation operation to the batch\r\n   *\r\n   * @param params Delegation operation parameter\r\n   */\n\n\n  WalletOperationBatch.prototype.withDelegation = function (params) {\n    this.operations.push(__assign({\n      kind: OpKind.DELEGATION\n    }, params));\n    return this;\n  };\n  /**\r\n   *\r\n   * @description Add an origination operation to the batch\r\n   *\r\n   * @param params Origination operation parameter\r\n   */\n\n\n  WalletOperationBatch.prototype.withOrigination = function (params) {\n    this.operations.push(__assign({\n      kind: OpKind.ORIGINATION\n    }, params));\n    return this;\n  };\n\n  WalletOperationBatch.prototype.mapOperation = function (param) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (param.kind) {\n          case OpKind.TRANSACTION:\n            return [2\n            /*return*/\n            , this.walletProvider.mapTransferParamsToWalletParams(__assign({}, param))];\n\n          case OpKind.ORIGINATION:\n            return [2\n            /*return*/\n            , this.walletProvider.mapOriginateParamsToWalletParams(__assign({}, param))];\n\n          case OpKind.DELEGATION:\n            return [2\n            /*return*/\n            , this.walletProvider.mapDelegateParamsToWalletParams(__assign({}, param))];\n\n          default:\n            throw new Error(\"Unsupported operation kind: \" + param.kind);\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Add a group operation to the batch. Operation will be applied in the order they are in the params array\r\n   *\r\n   * @param params Operations parameter\r\n   */\n\n\n  WalletOperationBatch.prototype.with = function (params) {\n    var e_1, _a;\n\n    try {\n      for (var params_1 = __values(params), params_1_1 = params_1.next(); !params_1_1.done; params_1_1 = params_1.next()) {\n        var param = params_1_1.value;\n\n        switch (param.kind) {\n          case OpKind.TRANSACTION:\n            this.withTransfer(param);\n            break;\n\n          case OpKind.ORIGINATION:\n            this.withOrigination(param);\n            break;\n\n          case OpKind.DELEGATION:\n            this.withDelegation(param);\n            break;\n\n          default:\n            throw new Error(\"Unsupported operation kind: \" + param.kind);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (params_1_1 && !params_1_1.done && (_a = params_1.return)) _a.call(params_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return this;\n  };\n  /**\r\n   *\r\n   * @description Submit batch operation to wallet\r\n   *\r\n   */\n\n\n  WalletOperationBatch.prototype.send = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var ops, _a, _b, op, _c, _d, e_2_1, opHash;\n\n      var e_2, _e;\n\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            ops = [];\n            _f.label = 1;\n\n          case 1:\n            _f.trys.push([1, 6, 7, 8]);\n\n            _a = __values(this.operations), _b = _a.next();\n            _f.label = 2;\n\n          case 2:\n            if (!!_b.done) return [3\n            /*break*/\n            , 5];\n            op = _b.value;\n            _d = (_c = ops).push;\n            return [4\n            /*yield*/\n            , this.mapOperation(op)];\n\n          case 3:\n            _d.apply(_c, [_f.sent()]);\n\n            _f.label = 4;\n\n          case 4:\n            _b = _a.next();\n            return [3\n            /*break*/\n            , 2];\n\n          case 5:\n            return [3\n            /*break*/\n            , 8];\n\n          case 6:\n            e_2_1 = _f.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            try {\n              if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 8:\n            return [4\n            /*yield*/\n            , this.walletProvider.sendOperations(ops)];\n\n          case 9:\n            opHash = _f.sent();\n            return [2\n            /*return*/\n            , this.operationFactory.createOperation(opHash)];\n        }\n      });\n    });\n  };\n\n  return WalletOperationBatch;\n}();\n\nvar Wallet =\n/** @class */\nfunction () {\n  function Wallet(context) {\n    this.context = context;\n\n    this.walletCommand = function (send) {\n      return {\n        send: send\n      };\n    };\n  }\n\n  Object.defineProperty(Wallet.prototype, \"walletProvider\", {\n    get: function () {\n      return this.context.walletProvider;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @description Retrieve the PKH of the account that is currently in use by the wallet\r\n   *\r\n   * @param option Option to use while fetching the PKH.\r\n   * If forceRefetch is specified the wallet provider implementation will refetch the PKH from the wallet\r\n   */\n\n  Wallet.prototype.pkh = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        forceRefetch = _b.forceRefetch;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            if (!(!this._pkh || forceRefetch)) return [3\n            /*break*/\n            , 2];\n            _c = this;\n            return [4\n            /*yield*/\n            , this.walletProvider.getPKH()];\n\n          case 1:\n            _c._pkh = _d.sent();\n            _d.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , this._pkh];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Originate a new contract according to the script in parameters.\r\n   *\r\n   * @returns An operation handle with the result from the rpc node\r\n   *\r\n   * @param originateParams Originate operation parameter\r\n   */\n\n\n  Wallet.prototype.originate = function (params) {\n    var _this = this;\n\n    return this.walletCommand(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var mappedParams, opHash;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.walletProvider.mapOriginateParamsToWalletParams(__assign({}, params))];\n\n            case 1:\n              mappedParams = _a.sent();\n              return [4\n              /*yield*/\n              , this.walletProvider.sendOperations([mappedParams])];\n\n            case 2:\n              opHash = _a.sent();\n              return [2\n              /*return*/\n              , this.context.operationFactory.createOriginationOperation(opHash)];\n          }\n        });\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Set the delegate for a contract.\r\n   *\r\n   * @returns An operation handle with the result from the rpc node\r\n   *\r\n   * @param delegateParams operation parameter\r\n   */\n\n\n  Wallet.prototype.setDelegate = function (params) {\n    var _this = this;\n\n    return this.walletCommand(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var mappedParams, opHash;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.walletProvider.mapDelegateParamsToWalletParams(__assign({}, params))];\n\n            case 1:\n              mappedParams = _a.sent();\n              return [4\n              /*yield*/\n              , this.walletProvider.sendOperations([mappedParams])];\n\n            case 2:\n              opHash = _a.sent();\n              return [2\n              /*return*/\n              , this.context.operationFactory.createDelegationOperation(opHash)];\n          }\n        });\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Register the current address as delegate.\r\n   *\r\n   * @returns An operation handle with the result from the rpc node\r\n   *\r\n   */\n\n\n  Wallet.prototype.registerDelegate = function () {\n    var _this = this;\n\n    return this.walletCommand(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var mappedParams, _a, _b, opHash;\n\n        var _c;\n\n        return __generator(this, function (_d) {\n          switch (_d.label) {\n            case 0:\n              _b = (_a = this.walletProvider).mapDelegateParamsToWalletParams;\n              _c = {};\n              return [4\n              /*yield*/\n              , this.pkh()];\n\n            case 1:\n              return [4\n              /*yield*/\n              , _b.apply(_a, [(_c.delegate = _d.sent(), _c)])];\n\n            case 2:\n              mappedParams = _d.sent();\n              return [4\n              /*yield*/\n              , this.walletProvider.sendOperations([mappedParams])];\n\n            case 3:\n              opHash = _d.sent();\n              return [2\n              /*return*/\n              , this.context.operationFactory.createDelegationOperation(opHash)];\n          }\n        });\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Transfer tezos tokens from current address to a specific address or call a smart contract.\r\n   *\r\n   * @returns A wallet command from which we can send the operation to the wallet\r\n   *\r\n   * @param params operation parameter\r\n   */\n\n\n  Wallet.prototype.transfer = function (params) {\n    var _this = this;\n\n    return this.walletCommand(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var mappedParams, opHash;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.walletProvider.mapTransferParamsToWalletParams(params)];\n\n            case 1:\n              mappedParams = _a.sent();\n              return [4\n              /*yield*/\n              , this.walletProvider.sendOperations([mappedParams])];\n\n            case 2:\n              opHash = _a.sent();\n              return [2\n              /*return*/\n              , this.context.operationFactory.createTransactionOperation(opHash)];\n          }\n        });\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Create a batch of operation\r\n   *\r\n   * @returns A batch object from which we can add more operation or send a command to the wallet to execute the batch\r\n   *\r\n   * @param params List of operation to initialize the batch with\r\n   */\n\n\n  Wallet.prototype.batch = function (params) {\n    var batch = new WalletOperationBatch(this.walletProvider, this.context.operationFactory);\n    batch.with(params);\n    return batch;\n  };\n  /**\r\n   *\r\n   * @description Create an smart contract abstraction for the address specified. Calling entrypoints with the returned\r\n   * smart contract abstraction will leverage the wallet provider to make smart contract calls\r\n   *\r\n   * @param address Smart contract address\r\n   */\n\n\n  Wallet.prototype.at = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var script, entrypoints, blockHeader, chainId;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.context.rpc.getScript(address)];\n\n          case 1:\n            script = _a.sent();\n            return [4\n            /*yield*/\n            , this.context.rpc.getEntrypoints(address)];\n\n          case 2:\n            entrypoints = _a.sent();\n            return [4\n            /*yield*/\n            , this.context.rpc.getBlockHeader()];\n\n          case 3:\n            blockHeader = _a.sent();\n            chainId = blockHeader.chain_id;\n            return [2\n            /*return*/\n            , new ContractAbstraction(address, script, this, this.context.contract, entrypoints, chainId)];\n        }\n      });\n    });\n  };\n\n  return Wallet;\n}();\n\nvar LegacyWalletProvider =\n/** @class */\nfunction () {\n  function LegacyWalletProvider(context) {\n    this.context = context;\n  }\n\n  LegacyWalletProvider.prototype.getPKH = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.context.signer.publicKeyHash()];\n      });\n    });\n  };\n\n  LegacyWalletProvider.prototype.mapTransferParamsToWalletParams = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , attachKind(params, OpKind.TRANSACTION)];\n      });\n    });\n  };\n\n  LegacyWalletProvider.prototype.mapOriginateParamsToWalletParams = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , attachKind(params, OpKind.ORIGINATION)];\n      });\n    });\n  };\n\n  LegacyWalletProvider.prototype.mapDelegateParamsToWalletParams = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , attachKind(params, OpKind.DELEGATION)];\n      });\n    });\n  };\n\n  LegacyWalletProvider.prototype.sendOperations = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var op;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.context.batch.batch(params).send()];\n\n          case 1:\n            op = _a.sent();\n            return [2\n            /*return*/\n            , op.hash];\n        }\n      });\n    });\n  };\n\n  return LegacyWalletProvider;\n}();\n\nvar LambdaView =\n/** @class */\nfunction () {\n  function LambdaView(lambdaContract, viewContract, viewMethod, contractParameter) {\n    if (viewMethod === void 0) {\n      viewMethod = 'default';\n    }\n\n    if (contractParameter === void 0) {\n      contractParameter = {\n        prim: 'Unit'\n      };\n    }\n\n    this.lambdaContract = lambdaContract;\n    this.viewContract = viewContract;\n    this.viewMethod = viewMethod;\n    this.contractParameter = contractParameter;\n    this.voidLambda = this.createVoidLambda();\n  }\n\n  LambdaView.prototype.execute = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var ex_1, lastError, failedWith;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.lambdaContract.methods.default(this.voidLambda).send()];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            ex_1 = _a.sent();\n\n            if (ex_1 instanceof TezosOperationError) {\n              lastError = ex_1.errors[ex_1.errors.length - 1];\n              failedWith = lastError.with;\n              return [2\n              /*return*/\n              , failedWith];\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LambdaView.prototype.createVoidLambda = function () {\n    var _a = __read(this.getView(), 2),\n        parameter = _a[0],\n        callback = _a[1];\n\n    var contractArgs = [{\n      prim: 'pair',\n      args: [parameter, {\n        prim: 'contract',\n        args: [callback]\n      }]\n    }];\n\n    if (this.viewMethod === 'default') {\n      contractArgs = [{\n        string: '%default'\n      }].concat(contractArgs);\n    }\n\n    return [{\n      prim: 'PUSH',\n      args: [{\n        prim: 'mutez'\n      }, {\n        int: '0'\n      }]\n    }, {\n      prim: 'NONE',\n      args: [{\n        prim: 'key_hash'\n      }]\n    }, {\n      prim: 'CREATE_CONTRACT',\n      args: [[{\n        prim: 'parameter',\n        args: [callback]\n      }, {\n        prim: 'storage',\n        args: [{\n          prim: 'unit'\n        }]\n      }, {\n        prim: 'code',\n        args: [[{\n          prim: 'CAR'\n        }, {\n          prim: 'FAILWITH'\n        }]]\n      }]]\n    }, {\n      prim: 'DIP',\n      args: [[{\n        prim: 'DIP',\n        args: [[{\n          prim: 'LAMBDA',\n          args: [{\n            prim: 'pair',\n            args: [{\n              prim: 'address'\n            }, {\n              prim: 'unit'\n            }]\n          }, {\n            prim: 'pair',\n            args: [{\n              prim: 'list',\n              args: [{\n                prim: 'operation'\n              }]\n            }, {\n              prim: 'unit'\n            }]\n          }, [{\n            prim: 'CAR'\n          }, {\n            prim: 'CONTRACT',\n            args: [callback]\n          }, {\n            prim: 'IF_NONE',\n            args: [[{\n              prim: 'PUSH',\n              args: [{\n                prim: 'string'\n              }, {\n                string: \"Callback type unmatched\"\n              }]\n            }, {\n              prim: 'FAILWITH'\n            }], []]\n          }, {\n            prim: 'PUSH',\n            args: [parameter, this.contractParameter]\n          }, {\n            prim: 'PAIR'\n          }, {\n            prim: 'DIP',\n            args: [[{\n              prim: 'PUSH',\n              args: [{\n                prim: 'address'\n              }, {\n                string: this.viewContract.address + \"%\" + this.viewMethod\n              }]\n            }, {\n              prim: 'DUP'\n            }, {\n              prim: 'CONTRACT',\n              args: contractArgs\n            }, {\n              prim: 'IF_NONE',\n              args: [[{\n                prim: 'PUSH',\n                args: [{\n                  prim: 'string'\n                }, {\n                  string: \"Contract does not exist\"\n                }]\n              }, {\n                prim: 'FAILWITH'\n              }], [{\n                prim: 'DIP',\n                args: [[{\n                  prim: 'DROP'\n                }]]\n              }]]\n            }, {\n              prim: 'PUSH',\n              args: [{\n                prim: 'mutez'\n              }, {\n                int: '0'\n              }]\n            }]]\n          }, {\n            prim: 'TRANSFER_TOKENS'\n          }, {\n            prim: 'DIP',\n            args: [[{\n              prim: 'NIL',\n              args: [{\n                prim: 'operation'\n              }]\n            }]]\n          }, {\n            prim: 'CONS'\n          }, {\n            prim: 'DIP',\n            args: [[{\n              prim: 'UNIT'\n            }]]\n          }, {\n            prim: 'PAIR'\n          }]]\n        }]]\n      }, {\n        prim: 'APPLY'\n      }, {\n        prim: 'DIP',\n        args: [[{\n          prim: 'PUSH',\n          args: [{\n            prim: 'address'\n          }, {\n            string: this.lambdaContract.address\n          }]\n        }, {\n          prim: 'DUP'\n        }, {\n          prim: 'CONTRACT',\n          args: [{\n            prim: 'lambda',\n            args: [{\n              prim: 'unit'\n            }, {\n              prim: 'pair',\n              args: [{\n                prim: 'list',\n                args: [{\n                  prim: 'operation'\n                }]\n              }, {\n                prim: 'unit'\n              }]\n            }]\n          }]\n        }, {\n          prim: 'IF_NONE',\n          args: [[{\n            prim: 'PUSH',\n            args: [{\n              prim: 'string'\n            }, {\n              string: \"Contract does not exists\"\n            }]\n          }, {\n            prim: 'FAILWITH'\n          }], [{\n            prim: 'DIP',\n            args: [[{\n              prim: 'DROP'\n            }]]\n          }]]\n        }, {\n          prim: 'PUSH',\n          args: [{\n            prim: 'mutez'\n          }, {\n            int: '0'\n          }]\n        }]]\n      }, {\n        prim: 'TRANSFER_TOKENS'\n      }, {\n        prim: 'DIP',\n        args: [[{\n          prim: 'NIL',\n          args: [{\n            prim: 'operation'\n          }]\n        }]]\n      }, {\n        prim: 'CONS'\n      }]]\n    }, {\n      prim: 'CONS'\n    }, {\n      prim: 'DIP',\n      args: [[{\n        prim: 'UNIT'\n      }]]\n    }, {\n      prim: 'PAIR'\n    }];\n  };\n\n  LambdaView.prototype.getView = function () {\n    var entrypoints = this.viewContract.entrypoints.entrypoints;\n    var entrypoint = entrypoints[this.viewMethod];\n\n    if (!entrypoint) {\n      throw Error(\"Contract at \" + this.viewContract.address + \" does not have entrypoint: \" + this.viewMethod);\n    }\n\n    if (!('prim' in entrypoint) || !entrypoint.args) {\n      // TODO: Enhance this error message to be more descriptive\n      throw Error('Entrypoint args undefined');\n    }\n\n    var args = Array.from(entrypoint.args);\n\n    var _a = __read(args, 2),\n        parameter = _a[0],\n        callbackContract = _a[1];\n\n    if ('annots' in parameter) {\n      delete parameter['annots'];\n    }\n\n    if (!('prim' in callbackContract) || !callbackContract.args) {\n      // TODO: Enhance this error message to be more descriptive\n      throw Error('Callback contract args undefined');\n    }\n\n    var message;\n\n    if (entrypoint.prim !== 'pair') {\n      message = \"Expected {'prim': 'pair', ..} but found {'prim': \" + entrypoint.prim + \", ..}\";\n    } else if (args.length !== 2) {\n      message = \"Expected an Array of length 2, but found: \" + args;\n    } else if (callbackContract.prim !== 'contract') {\n      message = \"Expected a {prim: 'contract', ...}, but found: \" + callbackContract.prim;\n    } else if (callbackContract.args && callbackContract.args.length !== 1) {\n      message = \"Expected a single argument to 'contract', but found: \" + callbackContract.args;\n    }\n\n    if (message) throw Error(message);\n    return [parameter, callbackContract.args[0]];\n  };\n\n  return LambdaView;\n}();\n\nvar DEFAULT_SMART_CONTRACT_METHOD_NAME = 'default';\n/**\r\n * @description Utility class to send smart contract operation\r\n */\n\nvar ContractMethod =\n/** @class */\nfunction () {\n  function ContractMethod(provider, address, parameterSchema, name, args, isMultipleEntrypoint, isAnonymous) {\n    if (isMultipleEntrypoint === void 0) {\n      isMultipleEntrypoint = true;\n    }\n\n    if (isAnonymous === void 0) {\n      isAnonymous = false;\n    }\n\n    this.provider = provider;\n    this.address = address;\n    this.parameterSchema = parameterSchema;\n    this.name = name;\n    this.args = args;\n    this.isMultipleEntrypoint = isMultipleEntrypoint;\n    this.isAnonymous = isAnonymous;\n  }\n\n  Object.defineProperty(ContractMethod.prototype, \"schema\", {\n    /**\r\n     * @description Get the schema of the smart contract method\r\n     */\n    get: function () {\n      return this.isAnonymous ? this.parameterSchema.ExtractSchema()[this.name] : this.parameterSchema.ExtractSchema();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   *\r\n   * @description Send the smart contract operation\r\n   *\r\n   * @param Options generic operation parameter\r\n   */\n\n  ContractMethod.prototype.send = function (params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    if (this.provider instanceof Wallet) {\n      // TODO got around TS2352: Conversion of type 'T & Wallet' to type 'Wallet' by adding `as unknown`. Needs clarification\n      return this.provider.transfer(this.toTransferParams(params)).send();\n    } else {\n      return this.provider.transfer(this.toTransferParams(params));\n    }\n  };\n  /**\r\n   *\r\n   * @description Create transfer params to be used with TezosToolkit.contract.transfer methods\r\n   *\r\n   * @param Options generic transfer operation parameters\r\n   */\n\n\n  ContractMethod.prototype.toTransferParams = function (_a) {\n    var _b, _c;\n\n    var _d = _a === void 0 ? {} : _a,\n        fee = _d.fee,\n        gasLimit = _d.gasLimit,\n        storageLimit = _d.storageLimit,\n        source = _d.source,\n        _e = _d.amount,\n        amount = _e === void 0 ? 0 : _e,\n        _f = _d.mutez,\n        mutez = _f === void 0 ? false : _f;\n\n    var fullTransferParams = {\n      to: this.address,\n      amount: amount,\n      fee: fee,\n      mutez: mutez,\n      source: source,\n      gasLimit: gasLimit,\n      storageLimit: storageLimit,\n      parameter: {\n        entrypoint: this.isMultipleEntrypoint ? this.name : 'default',\n        value: this.isAnonymous ? (_b = this.parameterSchema).Encode.apply(_b, __spread([this.name], this.args)) : (_c = this.parameterSchema).Encode.apply(_c, __spread(this.args))\n      }\n    };\n    return fullTransferParams;\n  };\n\n  return ContractMethod;\n}();\n/**\r\n * @description Utility class to retrieve data from a smart contract's storage without incurring fees via a contract's view method\r\n */\n\n\nvar ContractView =\n/** @class */\nfunction () {\n  function ContractView(currentContract, provider, name, chainId, callbackParametersSchema, parameterSchema, args) {\n    this.currentContract = currentContract;\n    this.provider = provider;\n    this.name = name;\n    this.chainId = chainId;\n    this.callbackParametersSchema = callbackParametersSchema;\n    this.parameterSchema = parameterSchema;\n    this.args = args;\n  }\n  /**\r\n   *\r\n   * @description Find which lambda contract to use based on the current network,\r\n   * encode parameters to Michelson,\r\n   * create an instance of Lambdaview to retrive data, and\r\n   * Decode Michelson response\r\n   *\r\n   * @param Options Address of a lambda contract (sandbox users)\r\n   */\n\n\n  ContractView.prototype.read = function (customLambdaAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var lambdaAddress, lambdaContract, arg, lambdaView, failedWith, response;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            // TODO Verify if the 'customLambdaAdress' is a valid originated contract and if not, return an appropriate error message. \n            if (customLambdaAddress) {\n              lambdaAddress = customLambdaAddress;\n            } else if (this.chainId === ChainIds.CARTHAGENET) {\n              lambdaAddress = DefaultLambdaAddresses.CARTHAGENET;\n            } else if (this.chainId === ChainIds.DELPHINET) {\n              lambdaAddress = DefaultLambdaAddresses.DELPHINET;\n            } else if (this.chainId === ChainIds.MAINNET) {\n              lambdaAddress = DefaultLambdaAddresses.MAINNET;\n            } else {\n              throw new UndefinedLambdaContractError();\n            }\n\n            return [4\n            /*yield*/\n            , this.provider.at(lambdaAddress)];\n\n          case 1:\n            lambdaContract = _b.sent();\n            arg = (_a = this.parameterSchema).Encode.apply(_a, __spread(this.args));\n            lambdaView = new LambdaView(lambdaContract, this.currentContract, this.name, arg);\n            return [4\n            /*yield*/\n            , lambdaView.execute()];\n\n          case 2:\n            failedWith = _b.sent();\n            response = this.callbackParametersSchema.Execute(failedWith);\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n\n  return ContractView;\n}();\n\nvar validateArgs = function (args, schema, name) {\n  var sigs = schema.ExtractSignatures();\n\n  if (!sigs.find(function (x) {\n    return x.length === args.length;\n  })) {\n    throw new InvalidParameterError(name, sigs, args);\n  }\n};\n\nvar isView = function (schema) {\n  var isView = false;\n  var sigs = schema.ExtractSignatures();\n\n  if (sigs[0][sigs[0].length - 1] === 'contract') {\n    isView = true;\n  }\n\n  return isView;\n};\n\nvar isContractProvider = function (variableToCheck) {\n  return variableToCheck.contractProviderTypeSymbol !== undefined;\n};\n/**\r\n * @description Smart contract abstraction\r\n */\n\n\nvar ContractAbstraction =\n/** @class */\nfunction () {\n  function ContractAbstraction(address, script, provider, storageProvider, entrypoints, chainId) {\n    this.address = address;\n    this.script = script;\n    this.storageProvider = storageProvider;\n    this.entrypoints = entrypoints;\n    this.chainId = chainId;\n    /**\r\n     * @description Contains methods that are implemented by the target Tezos Smart Contract, and offers the user to call the Smart Contract methods as if they were native TS/JS methods.\r\n     * NB: if the contract contains annotation it will include named properties; if not it will be indexed by a number.\r\n     *\r\n     */\n\n    this.methods = {};\n    this.views = {};\n    this.schema = Schema.fromRPCResponse({\n      script: this.script\n    });\n    this.parameterSchema = ParameterSchema.fromRPCResponse({\n      script: this.script\n    });\n\n    this._initializeMethods(this, address, provider, this.entrypoints.entrypoints, this.chainId);\n  }\n\n  ContractAbstraction.prototype._initializeMethods = function (currentContract, address, provider, entrypoints, chainId) {\n    var _this = this;\n\n    var parameterSchema = this.parameterSchema;\n    var keys = Object.keys(entrypoints);\n\n    if (parameterSchema.isMultipleEntryPoint) {\n      keys.forEach(function (smartContractMethodName) {\n        var smartContractMethodSchema = new ParameterSchema(entrypoints[smartContractMethodName]);\n\n        var method = function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          validateArgs(args, smartContractMethodSchema, smartContractMethodName);\n          return new ContractMethod(provider, address, smartContractMethodSchema, smartContractMethodName, args);\n        };\n\n        _this.methods[smartContractMethodName] = method;\n\n        if (isContractProvider(provider)) {\n          if (isView(smartContractMethodSchema)) {\n            var view = function () {\n              var args = [];\n\n              for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n              }\n\n              var entrypointParamWithoutCallback = entrypoints[smartContractMethodName].args[0];\n              var smartContractMethodSchemaWithoutCallback = new ParameterSchema(entrypointParamWithoutCallback);\n              var parametersCallback = entrypoints[smartContractMethodName].args[1].args[0];\n              var smartContractMethodCallbackSchema = new ParameterSchema(parametersCallback);\n              validateArgs(args, smartContractMethodSchemaWithoutCallback, smartContractMethodName);\n              return new ContractView(currentContract, provider, smartContractMethodName, chainId, smartContractMethodCallbackSchema, smartContractMethodSchemaWithoutCallback, args);\n            };\n\n            _this.views[smartContractMethodName] = view;\n          }\n        }\n      }); // Deal with methods with no annotations which were not discovered by the RPC endpoint\n      // Methods with no annotations are discovered using parameter schema\n\n      var anonymousMethods = Object.keys(parameterSchema.ExtractSchema()).filter(function (key) {\n        return Object.keys(entrypoints).indexOf(key) === -1;\n      });\n      anonymousMethods.forEach(function (smartContractMethodName) {\n        var method = function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          validateArgs(__spread([smartContractMethodName], args), parameterSchema, smartContractMethodName);\n          return new ContractMethod(provider, address, parameterSchema, smartContractMethodName, args, false, true);\n        };\n\n        _this.methods[smartContractMethodName] = method;\n      });\n    } else {\n      var smartContractMethodSchema_1 = this.parameterSchema;\n\n      var method = function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        validateArgs(args, parameterSchema, DEFAULT_SMART_CONTRACT_METHOD_NAME);\n        return new ContractMethod(provider, address, smartContractMethodSchema_1, DEFAULT_SMART_CONTRACT_METHOD_NAME, args, false);\n      };\n\n      this.methods[DEFAULT_SMART_CONTRACT_METHOD_NAME] = method;\n    }\n  };\n  /**\r\n   * @description Return a friendly representation of the smart contract storage\r\n   */\n\n\n  ContractAbstraction.prototype.storage = function () {\n    return this.storageProvider.getStorage(this.address, this.schema);\n  };\n  /**\r\n   *\r\n   * @description Return a friendly representation of the smart contract big map value\r\n   *\r\n   * @param key BigMap key to fetch\r\n   *\r\n   * @deprecated getBigMapKey has been deprecated in favor of getBigMapKeyByID\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\r\n   */\n\n\n  ContractAbstraction.prototype.bigMap = function (key) {\n    // tslint:disable-next-line: deprecation\n    return this.storageProvider.getBigMapKey(this.address, key, this.schema);\n  };\n\n  return ContractAbstraction;\n}();\n\nvar BigMapAbstraction =\n/** @class */\nfunction () {\n  function BigMapAbstraction(id, schema, provider) {\n    this.id = id;\n    this.schema = schema;\n    this.provider = provider;\n  }\n\n  BigMapAbstraction.prototype.get = function (keyToEncode) {\n    return __awaiter(this, void 0, void 0, function () {\n      var id, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.provider.getBigMapKeyByID(this.id.toString(), keyToEncode, this.schema)];\n\n          case 1:\n            id = _a.sent();\n            return [2\n            /*return*/\n            , id];\n\n          case 2:\n            e_1 = _a.sent();\n\n            if (e_1 instanceof HttpResponseError && e_1.status === STATUS_CODE.NOT_FOUND) {\n              return [2\n              /*return*/\n              , undefined];\n            } else {\n              throw e_1;\n            }\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  BigMapAbstraction.prototype.toJSON = function () {\n    return this.id.toString();\n  };\n\n  BigMapAbstraction.prototype.toString = function () {\n    return this.id.toString();\n  };\n\n  return BigMapAbstraction;\n}(); // Override the default michelson encoder semantic to provide richer abstraction over storage properties\n\n\nvar smartContractAbstractionSemantic = function (provider) {\n  return {\n    // Provide a specific abstraction for BigMaps\n    big_map: function (val, code) {\n      if (!val || !('int' in val) || val.int === undefined) {\n        // Return an empty object in case of missing big map ID\n        return {};\n      } else {\n        var schema = new Schema(code);\n        return new BigMapAbstraction(new BigNumber(val.int), schema, provider);\n      }\n    }\n  };\n};\n\nvar RpcContractProvider =\n/** @class */\nfunction (_super) {\n  __extends(RpcContractProvider, _super);\n\n  function RpcContractProvider(context, estimator) {\n    var _this = _super.call(this, context) || this;\n\n    _this.estimator = estimator;\n    _this.contractProviderTypeSymbol = Symbol.for('taquito--provider-type-symbol');\n    return _this;\n  }\n  /**\r\n   *\r\n   * @description Return a well formatted json object of the contract storage\r\n   *\r\n   * @param contract contract address you want to get the storage from\r\n   * @param schema optional schema can either be the contract script rpc response or a michelson-encoder schema\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\r\n   */\n\n\n  RpcContractProvider.prototype.getStorage = function (contract, schema) {\n    return __awaiter(this, void 0, void 0, function () {\n      var contractSchema, storage;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!schema) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.rpc.getScript(contract)];\n\n          case 1:\n            schema = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            if (Schema.isSchema(schema)) {\n              contractSchema = schema;\n            } else {\n              contractSchema = Schema.fromRPCResponse({\n                script: schema\n              });\n            }\n\n            return [4\n            /*yield*/\n            , this.rpc.getStorage(contract)];\n\n          case 3:\n            storage = _a.sent();\n            return [2\n            /*return*/\n            , contractSchema.Execute(storage, smartContractAbstractionSemantic(this))];\n          // Cast into T because only the caller can know the true type of the storage\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Return a well formatted json object of the contract big map storage\r\n   *\r\n   * @param contract contract address you want to get the storage from\r\n   * @param key contract big map key to fetch value from\r\n   * @param schema optional schema can either be the contract script rpc response or a michelson-encoder schema\r\n   *\r\n   * @deprecated Deprecated in favor of getBigMapKeyByID\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\r\n   */\n\n\n  RpcContractProvider.prototype.getBigMapKey = function (contract, key, schema) {\n    return __awaiter(this, void 0, void 0, function () {\n      var contractSchema, encodedKey, val;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!schema) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.rpc.getScript(contract)];\n\n          case 1:\n            schema = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            if (Schema.isSchema(schema)) {\n              contractSchema = schema;\n            } else {\n              contractSchema = Schema.fromRPCResponse({\n                script: schema\n              });\n            }\n\n            encodedKey = contractSchema.EncodeBigMapKey(key);\n            return [4\n            /*yield*/\n            , this.rpc.getBigMapKey(contract, encodedKey)];\n\n          case 3:\n            val = _a.sent();\n            return [2\n            /*return*/\n            , contractSchema.ExecuteOnBigMapValue(val)];\n          // Cast into T because only the caller can know the true type of the storage\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Return a well formatted json object of a big map value\r\n   *\r\n   * @param id Big Map ID\r\n   * @param keyToEncode key to query (will be encoded properly according to the schema)\r\n   * @param schema Big Map schema (can be determined using your contract type)\r\n   *\r\n   * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-big-maps-big-map-id-script-expr\r\n   */\n\n\n  RpcContractProvider.prototype.getBigMapKeyByID = function (id, keyToEncode, schema) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, key, type, packed, encodedExpr, bigMapValue;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = schema.EncodeBigMapKey(keyToEncode), key = _a.key, type = _a.type;\n            return [4\n            /*yield*/\n            , this.context.rpc.packData({\n              data: key,\n              type: type\n            })];\n\n          case 1:\n            packed = _b.sent().packed;\n            encodedExpr = encodeExpr(packed);\n            return [4\n            /*yield*/\n            , this.context.rpc.getBigMapExpr(id.toString(), encodedExpr)];\n\n          case 2:\n            bigMapValue = _b.sent();\n            return [2\n            /*return*/\n            , schema.ExecuteOnBigMapValue(bigMapValue, smartContractAbstractionSemantic(this))];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Originate a new contract according to the script in parameters. Will sign and inject an operation using the current context\r\n   *\r\n   * @returns An operation handle with the result from the rpc node\r\n   *\r\n   * @warn You cannot specify storage and init at the same time (use init to pass the raw michelson representation of storage)\r\n   *\r\n   * @param OriginationOperation Originate operation parameter\r\n   */\n\n\n  RpcContractProvider.prototype.originate = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var estimate, publicKeyHash, operation, preparedOrigination, forgedOrigination, _a, hash, context, forgedBytes, opResponse;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.estimate(params, this.estimator.originate.bind(this.estimator))];\n\n          case 1:\n            estimate = _b.sent();\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 2:\n            publicKeyHash = _b.sent();\n            return [4\n            /*yield*/\n            , createOriginationOperation(__assign(__assign({}, params), estimate))];\n\n          case 3:\n            operation = _b.sent();\n            return [4\n            /*yield*/\n            , this.prepareOperation({\n              operation: operation,\n              source: publicKeyHash\n            })];\n\n          case 4:\n            preparedOrigination = _b.sent();\n            return [4\n            /*yield*/\n            , this.forge(preparedOrigination)];\n\n          case 5:\n            forgedOrigination = _b.sent();\n            return [4\n            /*yield*/\n            , this.signAndInject(forgedOrigination)];\n\n          case 6:\n            _a = _b.sent(), hash = _a.hash, context = _a.context, forgedBytes = _a.forgedBytes, opResponse = _a.opResponse;\n            return [2\n            /*return*/\n            , new OriginationOperation(hash, operation, forgedBytes, opResponse, context, this)];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Set the delegate for a contract. Will sign and inject an operation using the current context\r\n   *\r\n   * @returns An operation handle with the result from the rpc node\r\n   *\r\n   * @param SetDelegate operation parameter\r\n   */\n\n\n  RpcContractProvider.prototype.setDelegate = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var estimate, operation, sourceOrDefault, _a, opBytes, _b, hash, context, forgedBytes, opResponse;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            // Since babylon delegation source cannot smart contract\n            if (/kt1/i.test(params.source)) {\n              throw new InvalidDelegationSource(params.source);\n            }\n\n            return [4\n            /*yield*/\n            , this.estimate(params, this.estimator.setDelegate.bind(this.estimator))];\n\n          case 1:\n            estimate = _c.sent();\n            return [4\n            /*yield*/\n            , createSetDelegateOperation(__assign(__assign({}, params), estimate))];\n\n          case 2:\n            operation = _c.sent();\n            _a = params.source;\n            if (_a) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 3:\n            _a = _c.sent();\n            _c.label = 4;\n\n          case 4:\n            sourceOrDefault = _a;\n            return [4\n            /*yield*/\n            , this.prepareAndForge({\n              operation: operation,\n              source: sourceOrDefault\n            })];\n\n          case 5:\n            opBytes = _c.sent();\n            return [4\n            /*yield*/\n            , this.signAndInject(opBytes)];\n\n          case 6:\n            _b = _c.sent(), hash = _b.hash, context = _b.context, forgedBytes = _b.forgedBytes, opResponse = _b.opResponse;\n            return [2\n            /*return*/\n            , new DelegateOperation(hash, operation, sourceOrDefault, forgedBytes, opResponse, context)];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Register the current address as delegate. Will sign and inject an operation using the current context\r\n   *\r\n   * @returns An operation handle with the result from the rpc node\r\n   *\r\n   * @param RegisterDelegate operation parameter\r\n   */\n\n\n  RpcContractProvider.prototype.registerDelegate = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var estimate, source, operation, opBytes, _a, hash, context, forgedBytes, opResponse;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.estimate(params, this.estimator.registerDelegate.bind(this.estimator))];\n\n          case 1:\n            estimate = _b.sent();\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 2:\n            source = _b.sent();\n            return [4\n            /*yield*/\n            , createRegisterDelegateOperation(__assign(__assign({}, params), estimate), source)];\n\n          case 3:\n            operation = _b.sent();\n            return [4\n            /*yield*/\n            , this.prepareAndForge({\n              operation: operation\n            })];\n\n          case 4:\n            opBytes = _b.sent();\n            return [4\n            /*yield*/\n            , this.signAndInject(opBytes)];\n\n          case 5:\n            _a = _b.sent(), hash = _a.hash, context = _a.context, forgedBytes = _a.forgedBytes, opResponse = _a.opResponse;\n            return [2\n            /*return*/\n            , new DelegateOperation(hash, operation, source, forgedBytes, opResponse, context)];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Transfer tz from current address to a specific address. Will sign and inject an operation using the current context\r\n   *\r\n   * @returns An operation handle with the result from the rpc node\r\n   *\r\n   * @param Transfer operation parameter\r\n   */\n\n\n  RpcContractProvider.prototype.transfer = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var estimate, operation, source, _a, opBytes, _b, hash, context, forgedBytes, opResponse;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.estimate(params, this.estimator.transfer.bind(this.estimator))];\n\n          case 1:\n            estimate = _c.sent();\n            return [4\n            /*yield*/\n            , createTransferOperation(__assign(__assign({}, params), estimate))];\n\n          case 2:\n            operation = _c.sent();\n            _a = params.source;\n            if (_a) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 3:\n            _a = _c.sent();\n            _c.label = 4;\n\n          case 4:\n            source = _a;\n            return [4\n            /*yield*/\n            , this.prepareAndForge({\n              operation: operation,\n              source: params.source\n            })];\n\n          case 5:\n            opBytes = _c.sent();\n            return [4\n            /*yield*/\n            , this.signAndInject(opBytes)];\n\n          case 6:\n            _b = _c.sent(), hash = _b.hash, context = _b.context, forgedBytes = _b.forgedBytes, opResponse = _b.opResponse;\n            return [2\n            /*return*/\n            , new TransactionOperation(hash, operation, source, forgedBytes, opResponse, context)];\n        }\n      });\n    });\n  };\n\n  RpcContractProvider.prototype.at = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var script, entrypoints, blockHeader, chainId;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.rpc.getScript(address)];\n\n          case 1:\n            script = _a.sent();\n            return [4\n            /*yield*/\n            , this.rpc.getEntrypoints(address)];\n\n          case 2:\n            entrypoints = _a.sent();\n            return [4\n            /*yield*/\n            , this.rpc.getBlockHeader()];\n\n          case 3:\n            blockHeader = _a.sent();\n            chainId = blockHeader.chain_id;\n            return [2\n            /*return*/\n            , new ContractAbstraction(address, script, this, this, entrypoints, chainId)];\n        }\n      });\n    });\n  };\n\n  return RpcContractProvider;\n}(OperationEmitter);\n\nvar BatchOperation =\n/** @class */\nfunction (_super) {\n  __extends(BatchOperation, _super);\n\n  function BatchOperation(hash, params, source, raw, results, context) {\n    var _this = _super.call(this, hash, raw, results, context) || this;\n\n    _this.params = params;\n    _this.source = source;\n    return _this;\n  }\n\n  BatchOperation.prototype.sumProp = function (arr, prop) {\n    return arr.reduce(function (prev, current) {\n      return prop in current ? Number(current[prop]) + prev : prev;\n    }, 0);\n  };\n\n  Object.defineProperty(BatchOperation.prototype, \"status\", {\n    get: function () {\n      return this.results.filter(function (result) {\n        return BATCH_KINDS.indexOf(result.kind) !== -1;\n      }).map(function (result) {\n        if (hasMetadataWithResult(result)) {\n          return result.metadata.operation_result.status;\n        } else {\n          return 'unknown';\n        }\n      })[0] || 'unknown';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BatchOperation.prototype, \"fee\", {\n    get: function () {\n      return this.sumProp(this.params, 'fee');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BatchOperation.prototype, \"gasLimit\", {\n    get: function () {\n      return this.sumProp(this.params, 'gas_limit');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BatchOperation.prototype, \"storageLimit\", {\n    get: function () {\n      return this.sumProp(this.params, 'storage_limit');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BatchOperation.prototype, \"consumedGas\", {\n    get: function () {\n      return String(this.sumProp(flattenOperationResult({\n        contents: this.results\n      }), 'consumed_gas'));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BatchOperation.prototype, \"storageDiff\", {\n    get: function () {\n      return String(this.sumProp(flattenOperationResult({\n        contents: this.results\n      }), 'paid_storage_size_diff'));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BatchOperation.prototype, \"errors\", {\n    get: function () {\n      return flattenErrors({\n        contents: this.results\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return BatchOperation;\n}(Operation);\n\nvar BATCH_KINDS = [OpKind.ACTIVATION, OpKind.ORIGINATION, OpKind.TRANSACTION, OpKind.DELEGATION];\n\nvar OperationBatch =\n/** @class */\nfunction (_super) {\n  __extends(OperationBatch, _super);\n\n  function OperationBatch(context, estimator) {\n    var _this = _super.call(this, context) || this;\n\n    _this.estimator = estimator;\n    _this.operations = [];\n    return _this;\n  }\n  /**\r\n   *\r\n   * @description Add a transaction operation to the batch\r\n   *\r\n   * @param params Transfer operation parameter\r\n   */\n\n\n  OperationBatch.prototype.withTransfer = function (params) {\n    this.operations.push(__assign({\n      kind: OpKind.TRANSACTION\n    }, params));\n    return this;\n  };\n  /**\r\n   *\r\n   * @description Add a transaction operation to the batch\r\n   *\r\n   * @param params Transfer operation parameter\r\n   */\n\n\n  OperationBatch.prototype.withContractCall = function (params) {\n    return this.withTransfer(params.toTransferParams());\n  };\n  /**\r\n   *\r\n   * @description Add a delegation operation to the batch\r\n   *\r\n   * @param params Delegation operation parameter\r\n   */\n\n\n  OperationBatch.prototype.withDelegation = function (params) {\n    this.operations.push(__assign({\n      kind: OpKind.DELEGATION\n    }, params));\n    return this;\n  };\n  /**\r\n   *\r\n   * @description Add an activation operation to the batch\r\n   *\r\n   * @param params Activation operation parameter\r\n   */\n\n\n  OperationBatch.prototype.withActivation = function (_a) {\n    var pkh = _a.pkh,\n        secret = _a.secret;\n    this.operations.push({\n      kind: OpKind.ACTIVATION,\n      pkh: pkh,\n      secret: secret\n    });\n    return this;\n  };\n  /**\r\n   *\r\n   * @description Add an origination operation to the batch\r\n   *\r\n   * @param params Origination operation parameter\r\n   */\n\n\n  OperationBatch.prototype.withOrigination = function (params) {\n    this.operations.push(__assign({\n      kind: OpKind.ORIGINATION\n    }, params));\n    return this;\n  };\n\n  OperationBatch.prototype.getRPCOp = function (param) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (param.kind) {\n          case OpKind.TRANSACTION:\n            return [2\n            /*return*/\n            , createTransferOperation(__assign({}, param))];\n\n          case OpKind.ORIGINATION:\n            return [2\n            /*return*/\n            , createOriginationOperation(__assign({}, param))];\n\n          case OpKind.DELEGATION:\n            return [2\n            /*return*/\n            , createSetDelegateOperation(__assign({}, param))];\n\n          case OpKind.ACTIVATION:\n            return [2\n            /*return*/\n            , __assign({}, param)];\n\n          default:\n            throw new Error(\"Unsupported operation kind: \" + param.kind);\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @description Add a group operation to the batch. Operation will be applied in the order they are in the params array\r\n   *\r\n   * @param params Operations parameter\r\n   */\n\n\n  OperationBatch.prototype.with = function (params) {\n    var e_1, _a;\n\n    try {\n      for (var params_1 = __values(params), params_1_1 = params_1.next(); !params_1_1.done; params_1_1 = params_1.next()) {\n        var param = params_1_1.value;\n\n        switch (param.kind) {\n          case OpKind.TRANSACTION:\n            this.withTransfer(param);\n            break;\n\n          case OpKind.ORIGINATION:\n            this.withOrigination(param);\n            break;\n\n          case OpKind.DELEGATION:\n            this.withDelegation(param);\n            break;\n\n          case OpKind.ACTIVATION:\n            this.withActivation(param);\n            break;\n\n          default:\n            throw new Error(\"Unsupported operation kind: \" + param.kind);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (params_1_1 && !params_1_1.done && (_a = params_1.return)) _a.call(params_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return this;\n  };\n  /**\r\n   *\r\n   * @description Forge and Inject the operation batch\r\n   *\r\n   * @param params Optionally specify the source of the operation\r\n   */\n\n\n  OperationBatch.prototype.send = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var estimates, ops, i, _a, _b, op, estimated, _c, _d, e_2_1, source, _e, opBytes, _f, hash, context, forgedBytes, opResponse;\n\n      var e_2, _g;\n\n      var _this = this;\n\n      return __generator(this, function (_h) {\n        switch (_h.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.estimator.batch(this.operations)];\n\n          case 1:\n            estimates = _h.sent();\n            ops = [];\n            i = 0;\n            _h.label = 2;\n\n          case 2:\n            _h.trys.push([2, 10, 11, 12]);\n\n            _a = __values(this.operations), _b = _a.next();\n            _h.label = 3;\n\n          case 3:\n            if (!!_b.done) return [3\n            /*break*/\n            , 9];\n            op = _b.value;\n            if (!isOpWithFee(op)) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this.estimate(op, function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  return [2\n                  /*return*/\n                  , estimates[i]];\n                });\n              });\n            })];\n\n          case 4:\n            estimated = _h.sent();\n            _d = (_c = ops).push;\n            return [4\n            /*yield*/\n            , this.getRPCOp(__assign(__assign({}, op), estimated))];\n\n          case 5:\n            _d.apply(_c, [_h.sent()]);\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            ops.push(__assign({}, op));\n            _h.label = 7;\n\n          case 7:\n            i++;\n            _h.label = 8;\n\n          case 8:\n            _b = _a.next();\n            return [3\n            /*break*/\n            , 3];\n\n          case 9:\n            return [3\n            /*break*/\n            , 12];\n\n          case 10:\n            e_2_1 = _h.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3\n            /*break*/\n            , 12];\n\n          case 11:\n            try {\n              if (_b && !_b.done && (_g = _a.return)) _g.call(_a);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 12:\n            _e = params && params.source;\n            if (_e) return [3\n            /*break*/\n            , 14];\n            return [4\n            /*yield*/\n            , this.signer.publicKeyHash()];\n\n          case 13:\n            _e = _h.sent();\n            _h.label = 14;\n\n          case 14:\n            source = _e;\n            return [4\n            /*yield*/\n            , this.prepareAndForge({\n              operation: ops,\n              source: source\n            })];\n\n          case 15:\n            opBytes = _h.sent();\n            return [4\n            /*yield*/\n            , this.signAndInject(opBytes)];\n\n          case 16:\n            _f = _h.sent(), hash = _f.hash, context = _f.context, forgedBytes = _f.forgedBytes, opResponse = _f.opResponse;\n            return [2\n            /*return*/\n            , new BatchOperation(hash, ops, source, forgedBytes, opResponse, context)];\n        }\n      });\n    });\n  };\n\n  return OperationBatch;\n}(OperationEmitter);\n\nvar RPCBatchProvider =\n/** @class */\nfunction () {\n  function RPCBatchProvider(context, estimator) {\n    this.context = context;\n    this.estimator = estimator;\n  }\n  /***\r\n   *\r\n   * @description Batch a group of operation together. Operations will be applied in the order in which they are added to the batch\r\n   *\r\n   * @param params List of operation to batch together\r\n   */\n\n\n  RPCBatchProvider.prototype.batch = function (params) {\n    var batch = new OperationBatch(this.context, this.estimator);\n\n    if (Array.isArray(params)) {\n      batch.with(params);\n    }\n\n    return batch;\n  };\n\n  return RPCBatchProvider;\n}();\n\nvar defaultConfig = {\n  confirmationPollingIntervalSecond: 10,\n  defaultConfirmationCount: 1,\n  confirmationPollingTimeoutSecond: 180,\n  shouldObservableSubscriptionRetry: false\n};\n/**\r\n * @description Encapsulate common service used throughout different part of the library\r\n */\n\nvar Context =\n/** @class */\nfunction () {\n  function Context(_rpc, _signer, _proto, _config, forger, injector, wallet) {\n    if (_signer === void 0) {\n      _signer = new NoopSigner();\n    }\n\n    this._rpc = _rpc;\n    this._signer = _signer;\n    this._proto = _proto;\n    this._config = _config;\n    this.tz = new RpcTzProvider(this);\n    this.estimate = new RPCEstimateProvider(this);\n    this.contract = new RpcContractProvider(this, this.estimate);\n    this.batch = new RPCBatchProvider(this, this.estimate);\n    this.wallet = new Wallet(this);\n\n    if (typeof this._rpc === 'string') {\n      this._rpcClient = new RpcClient(this._rpc);\n    } else {\n      this._rpcClient = this._rpc;\n    }\n\n    this.config = _config;\n    this._forger = forger ? forger : new RpcForger(this);\n    this._injector = injector ? injector : new RpcInjector(this);\n    this.operationFactory = new OperationFactory(this);\n    this._walletProvider = wallet ? wallet : new LegacyWalletProvider(this);\n  }\n\n  Object.defineProperty(Context.prototype, \"config\", {\n    get: function () {\n      return this._config;\n    },\n    set: function (value) {\n      this._config = __assign(__assign({}, defaultConfig), value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"rpc\", {\n    get: function () {\n      return this._rpcClient;\n    },\n    set: function (value) {\n      this._rpcClient = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"injector\", {\n    get: function () {\n      return this._injector;\n    },\n    set: function (value) {\n      this._injector = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"forger\", {\n    get: function () {\n      return this._forger;\n    },\n    set: function (value) {\n      this._forger = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"signer\", {\n    get: function () {\n      return this._signer;\n    },\n    set: function (value) {\n      this._signer = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"walletProvider\", {\n    get: function () {\n      return this._walletProvider;\n    },\n    set: function (value) {\n      this._walletProvider = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"proto\", {\n    get: function () {\n      return this._proto;\n    },\n    set: function (value) {\n      this._proto = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Context.prototype.isAnyProtocolActive = function (protocol) {\n    if (protocol === void 0) {\n      protocol = [];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var next_protocol;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._proto) return [3\n            /*break*/\n            , 1];\n            return [2\n            /*return*/\n            , protocol.includes(this._proto)];\n\n          case 1:\n            return [4\n            /*yield*/\n            , this.rpc.getBlockMetadata()];\n\n          case 2:\n            next_protocol = _a.sent().next_protocol;\n            return [2\n            /*return*/\n            , protocol.includes(next_protocol)];\n        }\n      });\n    });\n  };\n  /**\r\n   * @description Create a copy of the current context. Useful when you have long running operation and you do not want a context change to affect the operation\r\n   */\n\n\n  Context.prototype.clone = function () {\n    return new Context(this.rpc, this.signer, this.proto, this.config, this.forger, this._injector);\n  };\n\n  return Context;\n}();\n\nvar opHashFilter = function (op, filter) {\n  return op.hash === filter.opHash;\n};\n\nvar sourceFilter = function (x, filter) {\n  switch (x.kind) {\n    case 'endorsement':\n      return 'metadata' in x && x.metadata.delegate === filter.source;\n\n    case 'activate_account':\n      return 'metadata' in x && x.pkh === filter.source;\n\n    default:\n      return 'source' in x && x.source === filter.source;\n  }\n};\n\nvar kindFilter = function (x, filter) {\n  return 'kind' in x && x.kind === filter.kind;\n};\n\nvar destinationFilter = function (x, filter) {\n  switch (x.kind) {\n    case 'delegation':\n      return x.delegate === filter.destination;\n\n    case 'origination':\n      if ('metadata' in x && 'operation_result' in x.metadata && 'originated_contracts' in x.metadata.operation_result && Array.isArray(x.metadata.operation_result.originated_contracts)) {\n        return x.metadata.operation_result.originated_contracts.some(function (contract) {\n          return contract === filter.destination;\n        });\n      }\n\n      break;\n\n    case 'transaction':\n      return x.destination === filter.destination;\n\n    default:\n      return false;\n  }\n};\n\nvar evaluateOpFilter = function (op, filter) {\n  if ('opHash' in filter) {\n    return opHashFilter(op, filter);\n  } else if ('source' in filter) {\n    return sourceFilter(op, filter);\n  } else if ('kind' in filter) {\n    return kindFilter(op, filter);\n  } else if ('destination' in filter) {\n    return destinationFilter(op, filter);\n  }\n\n  return false;\n};\n\nvar evaluateExpression = function (op, exp) {\n  if (Array.isArray(exp.and)) {\n    return exp.and.every(function (x) {\n      return evaluateFilter(op, x);\n    });\n  } else if (Array.isArray(exp.or)) {\n    return exp.or.some(function (x) {\n      return evaluateFilter(op, x);\n    });\n  } else {\n    throw new Error('Filter expression must contains either and/or property');\n  }\n};\n\nvar evaluateFilter = function (op, filter) {\n  var filters = [];\n\n  if (!Array.isArray(filter)) {\n    filters.push(filter);\n  } else {\n    filters.push.apply(filters, __spread(filter));\n  }\n\n  return filters.every(function (filterOrExp) {\n    if ('and' in filterOrExp || 'or' in filterOrExp) {\n      return evaluateExpression(op, filterOrExp);\n    } else {\n      return evaluateOpFilter(op, filterOrExp);\n    }\n  });\n};\n\nvar ObservableSubscription =\n/** @class */\nfunction () {\n  function ObservableSubscription(obs, shouldRetry) {\n    var _this = this;\n\n    if (shouldRetry === void 0) {\n      shouldRetry = false;\n    }\n\n    this.shouldRetry = shouldRetry;\n    this.errorListeners = [];\n    this.messageListeners = [];\n    this.closeListeners = [];\n    this.completed$ = new Subject();\n    obs.pipe(takeUntil(this.completed$), tap(function (data) {\n      _this.call(_this.messageListeners, data);\n    }, function (error) {\n      _this.call(_this.errorListeners, error);\n    }, function () {\n      _this.call(_this.closeListeners);\n    }), this.shouldRetry ? retry() : tap(), catchError(function () {\n      return NEVER;\n    })).subscribe();\n  }\n\n  ObservableSubscription.prototype.call = function (listeners, value) {\n    var e_1, _a;\n\n    try {\n      for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\n        var l = listeners_1_1.value;\n\n        try {\n          l(value);\n        } catch (ex) {\n          console.error(ex);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  ObservableSubscription.prototype.remove = function (listeners, value) {\n    var idx = listeners.indexOf(value);\n\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    }\n  };\n\n  ObservableSubscription.prototype.on = function (type, cb) {\n    switch (type) {\n      case 'data':\n        this.messageListeners.push(cb);\n        break;\n\n      case 'error':\n        this.errorListeners.push(cb);\n        break;\n\n      case 'close':\n        this.closeListeners.push(cb);\n        break;\n\n      default:\n        throw new Error(\"Trying to register on an unsupported event: \" + type);\n    }\n  };\n\n  ObservableSubscription.prototype.off = function (type, cb) {\n    switch (type) {\n      case 'data':\n        this.remove(this.messageListeners, cb);\n        break;\n\n      case 'error':\n        this.remove(this.errorListeners, cb);\n        break;\n\n      case 'close':\n        this.remove(this.closeListeners, cb);\n        break;\n\n      default:\n        throw new Error(\"Trying to unregister on an unsupported event: \" + type);\n    }\n  };\n\n  ObservableSubscription.prototype.close = function () {\n    this.completed$.next();\n  };\n\n  return ObservableSubscription;\n}();\n\nvar getLastBlock = function (context) {\n  return from(context.rpc.getBlock()).pipe(first());\n};\n\nvar applyFilter = function (filter) {\n  return concatMap(function (block) {\n    return new Observable(function (sub) {\n      var e_1, _a, e_2, _b, e_3, _c;\n\n      try {\n        for (var _d = __values(block.operations), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var ops = _e.value;\n\n          try {\n            for (var ops_1 = (e_2 = void 0, __values(ops)), ops_1_1 = ops_1.next(); !ops_1_1.done; ops_1_1 = ops_1.next()) {\n              var op = ops_1_1.value;\n\n              try {\n                for (var _f = (e_3 = void 0, __values(op.contents)), _g = _f.next(); !_g.done; _g = _f.next()) {\n                  var content = _g.value;\n\n                  if (evaluateFilter(__assign({\n                    hash: op.hash\n                  }, content), filter)) {\n                    sub.next(__assign({\n                      hash: op.hash\n                    }, content));\n                  }\n                }\n              } catch (e_3_1) {\n                e_3 = {\n                  error: e_3_1\n                };\n              } finally {\n                try {\n                  if (_g && !_g.done && (_c = _f.return)) _c.call(_f);\n                } finally {\n                  if (e_3) throw e_3.error;\n                }\n              }\n            }\n          } catch (e_2_1) {\n            e_2 = {\n              error: e_2_1\n            };\n          } finally {\n            try {\n              if (ops_1_1 && !ops_1_1.done && (_b = ops_1.return)) _b.call(ops_1);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      sub.complete();\n    });\n  });\n};\n\nvar PollingSubscribeProvider =\n/** @class */\nfunction () {\n  function PollingSubscribeProvider(context, POLL_INTERVAL) {\n    var _this = this;\n\n    if (POLL_INTERVAL === void 0) {\n      POLL_INTERVAL = 20000;\n    }\n\n    this.context = context;\n    this.POLL_INTERVAL = POLL_INTERVAL;\n    this.newBlock$ = timer(0, this.POLL_INTERVAL).pipe(map(function () {\n      return _this.context;\n    }), switchMap(getLastBlock), distinctUntilKeyChanged('hash'), publishReplay(), refCount());\n  }\n\n  PollingSubscribeProvider.prototype.subscribe = function (_filter) {\n    return new ObservableSubscription(this.newBlock$.pipe(pluck('hash')), this.context.config.shouldObservableSubscriptionRetry);\n  };\n\n  PollingSubscribeProvider.prototype.subscribeOperation = function (filter) {\n    return new ObservableSubscription(this.newBlock$.pipe(applyFilter(filter)), this.context.config.shouldObservableSubscriptionRetry);\n  };\n\n  return PollingSubscribeProvider;\n}();\n\nvar ForgingMismatchError =\n/** @class */\nfunction () {\n  function ForgingMismatchError(results) {\n    this.results = results;\n    this.name = 'ForgingMismatchError';\n    this.message = 'Forging mismatch error';\n  }\n\n  return ForgingMismatchError;\n}();\n\nvar CompositeForger =\n/** @class */\nfunction () {\n  function CompositeForger(forgers) {\n    this.forgers = forgers;\n\n    if (forgers.length === 0) {\n      throw new Error('At least one forger must be specified');\n    }\n  }\n\n  CompositeForger.prototype.forge = function (_a) {\n    var branch = _a.branch,\n        contents = _a.contents;\n    return __awaiter(this, void 0, void 0, function () {\n      var results, lastResult, currentResult;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all(this.forgers.map(function (forger) {\n              return forger.forge({\n                branch: branch,\n                contents: contents\n              });\n            }))];\n\n          case 1:\n            results = _b.sent();\n\n            if (results.length === 0) {\n              throw new Error('At least one forger must be specified');\n            }\n\n            lastResult = results.pop();\n\n            while (results.length) {\n              currentResult = results.pop();\n\n              if (currentResult !== lastResult) {\n                throw new ForgingMismatchError([lastResult, currentResult]);\n              }\n\n              lastResult = currentResult;\n            }\n\n            return [2\n            /*return*/\n            , lastResult];\n        }\n      });\n    });\n  };\n\n  return CompositeForger;\n}();\n/**\r\n * @description Facade class that surfaces all of the libraries capability and allow it's configuration\r\n *\r\n * @param _rpc The RPC server to use\r\n */\n\n\nvar TezosToolkit =\n/** @class */\nfunction () {\n  function TezosToolkit(_rpc, _context) {\n    if (_context === void 0) {\n      _context = new Context(_rpc);\n    }\n\n    this._rpc = _rpc;\n    this._context = _context;\n    this._options = {};\n    this.format = format;\n    this.batch = this._context.batch.batch.bind(this._context.batch);\n\n    if (typeof this._rpc === 'string') {\n      this._rpcClient = new RpcClient(this._rpc);\n    } else {\n      this._rpcClient = this._rpc;\n    }\n\n    this._wallet = new Wallet(this._context);\n    this.setProvider({\n      rpc: this._rpcClient\n    });\n  }\n  /**\r\n   * @description Sets configuration on the Tezos Taquito instance. Allows user to choose which signer, rpc client, rpc url, forger and so forth\r\n   *\r\n   * @param options rpc url or rpcClient to use to interact with the Tezos network\r\n   *\r\n   * @example Tezos.setProvider({rpc: 'https://api.tez.ie/rpc/mainnet', signer: new InMemorySigner.fromSecretKey(“edsk...”)})\r\n   * @example Tezos.setProvider({ config: { confirmationPollingTimeoutSecond: 300 }})\r\n   *\r\n   */\n\n\n  TezosToolkit.prototype.setProvider = function (_a) {\n    var rpc = _a.rpc,\n        stream = _a.stream,\n        signer = _a.signer,\n        protocol = _a.protocol,\n        config = _a.config,\n        forger = _a.forger,\n        wallet = _a.wallet;\n    this.setRpcProvider(rpc);\n    this.setStreamProvider(stream);\n    this.setSignerProvider(signer);\n    this.setForgerProvider(forger);\n    this.setWalletProvider(wallet);\n    this._context.proto = protocol;\n    this._context.config = config;\n  };\n  /**\r\n   * @description Sets signer provider on the Tezos Taquito instance.\r\n   *\r\n   * @param options signer to use to interact with the Tezos network\r\n   *\r\n   * @example Tezos.setSignerProvider(new InMemorySigner.fromSecretKey('edsk...'))\r\n   *\r\n   */\n\n\n  TezosToolkit.prototype.setSignerProvider = function (signer) {\n    if (!this._options.signer && typeof signer === 'undefined') {\n      this._context.signer = new NoopSigner();\n      this._options.signer = signer;\n    } else if (typeof signer !== 'undefined') {\n      this._context.signer = signer;\n      this._options.signer = signer;\n    }\n  };\n  /**\r\n   * @description Sets rpc provider on the Tezos Taquito instance\r\n   *\r\n   * @param options rpc url or rpcClient to use to interact with the Tezos network\r\n   *\r\n   * @example Tezos.setRpcProvider('https://api.tez.ie/rpc/mainnet')\r\n   *\r\n   */\n\n\n  TezosToolkit.prototype.setRpcProvider = function (rpc) {\n    if (typeof rpc === 'string') {\n      this._rpcClient = new RpcClient(rpc);\n    } else if (rpc instanceof RpcClient) {\n      this._rpcClient = rpc;\n    }\n    /*     else if (this._options.rpc === undefined) {\r\n          this._rpcClient = new RpcClient();\r\n        } */\n\n\n    this._options.rpc = this._rpcClient;\n    this._context.rpc = this._rpcClient;\n  };\n  /**\r\n   * @description Sets forger provider on the Tezos Taquito instance\r\n   *\r\n   * @param options forger to use to interact with the Tezos network\r\n   *\r\n   * @example Tezos.setForgerProvider(localForger)\r\n   *\r\n   */\n\n\n  TezosToolkit.prototype.setForgerProvider = function (forger) {\n    var f = typeof forger === 'undefined' ? this.getFactory(RpcForger)() : forger;\n    this._options.forger = f;\n    this._context.forger = f;\n  };\n  /**\r\n   * @description Sets stream provider on the Tezos Taquito instance\r\n   *\r\n   * @param options stream to use to interact with the Tezos network\r\n   *\r\n   * @example Tezos.setStreamProvider(...)\r\n   *\r\n   */\n\n\n  TezosToolkit.prototype.setStreamProvider = function (stream) {\n    if (typeof stream === 'string') {\n      this._stream = new PollingSubscribeProvider(new Context(new RpcClient(stream)));\n    } else if (typeof stream !== 'undefined') {\n      this._stream = stream;\n    } else if (this._options.stream === undefined) {\n      this._stream = this.getFactory(PollingSubscribeProvider)();\n    }\n\n    this._options.stream = stream;\n  };\n  /**\r\n   * @description Sets wallet provider on the Tezos Taquito instance\r\n   *\r\n   * @param options wallet to use to interact with the Tezos network\r\n   *\r\n   * @example Tezos.setWalletProvider(...)\r\n   *\r\n   */\n\n\n  TezosToolkit.prototype.setWalletProvider = function (wallet) {\n    if (!this._options.wallet && typeof wallet === 'undefined') {\n      var w = this.getFactory(LegacyWalletProvider)();\n      this._options.wallet = w;\n      this._context.walletProvider = w;\n    } else if (typeof wallet !== 'undefined') {\n      this._options.wallet = wallet;\n      this._context.walletProvider = wallet;\n    }\n  };\n\n  Object.defineProperty(TezosToolkit.prototype, \"tz\", {\n    /**\r\n     * @description Provide access to tezos account management\r\n     */\n    get: function () {\n      return this._context.tz;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TezosToolkit.prototype, \"contract\", {\n    /**\r\n     * @description Provide access to smart contract utilities\r\n     */\n    get: function () {\n      return this._context.contract;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TezosToolkit.prototype, \"wallet\", {\n    get: function () {\n      return this._wallet;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TezosToolkit.prototype, \"operation\", {\n    get: function () {\n      return this._context.operationFactory;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TezosToolkit.prototype, \"estimate\", {\n    /**\r\n     * @description Provide access to operation estimation utilities\r\n     */\n    get: function () {\n      return this._context.estimate;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TezosToolkit.prototype, \"stream\", {\n    /**\r\n     * @description Provide access to streaming utilities backed by an streamer implementation\r\n     */\n    get: function () {\n      return this._stream;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TezosToolkit.prototype, \"rpc\", {\n    /**\r\n     * @description Provide access to the currently used rpc client\r\n     */\n    get: function () {\n      return this._context.rpc;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TezosToolkit.prototype, \"signer\", {\n    /**\r\n     * @description Provide access to the currently used signer\r\n     */\n    get: function () {\n      return this._context.signer;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TezosToolkit.prototype.getFactory = function (ctor) {\n    var _this = this;\n\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return new (ctor.bind.apply(ctor, __spread([void 0, _this._context], args)))();\n    };\n  };\n\n  return TezosToolkit;\n}();\n\nexport { BigMapAbstraction, ChainIds, CompositeForger, Context, ContractAbstraction, ContractMethod, ContractView, DEFAULT_FEE, DEFAULT_GAS_LIMIT, DEFAULT_STORAGE_LIMIT, DefaultLambdaAddresses, DelegationWalletOperation, InvalidDelegationSource, InvalidParameterError, LegacyWalletProvider, MANAGER_LAMBDA, MissedBlockDuringConfirmationError, OriginationWalletOperation, PollingSubscribeProvider, Protocols, RpcForger, TezosOperationError, TezosPreapplyFailureError, TezosToolkit, TransactionWalletOperation, UndefinedLambdaContractError, Wallet, WalletOperation, WalletOperationBatch, createOriginationOperation, createRegisterDelegateOperation, createSetDelegateOperation, createTransferOperation, defaultConfig, protocols };","map":{"version":3,"mappings":"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","names":["OpKind","RpcClient","combineLatest","ReplaySubject","from","defer","timer","throwError","of","range","concat","Subject","NEVER","Observable","distinctUntilChanged","map","takeWhile","tap","shareReplay","filter","first","switchMap","distinctUntilKeyChanged","timeoutWith","startWith","concatMap","mapTo","switchMapTo","takeUntil","retry","catchError","pluck","publishReplay","refCount","BigNumber","Schema","ParameterSchema","MichelsonMap","UnitValue","Parser","encodeExpr","HttpResponseError","STATUS_CODE","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","RpcForger","context","forge","_a","branch","contents","rpc","forgeOperations","RpcInjector","inject","signedOperationBytes","injectOperation","UnconfiguredSignerError","name","message","NoopSigner","publicKey","publicKeyHash","secretKey","sign","_bytes","_watermark","attachKind","kind","findWithKind","arr","isArray","found","find","isKind","isOpWithFee","isOpRequireReveal","hasMetadata","hasMetadataWithResult","metadata","hasMetadataWithInternalOperationResult","isErrorWithMessage","TezosOperationError","errors","lastError","id","with","string","TezosPreapplyFailureError","flattenOperationResult","response","results","returnedResults","j","content","fee","operation_result","internal_operation_results","forEach","x","flattenErrors","status","e_1","_b","_c","internalResult","e_1_1","return","receiptFromOperation","ALLOCATION_BURN","ORIGINATION_BURN","operationResults","totalGas","totalStorage","totalFee","totalOriginationBurn","totalAllocationBurn","totalPaidStorageDiff","plus","originated_contracts","consumed_gas","Number","paid_storage_size_diff","totalStorageBurn","multipliedBy","MissedBlockDuringConfirmationError","MAX_BRANCH_ANCESTORS","WalletOperation","opHash","_newHead$","_this","_operationResult","_includedInBlock","_included","newHead$","pipe","newHead","lastHead","header","level","bufferSize","confirmed$","head","e_2","operations","_d","opGroup","opGroup_1","opGroup_1_1","hash","e_2_1","subscribe","toPromise","receipt","getCurrentConfirmation","getBlock","foundAtBlock","isInCurrentBranch","tipBlockIdentifier","tipBlockHeader","inclusionBlock","levelDiff","tipBlockLevel","blocks","getBlockHeader","block","Math","min","Set","bind","getLiveBlocks","String","has","confirmationObservable","confirmations","Error","defaultConfirmationCount","config","conf","undefined","previousHead","expectedConfirmation","currentConfirmation","completed","confirmation","DelegationWalletOperation","_super","revealOperation","operationResult","REVEAL","delegationOperation","DELEGATION","OriginationWalletOperation","originationOperation","ORIGINATION","contract","address","wallet","at","TransactionWalletOperation","transactionOperation","TRANSACTION","cacheUntil","cacheUntilObs","source","subject","createNewPollingBasedHeadObservable","pollingTimer","sharedHeadOb","scheduler","confirmationPollingTimeoutSecond","OperationFactory","sharedHeadObs","createNewHeadObservable","confirmationPollingIntervalSecond","createPastBlockWalker","startBlock","count","createHeadObservableFromConfig","blockIdentifier","observableSequence","createOperation","clone","createTransactionOperation","createDelegationOperation","createOriginationOperation","DEFAULT_GAS_LIMIT","DEFAULT_FEE","DEFAULT_STORAGE_LIMIT","Protocols","protocols","Pt24m4xi","PsBABY5H","PsBabyM1","PsCARTHA","PsDELPH1","DefaultLambdaAddresses","ChainIds","OperationEmitter","defineProperty","get","enumerable","configurable","signer","prepareOperation","operation","counter","counters","requiresReveal","blockHeaderPromise","blockMetaPromise","counterPromise","managerPromise","counter_1","headCounter","manager","haveManager","reveal","getFee","getSource","constructOps","protocol","getBlockMetadata","getContract","getManagerKey","all","key","public_key","gas_limit","storage_limit","unshift","parseInt","opCounter","cOps","ACTIVATION","balance","cops","amount","toLowerCase","startsWith","next_protocol","opOb","prepareAndForge","params","prepared","forgedBytes","forger","opbytes","simulate","runOperation","opResponse","estimate","estimator","gasLimit","storageLimit","rest","calculatedFee","calculatedGas","calculatedStorage","estimation","suggestedFeeMutez","signAndInject","signed","Uint8Array","sbytes","signature","prefixSig","preapplyOperations","injector","Operation","raw","_pollingConfig$","_currentHeadPromise","currentHead$","polling$","timeout","interval","timeoutAt","ceil","_foundAt","POSITIVE_INFINITY","RpcTzProvider","getBalance","getDelegate","activate","pkh","secret","bytes","MINIMAL_FEE_MUTEZ","MINIMAL_FEE_PER_BYTE_MUTEZ","MINIMAL_FEE_PER_GAS_MUTEZ","GAS_BUFFER","Estimate","_milligasLimit","_storageLimit","opSize","minimalFeePerStorageByteMutez","baseFeeMutez","roundUp","limit","max","nanotez","operationFeeMutez","minimalFeeMutez","burnFeeMutez","TZ_DECIMALS","MTZ_DECIMALS","getDecimal","format","to","bigNum","isNaN","pow","dividedBy","code","init","delegate","storage","_e","parser","contractCode","c","order_1","contractStorage","storageType","schema","script","_f","expandMacros","parseScript","parseJSON","sort","a","prim","args","Encode","parseMichelineExpression","toString","createTransferOperation","parameter","TRANSFER","mutez","destination","parameters","createSetDelegateOperation","createRegisterDelegateOperation","mergeLimits","userDefinedLimit","defaultLimits","SIGNATURE_STUB","RPCEstimateProvider","ALLOCATION_STORAGE","ORIGINATION_STORAGE","getAccountLimits","hard_gas_limit_per_operation","hard_storage_limit_per_operation","cost_per_byte","getConstants","toNumber","floor","createEstimateFromOperationContent","size","costPerByte","totalMilligas","consumed_milligas","createEstimate","getChainId","chain_id","shift","originate","DEFAULT_PARAMS","transfer","setDelegate","sourceOrDefault","batch","params_1","params_1_1","param","_g","_h","_j","_k","registerDelegate","DelegateOperation","delegationOp","consumedGas","OriginationOperation","contractProvider","originatedContracts","contractAddress","originationOp","storageDiff","storageSize","storage_size","TransactionOperation","transactionOp","txResult","sumProp","prop","reduce","prev","current","InvalidParameterError","smartContractMethodName","sigs","JSON","stringify","UndefinedLambdaContractError","InvalidDelegationSource","transferImplicit","int","removeDelegate","transferToContract","MANAGER_LAMBDA","WalletOperationBatch","walletProvider","operationFactory","withTransfer","withContractCall","toTransferParams","withDelegation","withOrigination","mapOperation","mapTransferParamsToWalletParams","mapOriginateParamsToWalletParams","mapDelegateParamsToWalletParams","send","sendOperations","Wallet","walletCommand","forceRefetch","_pkh","getPKH","mappedParams","entrypoints","blockHeader","chainId","getScript","getEntrypoints","ContractAbstraction","LegacyWalletProvider","LambdaView","lambdaContract","viewContract","viewMethod","contractParameter","voidLambda","createVoidLambda","execute","ex_1","failedWith","methods","default","getView","callback","contractArgs","entrypoint","callbackContract","DEFAULT_SMART_CONTRACT_METHOD_NAME","ContractMethod","provider","parameterSchema","isMultipleEntrypoint","isAnonymous","ExtractSchema","fullTransferParams","ContractView","currentContract","callbackParametersSchema","read","customLambdaAddress","lambdaAddress","arg","lambdaView","CARTHAGENET","DELPHINET","MAINNET","Execute","validateArgs","ExtractSignatures","isView","isContractProvider","variableToCheck","contractProviderTypeSymbol","storageProvider","views","fromRPCResponse","_initializeMethods","keys","isMultipleEntryPoint","smartContractMethodSchema","method","_i","view","entrypointParamWithoutCallback","smartContractMethodSchemaWithoutCallback","parametersCallback","smartContractMethodCallbackSchema","anonymousMethods","smartContractMethodSchema_1","getStorage","bigMap","getBigMapKey","BigMapAbstraction","keyToEncode","getBigMapKeyByID","NOT_FOUND","toJSON","smartContractAbstractionSemantic","big_map","val","RpcContractProvider","for","contractSchema","isSchema","encodedKey","EncodeBigMapKey","ExecuteOnBigMapValue","type","packed","encodedExpr","bigMapValue","packData","data","getBigMapExpr","preparedOrigination","forgedOrigination","opBytes","test","BatchOperation","BATCH_KINDS","OperationBatch","withActivation","getRPCOp","estimates","estimated","RPCBatchProvider","defaultConfig","shouldObservableSubscriptionRetry","Context","_rpc","_signer","_proto","_config","tz","_rpcClient","_forger","_injector","_walletProvider","set","isAnyProtocolActive","includes","proto","opHashFilter","sourceFilter","kindFilter","destinationFilter","some","evaluateOpFilter","evaluateExpression","exp","and","every","evaluateFilter","or","filters","filterOrExp","ObservableSubscription","obs","shouldRetry","errorListeners","messageListeners","closeListeners","completed$","listeners","listeners_1","listeners_1_1","l","ex","console","remove","idx","splice","on","cb","off","close","getLastBlock","applyFilter","sub","e_3","ops_1","ops_1_1","e_3_1","complete","PollingSubscribeProvider","POLL_INTERVAL","newBlock$","_filter","subscribeOperation","ForgingMismatchError","CompositeForger","forgers","lastResult","currentResult","TezosToolkit","_context","_options","_wallet","setProvider","stream","setRpcProvider","setStreamProvider","setSignerProvider","setForgerProvider","setWalletProvider","getFactory","_stream","w","ctor"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@taquito/taquito/dist/taquito.es5.js"],"sourcesContent":["import { OpKind, RpcClient } from '@taquito/rpc';\nexport { OpKind } from '@taquito/rpc';\nimport { combineLatest, ReplaySubject, from, defer, timer, throwError, of, range, concat, Subject, NEVER, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, takeWhile, tap, shareReplay, filter, first, switchMap, distinctUntilKeyChanged, timeoutWith, startWith, concatMap, mapTo, switchMapTo, takeUntil, retry, catchError, pluck, publishReplay, refCount } from 'rxjs/operators';\nimport BigNumber from 'bignumber.js';\nimport { Schema, ParameterSchema } from '@taquito/michelson-encoder';\nexport { MichelsonMap, UnitValue } from '@taquito/michelson-encoder';\nimport { Parser } from '@taquito/michel-codec';\nimport { encodeExpr } from '@taquito/utils';\nimport { HttpResponseError, STATUS_CODE } from '@taquito/http-utils';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar RpcForger = /** @class */ (function () {\r\n    function RpcForger(context) {\r\n        this.context = context;\r\n    }\r\n    RpcForger.prototype.forge = function (_a) {\r\n        var branch = _a.branch, contents = _a.contents;\r\n        return this.context.rpc.forgeOperations({ branch: branch, contents: contents });\r\n    };\r\n    return RpcForger;\r\n}());\n\nvar RpcInjector = /** @class */ (function () {\r\n    function RpcInjector(context) {\r\n        this.context = context;\r\n    }\r\n    RpcInjector.prototype.inject = function (signedOperationBytes) {\r\n        return this.context.rpc.injectOperation(signedOperationBytes);\r\n    };\r\n    return RpcInjector;\r\n}());\n\nvar UnconfiguredSignerError = /** @class */ (function () {\r\n    function UnconfiguredSignerError() {\r\n        this.name = 'UnconfiguredSignerError';\r\n        this.message = 'No signer has been configured. Please configure one by calling setProvider({signer}) on your TezosToolkit instance.';\r\n    }\r\n    return UnconfiguredSignerError;\r\n}());\r\n/**\r\n * @description Default signer implementation which does nothing and produce invalid signature\r\n */\r\nvar NoopSigner = /** @class */ (function () {\r\n    function NoopSigner() {\r\n    }\r\n    NoopSigner.prototype.publicKey = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                throw new UnconfiguredSignerError();\r\n            });\r\n        });\r\n    };\r\n    NoopSigner.prototype.publicKeyHash = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                throw new UnconfiguredSignerError();\r\n            });\r\n        });\r\n    };\r\n    NoopSigner.prototype.secretKey = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                throw new UnconfiguredSignerError();\r\n            });\r\n        });\r\n    };\r\n    NoopSigner.prototype.sign = function (_bytes, _watermark) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                throw new UnconfiguredSignerError();\r\n            });\r\n        });\r\n    };\r\n    return NoopSigner;\r\n}());\n\nvar attachKind = function (op, kind) {\r\n    return __assign(__assign({}, op), { kind: kind });\r\n};\r\nvar findWithKind = function (arr, kind) {\r\n    if (Array.isArray(arr)) {\r\n        var found = arr.find(function (op) { return op.kind === kind; });\r\n        if (found && isKind(found, kind)) {\r\n            return found;\r\n        }\r\n    }\r\n};\r\nvar isKind = function (op, kind) {\r\n    return op.kind === kind;\r\n};\r\nvar isOpWithFee = function (op) {\r\n    return ['transaction', 'delegation', 'origination', 'reveal'].indexOf(op.kind) !== -1;\r\n};\r\nvar isOpRequireReveal = function (op) {\r\n    return ['transaction', 'delegation', 'origination'].indexOf(op.kind) !== -1;\r\n};\r\nvar hasMetadata = function (op) {\r\n    return 'metadata' in op;\r\n};\r\nvar hasMetadataWithResult = function (op) {\r\n    return hasMetadata(op) && 'operation_result' in op.metadata;\r\n};\r\nvar hasMetadataWithInternalOperationResult = function (op) {\r\n    return hasMetadata(op) && 'internal_operation_results' in op.metadata;\r\n};\n\nvar isErrorWithMessage = function (error) {\r\n    return 'with' in error;\r\n};\r\nvar TezosOperationError = /** @class */ (function () {\r\n    function TezosOperationError(errors) {\r\n        this.errors = errors;\r\n        this.name = 'TezosOperationError';\r\n        // Last error is 'often' the one with more detail\r\n        var lastError = errors[errors.length - 1];\r\n        this.id = lastError.id;\r\n        this.kind = lastError.kind;\r\n        this.message = \"(\" + this.kind + \") \" + this.id;\r\n        if (isErrorWithMessage(lastError) && lastError.with.string) {\r\n            this.message = lastError.with.string;\r\n        }\r\n    }\r\n    return TezosOperationError;\r\n}());\r\nvar TezosPreapplyFailureError = /** @class */ (function () {\r\n    function TezosPreapplyFailureError(result) {\r\n        this.result = result;\r\n        this.name = 'TezosPreapplyFailureError';\r\n        this.message = 'Preapply returned an unexpected result';\r\n    }\r\n    return TezosPreapplyFailureError;\r\n}());\r\n// Flatten all operation content results and internal operation results into a single array\r\n// Some cases where we can have multiple operation results or internal operation results are:\r\n// - When an operation includes a reveal operation\r\n// - When an operation is made using the batch API\r\n// - Smart contract call can contains internal operation results when they call other smart contract internally or originate contracts\r\nvar flattenOperationResult = function (response) {\r\n    var results = Array.isArray(response) ? response : [response];\r\n    var returnedResults = [];\r\n    for (var i = 0; i < results.length; i++) {\r\n        for (var j = 0; j < results[i].contents.length; j++) {\r\n            var content = results[i].contents[j];\r\n            if (hasMetadataWithResult(content)) {\r\n                returnedResults.push(__assign({ fee: content.fee }, content.metadata.operation_result));\r\n                if (Array.isArray(content.metadata.internal_operation_results)) {\r\n                    content.metadata.internal_operation_results.forEach(function (x) { return returnedResults.push(x.result); });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return returnedResults;\r\n};\r\n/***\r\n * @description Flatten all error from preapply response (including internal error)\r\n */\r\nvar flattenErrors = function (response, status) {\r\n    var e_1, _a;\r\n    if (status === void 0) { status = 'failed'; }\r\n    var results = Array.isArray(response) ? response : [response];\r\n    var errors = [];\r\n    // Transaction that do not fail will be backtracked in case one failure occur\r\n    for (var i = 0; i < results.length; i++) {\r\n        for (var j = 0; j < results[i].contents.length; j++) {\r\n            var content = results[i].contents[j];\r\n            if (hasMetadata(content)) {\r\n                if (hasMetadataWithResult(content) && content.metadata.operation_result.status === status) {\r\n                    errors = errors.concat(content.metadata.operation_result.errors || []);\r\n                }\r\n                if (hasMetadataWithInternalOperationResult(content) &&\r\n                    Array.isArray(content.metadata.internal_operation_results)) {\r\n                    try {\r\n                        for (var _b = (e_1 = void 0, __values(content.metadata.internal_operation_results)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var internalResult = _c.value;\r\n                            if ('result' in internalResult && internalResult.result.status === status) {\r\n                                errors = errors.concat(internalResult.result.errors || []);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n};\n\nvar receiptFromOperation = function (op, _a) {\r\n    var _b = _a === void 0 ? {\r\n        ALLOCATION_BURN: 257,\r\n        ORIGINATION_BURN: 257,\r\n    } : _a, ALLOCATION_BURN = _b.ALLOCATION_BURN, ORIGINATION_BURN = _b.ORIGINATION_BURN;\r\n    var operationResults = flattenOperationResult({ contents: op });\r\n    var totalGas = new BigNumber(0);\r\n    var totalStorage = new BigNumber(0);\r\n    var totalFee = new BigNumber(0);\r\n    var totalOriginationBurn = new BigNumber(0);\r\n    var totalAllocationBurn = new BigNumber(0);\r\n    var totalPaidStorageDiff = new BigNumber(0);\r\n    operationResults.forEach(function (result) {\r\n        totalFee = totalFee.plus(result.fee || 0);\r\n        totalOriginationBurn = totalOriginationBurn.plus(Array.isArray(result.originated_contracts)\r\n            ? result.originated_contracts.length * ORIGINATION_BURN\r\n            : 0);\r\n        totalAllocationBurn = totalAllocationBurn.plus('allocated_destination_contract' in result ? ALLOCATION_BURN : 0);\r\n        totalGas = totalGas.plus(result.consumed_gas || 0);\r\n        totalPaidStorageDiff = totalPaidStorageDiff.plus('paid_storage_size_diff' in result ? Number(result.paid_storage_size_diff) || 0 : 0);\r\n    });\r\n    totalStorage = totalStorage\r\n        .plus(totalAllocationBurn)\r\n        .plus(totalOriginationBurn)\r\n        .plus(totalPaidStorageDiff);\r\n    return {\r\n        totalFee: totalFee,\r\n        totalGas: totalGas,\r\n        totalStorage: totalStorage,\r\n        totalAllocationBurn: totalAllocationBurn,\r\n        totalOriginationBurn: totalOriginationBurn,\r\n        totalPaidStorageDiff: totalPaidStorageDiff,\r\n        totalStorageBurn: new BigNumber(totalStorage.multipliedBy(1000)),\r\n    };\r\n};\n\nvar MissedBlockDuringConfirmationError = /** @class */ (function () {\r\n    function MissedBlockDuringConfirmationError() {\r\n        this.name = 'MissedBlockDuringConfirmationError';\r\n        this.message = 'Taquito missed a block while waiting for operation confirmation and was not able to find the operation';\r\n    }\r\n    return MissedBlockDuringConfirmationError;\r\n}());\r\nvar MAX_BRANCH_ANCESTORS = 60;\r\n/**\r\n * @description WalletOperation allows to monitor operation inclusion on chains and surface information related to the operation\r\n */\r\nvar WalletOperation = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param opHash Operation hash\r\n     * @param raw Raw operation that was injected\r\n     * @param context Taquito context allowing access to rpc and signer\r\n     */\r\n    function WalletOperation(opHash, context, _newHead$) {\r\n        var _this = this;\r\n        this.opHash = opHash;\r\n        this.context = context;\r\n        this._newHead$ = _newHead$;\r\n        this._operationResult = new ReplaySubject(1);\r\n        this._includedInBlock = new ReplaySubject(1);\r\n        this._included = false;\r\n        this.newHead$ = this._newHead$.pipe(tap(function (newHead) {\r\n            if (!_this._included &&\r\n                _this.lastHead &&\r\n                newHead.header.level - _this.lastHead.header.level > 1) {\r\n                throw new MissedBlockDuringConfirmationError();\r\n            }\r\n            _this.lastHead = newHead;\r\n        }), shareReplay({ bufferSize: 1, refCount: true }));\r\n        // Observable that emit once operation is seen in a block\r\n        this.confirmed$ = this.newHead$.pipe(map(function (head) {\r\n            var e_1, _a, e_2, _b;\r\n            try {\r\n                for (var _c = __values(head.operations), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                    var opGroup = _d.value;\r\n                    try {\r\n                        for (var opGroup_1 = (e_2 = void 0, __values(opGroup)), opGroup_1_1 = opGroup_1.next(); !opGroup_1_1.done; opGroup_1_1 = opGroup_1.next()) {\r\n                            var op = opGroup_1_1.value;\r\n                            if (op.hash === _this.opHash) {\r\n                                _this._included = true;\r\n                                _this._includedInBlock.next(head);\r\n                                _this._operationResult.next(op.contents);\r\n                                // Return the block where the operation was found\r\n                                return head;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (opGroup_1_1 && !opGroup_1_1.done && (_b = opGroup_1.return)) _b.call(opGroup_1);\r\n                        }\r\n                        finally { if (e_2) throw e_2.error; }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }), filter(function (x) {\r\n            return typeof x !== 'undefined';\r\n        }), first(), shareReplay({ bufferSize: 1, refCount: true }));\r\n        this.confirmed$.pipe(first()).subscribe();\r\n    }\r\n    WalletOperation.prototype.operationResults = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this._operationResult.pipe(first()).toPromise()];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @description Receipt expose the total amount of tezos token burn and spent on fees\r\n     * The promise returned by receipt will resolve only once the transaction is included\r\n     */\r\n    WalletOperation.prototype.receipt = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = receiptFromOperation;\r\n                        return [4 /*yield*/, this.operationResults()];\r\n                    case 1: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WalletOperation.prototype.getCurrentConfirmation = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this._included) {\r\n                    return [2 /*return*/, 0];\r\n                }\r\n                return [2 /*return*/, combineLatest([this._includedInBlock, from(this.context.rpc.getBlock())])\r\n                        .pipe(map(function (_a) {\r\n                        var _b = __read(_a, 2), foundAtBlock = _b[0], head = _b[1];\r\n                        return head.header.level - foundAtBlock.header.level + 1;\r\n                    }), first())\r\n                        .toPromise()];\r\n            });\r\n        });\r\n    };\r\n    WalletOperation.prototype.isInCurrentBranch = function (tipBlockIdentifier) {\r\n        if (tipBlockIdentifier === void 0) { tipBlockIdentifier = 'head'; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tipBlockHeader, inclusionBlock, levelDiff, tipBlockLevel, blocks, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        // By default it is assumed that the operation is in the current branch\r\n                        if (!this._included) {\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        return [4 /*yield*/, this.context.rpc.getBlockHeader({ block: tipBlockIdentifier })];\r\n                    case 1:\r\n                        tipBlockHeader = _b.sent();\r\n                        return [4 /*yield*/, this._includedInBlock.pipe(first()).toPromise()];\r\n                    case 2:\r\n                        inclusionBlock = _b.sent();\r\n                        levelDiff = tipBlockHeader.level - inclusionBlock.header.level;\r\n                        // Block produced before the operation is included are assumed to be part of the current branch\r\n                        if (levelDiff <= 0) {\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        tipBlockLevel = Math.min(inclusionBlock.header.level + levelDiff, inclusionBlock.header.level + MAX_BRANCH_ANCESTORS);\r\n                        _a = Set.bind;\r\n                        return [4 /*yield*/, this.context.rpc.getLiveBlocks({ block: String(tipBlockLevel) })];\r\n                    case 3:\r\n                        blocks = new (_a.apply(Set, [void 0, _b.sent()]))();\r\n                        return [2 /*return*/, blocks.has(inclusionBlock.hash)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WalletOperation.prototype.confirmationObservable = function (confirmations) {\r\n        var _this = this;\r\n        if (typeof confirmations !== 'undefined' && confirmations < 1) {\r\n            throw new Error('Confirmation count must be at least 1');\r\n        }\r\n        var defaultConfirmationCount = this.context.config.defaultConfirmationCount;\r\n        var conf = confirmations !== undefined ? confirmations : defaultConfirmationCount;\r\n        return combineLatest([this._includedInBlock, this.newHead$]).pipe(distinctUntilChanged(function (_a, _b) {\r\n            var _c = __read(_a, 2), previousHead = _c[1];\r\n            var _d = __read(_b, 2), newHead = _d[1];\r\n            return previousHead.hash === newHead.hash;\r\n        }), map(function (_a) {\r\n            var _b = __read(_a, 2), foundAtBlock = _b[0], head = _b[1];\r\n            return {\r\n                block: head,\r\n                expectedConfirmation: conf,\r\n                currentConfirmation: head.header.level - foundAtBlock.header.level + 1,\r\n                completed: head.header.level - foundAtBlock.header.level >= conf - 1,\r\n                isInCurrentBranch: function () { return _this.isInCurrentBranch(head.hash); },\r\n            };\r\n        }), takeWhile(function (_a) {\r\n            var completed = _a.completed;\r\n            return !completed;\r\n        }, true));\r\n    };\r\n    /**\r\n     *\r\n     * @param confirmations [0] Number of confirmation to wait for\r\n     */\r\n    WalletOperation.prototype.confirmation = function (confirmations) {\r\n        return this.confirmationObservable(confirmations).toPromise();\r\n    };\r\n    return WalletOperation;\r\n}());\n\nvar DelegationWalletOperation = /** @class */ (function (_super) {\r\n    __extends(DelegationWalletOperation, _super);\r\n    function DelegationWalletOperation(opHash, context, newHead$) {\r\n        var _this = _super.call(this, opHash, context, newHead$) || this;\r\n        _this.opHash = opHash;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    DelegationWalletOperation.prototype.revealOperation = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var operationResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.operationResults()];\r\n                    case 1:\r\n                        operationResult = _a.sent();\r\n                        return [2 /*return*/, operationResult.find(function (x) { return x.kind === OpKind.REVEAL; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DelegationWalletOperation.prototype.delegationOperation = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var operationResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.operationResults()];\r\n                    case 1:\r\n                        operationResult = _a.sent();\r\n                        return [2 /*return*/, operationResult.find(function (x) { return x.kind === OpKind.DELEGATION; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DelegationWalletOperation.prototype.status = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var op;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._included) {\r\n                            return [2 /*return*/, 'pending'];\r\n                        }\r\n                        return [4 /*yield*/, this.delegationOperation()];\r\n                    case 1:\r\n                        op = _a.sent();\r\n                        if (!op) {\r\n                            return [2 /*return*/, 'unknown'];\r\n                        }\r\n                        return [2 /*return*/, op.metadata.operation_result.status];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return DelegationWalletOperation;\r\n}(WalletOperation));\n\nvar OriginationWalletOperation = /** @class */ (function (_super) {\r\n    __extends(OriginationWalletOperation, _super);\r\n    function OriginationWalletOperation(opHash, context, newHead$) {\r\n        var _this = _super.call(this, opHash, context, newHead$) || this;\r\n        _this.opHash = opHash;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    OriginationWalletOperation.prototype.originationOperation = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var operationResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.operationResults()];\r\n                    case 1:\r\n                        operationResult = _a.sent();\r\n                        return [2 /*return*/, findWithKind(operationResult, OpKind.ORIGINATION)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    OriginationWalletOperation.prototype.revealOperation = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var operationResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.operationResults()];\r\n                    case 1:\r\n                        operationResult = _a.sent();\r\n                        return [2 /*return*/, findWithKind(operationResult, OpKind.REVEAL)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    OriginationWalletOperation.prototype.status = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var op;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._included) {\r\n                            return [2 /*return*/, 'pending'];\r\n                        }\r\n                        return [4 /*yield*/, this.originationOperation()];\r\n                    case 1:\r\n                        op = _a.sent();\r\n                        if (!op) {\r\n                            return [2 /*return*/, 'unknown'];\r\n                        }\r\n                        return [2 /*return*/, op.metadata.operation_result.status];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    OriginationWalletOperation.prototype.contract = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var op, address;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.originationOperation()];\r\n                    case 1:\r\n                        op = _a.sent();\r\n                        address = (op.metadata.operation_result.originated_contracts || [])[0];\r\n                        return [2 /*return*/, this.context.wallet.at(address)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return OriginationWalletOperation;\r\n}(WalletOperation));\n\nvar TransactionWalletOperation = /** @class */ (function (_super) {\r\n    __extends(TransactionWalletOperation, _super);\r\n    function TransactionWalletOperation(opHash, context, newHead$) {\r\n        var _this = _super.call(this, opHash, context, newHead$) || this;\r\n        _this.opHash = opHash;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    TransactionWalletOperation.prototype.revealOperation = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var operationResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.operationResults()];\r\n                    case 1:\r\n                        operationResult = _a.sent();\r\n                        return [2 /*return*/, operationResult.find(function (x) { return x.kind === OpKind.REVEAL; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TransactionWalletOperation.prototype.transactionOperation = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var operationResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.operationResults()];\r\n                    case 1:\r\n                        operationResult = _a.sent();\r\n                        return [2 /*return*/, operationResult.find(function (x) { return x.kind === OpKind.TRANSACTION; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TransactionWalletOperation.prototype.status = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var op;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._included) {\r\n                            return [2 /*return*/, 'pending'];\r\n                        }\r\n                        return [4 /*yield*/, this.transactionOperation()];\r\n                    case 1:\r\n                        op = _a.sent();\r\n                        if (!op) {\r\n                            return [2 /*return*/, 'unknown'];\r\n                        }\r\n                        return [2 /*return*/, op.metadata.operation_result.status];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TransactionWalletOperation;\r\n}(WalletOperation));\n\nvar cacheUntil = function (cacheUntilObs) { return function (source) {\r\n    var subject = null;\r\n    return defer(function () {\r\n        if (!subject) {\r\n            subject = new ReplaySubject();\r\n            source.pipe(first()).subscribe(subject);\r\n            cacheUntilObs.pipe(first()).subscribe(function () {\r\n                subject = null;\r\n            });\r\n        }\r\n        return subject;\r\n    });\r\n}; };\r\nvar createNewPollingBasedHeadObservable = function (pollingTimer, sharedHeadOb, context, scheduler) {\r\n    return pollingTimer.pipe(switchMap(function () { return sharedHeadOb; }), distinctUntilKeyChanged('hash'), timeoutWith(context.config.confirmationPollingTimeoutSecond * 1000, throwError(new Error('Confirmation polling timed out')), scheduler), shareReplay({\r\n        refCount: true,\r\n        scheduler: scheduler,\r\n    }));\r\n};\r\nvar OperationFactory = /** @class */ (function () {\r\n    function OperationFactory(context) {\r\n        var _this = this;\r\n        this.context = context;\r\n        // Cache the last block for one second across all operations\r\n        this.sharedHeadObs = defer(function () { return from(_this.context.rpc.getBlock()); }).pipe(cacheUntil(timer(0, 1000)));\r\n    }\r\n    OperationFactory.prototype.createNewHeadObservable = function () {\r\n        return createNewPollingBasedHeadObservable(timer(0, this.context.config.confirmationPollingIntervalSecond * 1000), this.sharedHeadObs, this.context);\r\n    };\r\n    OperationFactory.prototype.createPastBlockWalker = function (startBlock, count) {\r\n        var _this = this;\r\n        if (count === void 0) { count = 1; }\r\n        return from(this.context.rpc.getBlock({ block: startBlock })).pipe(switchMap(function (block) {\r\n            if (count === 1) {\r\n                return of(block);\r\n            }\r\n            return range(block.header.level, count - 1).pipe(startWith(block), concatMap(function (level) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.context.rpc.getBlock({ block: String(level) })];\r\n                });\r\n            }); }));\r\n        }));\r\n    };\r\n    OperationFactory.prototype.createHeadObservableFromConfig = function (_a) {\r\n        var blockIdentifier = _a.blockIdentifier;\r\n        var observableSequence = [];\r\n        if (blockIdentifier) {\r\n            observableSequence.push(this.createPastBlockWalker(blockIdentifier));\r\n        }\r\n        observableSequence.push(this.createNewHeadObservable());\r\n        return concat.apply(void 0, __spread(observableSequence));\r\n    };\r\n    OperationFactory.prototype.createOperation = function (hash, config) {\r\n        if (config === void 0) { config = {}; }\r\n        return new WalletOperation(hash, this.context.clone(), this.createHeadObservableFromConfig(config));\r\n    };\r\n    OperationFactory.prototype.createTransactionOperation = function (hash, config) {\r\n        if (config === void 0) { config = {}; }\r\n        return new TransactionWalletOperation(hash, this.context.clone(), this.createHeadObservableFromConfig(config));\r\n    };\r\n    OperationFactory.prototype.createDelegationOperation = function (hash, config) {\r\n        if (config === void 0) { config = {}; }\r\n        return new DelegationWalletOperation(hash, this.context.clone(), this.createHeadObservableFromConfig(config));\r\n    };\r\n    OperationFactory.prototype.createOriginationOperation = function (hash, config) {\r\n        if (config === void 0) { config = {}; }\r\n        return new OriginationWalletOperation(hash, this.context.clone(), this.createHeadObservableFromConfig(config));\r\n    };\r\n    return OperationFactory;\r\n}());\n\nvar DEFAULT_GAS_LIMIT;\r\n(function (DEFAULT_GAS_LIMIT) {\r\n    DEFAULT_GAS_LIMIT[DEFAULT_GAS_LIMIT[\"DELEGATION\"] = 10600] = \"DELEGATION\";\r\n    DEFAULT_GAS_LIMIT[DEFAULT_GAS_LIMIT[\"ORIGINATION\"] = 10600] = \"ORIGINATION\";\r\n    DEFAULT_GAS_LIMIT[DEFAULT_GAS_LIMIT[\"TRANSFER\"] = 10600] = \"TRANSFER\";\r\n    DEFAULT_GAS_LIMIT[DEFAULT_GAS_LIMIT[\"REVEAL\"] = 10600] = \"REVEAL\";\r\n})(DEFAULT_GAS_LIMIT || (DEFAULT_GAS_LIMIT = {}));\r\nvar DEFAULT_FEE;\r\n(function (DEFAULT_FEE) {\r\n    DEFAULT_FEE[DEFAULT_FEE[\"DELEGATION\"] = 1257] = \"DELEGATION\";\r\n    DEFAULT_FEE[DEFAULT_FEE[\"ORIGINATION\"] = 10000] = \"ORIGINATION\";\r\n    DEFAULT_FEE[DEFAULT_FEE[\"TRANSFER\"] = 10000] = \"TRANSFER\";\r\n    DEFAULT_FEE[DEFAULT_FEE[\"REVEAL\"] = 1420] = \"REVEAL\";\r\n})(DEFAULT_FEE || (DEFAULT_FEE = {}));\r\nvar DEFAULT_STORAGE_LIMIT;\r\n(function (DEFAULT_STORAGE_LIMIT) {\r\n    DEFAULT_STORAGE_LIMIT[DEFAULT_STORAGE_LIMIT[\"DELEGATION\"] = 0] = \"DELEGATION\";\r\n    DEFAULT_STORAGE_LIMIT[DEFAULT_STORAGE_LIMIT[\"ORIGINATION\"] = 257] = \"ORIGINATION\";\r\n    DEFAULT_STORAGE_LIMIT[DEFAULT_STORAGE_LIMIT[\"TRANSFER\"] = 257] = \"TRANSFER\";\r\n    DEFAULT_STORAGE_LIMIT[DEFAULT_STORAGE_LIMIT[\"REVEAL\"] = 0] = \"REVEAL\";\r\n})(DEFAULT_STORAGE_LIMIT || (DEFAULT_STORAGE_LIMIT = {}));\r\nvar Protocols;\r\n(function (Protocols) {\r\n    Protocols[\"Pt24m4xi\"] = \"Pt24m4xiPbLDhVgVfABUjirbmda3yohdN82Sp9FeuAXJ4eV9otd\";\r\n    Protocols[\"PsBABY5H\"] = \"PsBABY5HQTSkA4297zNHfsZNKtxULfL18y95qb3m53QJiXGmrbU\";\r\n    Protocols[\"PsBabyM1\"] = \"PsBabyM1eUXZseaJdmXFApDSBqj8YBfwELoxZHHW77EMcAbbwAS\";\r\n    Protocols[\"PsCARTHA\"] = \"PsCARTHAGazKbHtnKfLzQg3kms52kSRpgnDY982a9oYsSXRLQEb\";\r\n    Protocols[\"PsDELPH1\"] = \"PsDELPH1Kxsxt8f9eWbxQeRxkjfbxoqM52jvs5Y5fBxWWh4ifpo\";\r\n})(Protocols || (Protocols = {}));\r\nvar protocols = {\r\n    '004': [Protocols.Pt24m4xi],\r\n    '005': [Protocols.PsBABY5H, Protocols.PsBabyM1],\r\n    '006': [Protocols.PsCARTHA],\r\n    '007': [Protocols.PsDELPH1]\r\n};\r\nvar DefaultLambdaAddresses;\r\n(function (DefaultLambdaAddresses) {\r\n    DefaultLambdaAddresses[\"MAINNET\"] = \"KT1CPuTzwC7h7uLXd5WQmpMFso1HxrLBUtpE\";\r\n    DefaultLambdaAddresses[\"CARTHAGENET\"] = \"KT1VAy1o1FGiXYfD3YT7x7k5eF5HSHhmc1u6\";\r\n    DefaultLambdaAddresses[\"DELPHINET\"] = \"KT19abMFs3haqyKYwqdLjK9GbtofryZLvpiK\";\r\n})(DefaultLambdaAddresses || (DefaultLambdaAddresses = {}));\r\nvar ChainIds;\r\n(function (ChainIds) {\r\n    ChainIds[\"MAINNET\"] = \"NetXdQprcVkpaWU\";\r\n    ChainIds[\"CARTHAGENET\"] = \"NetXjD3HPJJjmcd\";\r\n    ChainIds[\"DELPHINET\"] = \"NetXm8tYqnMWky1\";\r\n})(ChainIds || (ChainIds = {}));\n\nvar OperationEmitter = /** @class */ (function () {\r\n    function OperationEmitter(context) {\r\n        this.context = context;\r\n    }\r\n    Object.defineProperty(OperationEmitter.prototype, \"rpc\", {\r\n        get: function () {\r\n            return this.context.rpc;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationEmitter.prototype, \"signer\", {\r\n        get: function () {\r\n            return this.context.signer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Originally from sotez (Copyright (c) 2018 Andrew Kishino)\r\n    OperationEmitter.prototype.prepareOperation = function (_a) {\r\n        var operation = _a.operation, source = _a.source;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var counter, counters, requiresReveal, ops, head, blockHeaderPromise, blockMetaPromise, publicKeyHash, counterPromise, managerPromise, i, counter_1, _b, header, metadata, headCounter, manager, haveManager, reveal, getFee, getSource, constructOps, branch, contents, protocol;\r\n            var _c;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        counters = {};\r\n                        requiresReveal = false;\r\n                        ops = [];\r\n                        blockHeaderPromise = this.rpc.getBlockHeader();\r\n                        blockMetaPromise = this.rpc.getBlockMetadata();\r\n                        if (Array.isArray(operation)) {\r\n                            ops = __spread(operation);\r\n                        }\r\n                        else {\r\n                            ops = [operation];\r\n                        }\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 1:\r\n                        publicKeyHash = _d.sent();\r\n                        counterPromise = Promise.resolve(undefined);\r\n                        managerPromise = Promise.resolve(undefined);\r\n                        i = 0;\r\n                        _d.label = 2;\r\n                    case 2:\r\n                        if (!(i < ops.length)) return [3 /*break*/, 5];\r\n                        if (!isOpRequireReveal(ops[i])) return [3 /*break*/, 4];\r\n                        requiresReveal = true;\r\n                        return [4 /*yield*/, this.rpc.getContract(publicKeyHash)];\r\n                    case 3:\r\n                        counter_1 = (_d.sent()).counter;\r\n                        counterPromise = Promise.resolve(counter_1);\r\n                        managerPromise = this.rpc.getManagerKey(publicKeyHash);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        i++;\r\n                        return [3 /*break*/, 2];\r\n                    case 5: return [4 /*yield*/, Promise.all([\r\n                            blockHeaderPromise,\r\n                            blockMetaPromise,\r\n                            counterPromise,\r\n                            managerPromise,\r\n                        ])];\r\n                    case 6:\r\n                        _b = __read.apply(void 0, [_d.sent(), 4]), header = _b[0], metadata = _b[1], headCounter = _b[2], manager = _b[3];\r\n                        if (!header) {\r\n                            throw new Error('Unable to fetch latest block header');\r\n                        }\r\n                        if (!metadata) {\r\n                            throw new Error('Unable to fetch latest metadata');\r\n                        }\r\n                        head = header;\r\n                        if (!requiresReveal) return [3 /*break*/, 8];\r\n                        haveManager = manager && typeof manager === 'object' ? !!manager.key : !!manager;\r\n                        if (!!haveManager) return [3 /*break*/, 8];\r\n                        _c = {\r\n                            kind: OpKind.REVEAL,\r\n                            fee: DEFAULT_FEE.REVEAL\r\n                        };\r\n                        return [4 /*yield*/, this.signer.publicKey()];\r\n                    case 7:\r\n                        reveal = (_c.public_key = _d.sent(),\r\n                            _c.source = publicKeyHash,\r\n                            _c.gas_limit = DEFAULT_GAS_LIMIT.REVEAL,\r\n                            _c.storage_limit = DEFAULT_STORAGE_LIMIT.REVEAL,\r\n                            _c);\r\n                        ops.unshift(reveal);\r\n                        _d.label = 8;\r\n                    case 8:\r\n                        counter = parseInt(headCounter || '0', 10);\r\n                        if (!counters[publicKeyHash] || counters[publicKeyHash] < counter) {\r\n                            counters[publicKeyHash] = counter;\r\n                        }\r\n                        getFee = function (op) {\r\n                            var opCounter = ++counters[publicKeyHash];\r\n                            return {\r\n                                counter: \"\" + opCounter,\r\n                                // tslint:disable-next-line: strict-type-predicates\r\n                                fee: typeof op.fee === 'undefined' ? '0' : \"\" + op.fee,\r\n                                // tslint:disable-next-line: strict-type-predicates\r\n                                gas_limit: typeof op.gas_limit === 'undefined' ? '0' : \"\" + op.gas_limit,\r\n                                // tslint:disable-next-line: strict-type-predicates\r\n                                storage_limit: typeof op.storage_limit === 'undefined' ? '0' : \"\" + op.storage_limit,\r\n                            };\r\n                        };\r\n                        getSource = function (op) {\r\n                            return {\r\n                                source: typeof op.source === 'undefined' ? source || publicKeyHash : op.source,\r\n                            };\r\n                        };\r\n                        constructOps = function (cOps) {\r\n                            // tslint:disable strict-type-predicates\r\n                            return cOps.map(function (op) {\r\n                                switch (op.kind) {\r\n                                    case OpKind.ACTIVATION:\r\n                                        return __assign({}, op);\r\n                                    case OpKind.REVEAL:\r\n                                        return __assign(__assign(__assign({}, op), getSource(op)), getFee(op));\r\n                                    case OpKind.ORIGINATION:\r\n                                        return __assign(__assign(__assign(__assign({}, op), { balance: typeof op.balance !== 'undefined' ? \"\" + op.balance : '0' }), getSource(op)), getFee(op));\r\n                                    case OpKind.TRANSACTION:\r\n                                        var cops = __assign(__assign(__assign(__assign({}, op), { amount: typeof op.amount !== 'undefined' ? \"\" + op.amount : '0' }), getSource(op)), getFee(op));\r\n                                        if (cops.source.toLowerCase().startsWith('kt1')) {\r\n                                            throw new Error(\"KT1 addresses are not supported as source since \" + Protocols.PsBabyM1);\r\n                                        }\r\n                                        return cops;\r\n                                    case OpKind.DELEGATION:\r\n                                        return __assign(__assign(__assign({}, op), getSource(op)), getFee(op));\r\n                                    default:\r\n                                        throw new Error('Unsupported operation');\r\n                                }\r\n                            });\r\n                        };\r\n                        branch = head.hash;\r\n                        contents = constructOps(ops);\r\n                        protocol = metadata.next_protocol;\r\n                        return [2 /*return*/, {\r\n                                opOb: {\r\n                                    branch: branch,\r\n                                    contents: contents,\r\n                                    protocol: protocol,\r\n                                },\r\n                                counter: counter,\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    OperationEmitter.prototype.prepareAndForge = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prepared;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.prepareOperation(params)];\r\n                    case 1:\r\n                        prepared = _a.sent();\r\n                        return [2 /*return*/, this.forge(prepared)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    OperationEmitter.prototype.forge = function (_a) {\r\n        var _b = _a.opOb, branch = _b.branch, contents = _b.contents, protocol = _b.protocol, counter = _a.counter;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var forgedBytes;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0: return [4 /*yield*/, this.context.forger.forge({ branch: branch, contents: contents })];\r\n                    case 1:\r\n                        forgedBytes = _c.sent();\r\n                        return [2 /*return*/, {\r\n                                opbytes: forgedBytes,\r\n                                opOb: {\r\n                                    branch: branch,\r\n                                    contents: contents,\r\n                                    protocol: protocol,\r\n                                },\r\n                                counter: counter,\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    OperationEmitter.prototype.simulate = function (op) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = {};\r\n                        return [4 /*yield*/, this.rpc.runOperation(op)];\r\n                    case 1: return [2 /*return*/, (_a.opResponse = _b.sent(),\r\n                            _a.op = op,\r\n                            _a.context = this.context.clone(),\r\n                            _a)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    OperationEmitter.prototype.estimate = function (_a, estimator) {\r\n        var fee = _a.fee, gasLimit = _a.gasLimit, storageLimit = _a.storageLimit, rest = __rest(_a, [\"fee\", \"gasLimit\", \"storageLimit\"]);\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var calculatedFee, calculatedGas, calculatedStorage, estimation;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        calculatedFee = fee;\r\n                        calculatedGas = gasLimit;\r\n                        calculatedStorage = storageLimit;\r\n                        if (!(fee === undefined || gasLimit === undefined || storageLimit === undefined)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, estimator(__assign({ fee: fee, gasLimit: gasLimit, storageLimit: storageLimit }, rest))];\r\n                    case 1:\r\n                        estimation = _b.sent();\r\n                        if (calculatedFee === undefined) {\r\n                            calculatedFee = estimation.suggestedFeeMutez;\r\n                        }\r\n                        if (calculatedGas === undefined) {\r\n                            calculatedGas = estimation.gasLimit;\r\n                        }\r\n                        if (calculatedStorage === undefined) {\r\n                            calculatedStorage = estimation.storageLimit;\r\n                        }\r\n                        _b.label = 2;\r\n                    case 2: return [2 /*return*/, {\r\n                            fee: calculatedFee,\r\n                            gasLimit: calculatedGas,\r\n                            storageLimit: calculatedStorage,\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    OperationEmitter.prototype.signAndInject = function (forgedBytes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var signed, opResponse, results, i, j, errors;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.signer.sign(forgedBytes.opbytes, new Uint8Array([3]))];\r\n                    case 1:\r\n                        signed = _b.sent();\r\n                        forgedBytes.opbytes = signed.sbytes;\r\n                        forgedBytes.opOb.signature = signed.prefixSig;\r\n                        opResponse = [];\r\n                        return [4 /*yield*/, this.rpc.preapplyOperations([forgedBytes.opOb])];\r\n                    case 2:\r\n                        results = _b.sent();\r\n                        if (!Array.isArray(results)) {\r\n                            throw new TezosPreapplyFailureError(results);\r\n                        }\r\n                        for (i = 0; i < results.length; i++) {\r\n                            for (j = 0; j < results[i].contents.length; j++) {\r\n                                opResponse.push(results[i].contents[j]);\r\n                            }\r\n                        }\r\n                        errors = flattenErrors(results);\r\n                        if (errors.length) {\r\n                            // @ts-ignore\r\n                            throw new TezosOperationError(errors);\r\n                        }\r\n                        _a = {};\r\n                        return [4 /*yield*/, this.context.injector.inject(forgedBytes.opbytes)];\r\n                    case 3: return [2 /*return*/, (_a.hash = _b.sent(),\r\n                            _a.forgedBytes = forgedBytes,\r\n                            _a.opResponse = opResponse,\r\n                            _a.context = this.context.clone(),\r\n                            _a)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return OperationEmitter;\r\n}());\n\n/**\r\n * @description Utility class to interact with Tezos operations\r\n */\r\nvar Operation = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param hash Operation hash\r\n     * @param raw Raw operation that was injected\r\n     * @param context Taquito context allowing access to rpc and signer\r\n     */\r\n    function Operation(hash, raw, results, context) {\r\n        var _this = this;\r\n        this.hash = hash;\r\n        this.raw = raw;\r\n        this.results = results;\r\n        this.context = context;\r\n        this._pollingConfig$ = new ReplaySubject(1);\r\n        this._currentHeadPromise = undefined;\r\n        // Caching the current head for one second\r\n        this.currentHead$ = defer(function () {\r\n            if (!_this._currentHeadPromise) {\r\n                _this._currentHeadPromise = _this.context.rpc.getBlock();\r\n                timer(1000)\r\n                    .pipe(first())\r\n                    .subscribe(function () {\r\n                    _this._currentHeadPromise = undefined;\r\n                });\r\n            }\r\n            return from(_this._currentHeadPromise);\r\n        });\r\n        // Polling observable that emit until timeout is reached\r\n        this.polling$ = defer(function () {\r\n            return _this._pollingConfig$.pipe(tap(function (_a) {\r\n                var timeout = _a.timeout, interval = _a.interval;\r\n                if (timeout <= 0) {\r\n                    throw new Error('Timeout must be more than 0');\r\n                }\r\n                if (interval <= 0) {\r\n                    throw new Error('Interval must be more than 0');\r\n                }\r\n            }), map(function (config) { return (__assign(__assign({}, config), { timeoutAt: Math.ceil(config.timeout / config.interval) + 1, count: 0 })); }), switchMap(function (config) { return timer(0, config.interval * 1000).pipe(mapTo(config)); }), tap(function (config) {\r\n                config.count++;\r\n                if (config.count > config.timeoutAt) {\r\n                    throw new Error(\"Confirmation polling timed out\");\r\n                }\r\n            }));\r\n        });\r\n        // Observable that emit once operation is seen in a block\r\n        this.confirmed$ = this.polling$.pipe(switchMapTo(this.currentHead$), map(function (head) {\r\n            for (var i = 3; i >= 0; i--) {\r\n                head.operations[i].forEach(function (op) {\r\n                    if (op.hash === _this.hash) {\r\n                        _this._foundAt = head.header.level;\r\n                    }\r\n                });\r\n            }\r\n            if (head.header.level - _this._foundAt >= 0) {\r\n                return _this._foundAt;\r\n            }\r\n        }), filter(function (x) { return x !== undefined; }), first(), shareReplay());\r\n        this._foundAt = Number.POSITIVE_INFINITY;\r\n        this.confirmed$.pipe(first()).subscribe();\r\n    }\r\n    Object.defineProperty(Operation.prototype, \"includedInBlock\", {\r\n        get: function () {\r\n            return this._foundAt;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Operation.prototype, \"revealOperation\", {\r\n        get: function () {\r\n            return (Array.isArray(this.results) &&\r\n                this.results.find(function (op) { return op.kind === 'reveal'; }));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Operation.prototype, \"revealStatus\", {\r\n        get: function () {\r\n            if (this.revealOperation) {\r\n                return this.revealOperation.metadata.operation_result.status;\r\n            }\r\n            else {\r\n                return 'unknown';\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Operation.prototype, \"status\", {\r\n        get: function () {\r\n            return (this.results.map(function (result) {\r\n                if (hasMetadataWithResult(result)) {\r\n                    return result.metadata.operation_result.status;\r\n                }\r\n                else {\r\n                    return 'unknown';\r\n                }\r\n            })[0] || 'unknown');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param confirmations [0] Number of confirmation to wait for\r\n     * @param interval [10] Polling interval\r\n     * @param timeout [180] Timeout\r\n     */\r\n    Operation.prototype.confirmation = function (confirmations, interval, timeout) {\r\n        var _this = this;\r\n        if (typeof confirmations !== 'undefined' && confirmations < 1) {\r\n            throw new Error('Confirmation count must be at least 1');\r\n        }\r\n        var _a = this.context.config, defaultConfirmationCount = _a.defaultConfirmationCount, confirmationPollingIntervalSecond = _a.confirmationPollingIntervalSecond, confirmationPollingTimeoutSecond = _a.confirmationPollingTimeoutSecond;\r\n        this._pollingConfig$.next({\r\n            interval: interval || confirmationPollingIntervalSecond,\r\n            timeout: timeout || confirmationPollingTimeoutSecond,\r\n        });\r\n        var conf = confirmations !== undefined ? confirmations : defaultConfirmationCount;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.confirmed$\r\n                .pipe(switchMap(function () { return _this.polling$; }), switchMap(function () { return _this.currentHead$; }), filter(function (head) { return head.header.level - _this._foundAt >= conf - 1; }), first())\r\n                .subscribe(function (_) {\r\n                resolve(_this._foundAt + (conf - 1));\r\n            }, reject);\r\n        });\r\n    };\r\n    return Operation;\r\n}());\n\nvar RpcTzProvider = /** @class */ (function (_super) {\r\n    __extends(RpcTzProvider, _super);\r\n    function RpcTzProvider(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    RpcTzProvider.prototype.getBalance = function (address) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.rpc.getBalance(address)];\r\n            });\r\n        });\r\n    };\r\n    RpcTzProvider.prototype.getDelegate = function (address) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.rpc.getDelegate(address)];\r\n            });\r\n        });\r\n    };\r\n    RpcTzProvider.prototype.activate = function (pkh, secret) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var operation, forgedBytes, bytes, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        operation = {\r\n                            kind: OpKind.ACTIVATION,\r\n                            pkh: pkh,\r\n                            secret: secret,\r\n                        };\r\n                        return [4 /*yield*/, this.prepareAndForge({ operation: [operation], source: pkh })];\r\n                    case 1:\r\n                        forgedBytes = _b.sent();\r\n                        bytes = forgedBytes.opbytes + \"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\";\r\n                        _a = Operation.bind;\r\n                        return [4 /*yield*/, this.rpc.injectOperation(bytes)];\r\n                    case 2: return [2 /*return*/, new (_a.apply(Operation, [void 0, _b.sent(), __assign(__assign({}, forgedBytes), { opbytes: bytes }), [],\r\n                            this.context.clone()]))()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RpcTzProvider;\r\n}(OperationEmitter));\n\nvar MINIMAL_FEE_MUTEZ = 100;\r\nvar MINIMAL_FEE_PER_BYTE_MUTEZ = 1;\r\nvar MINIMAL_FEE_PER_GAS_MUTEZ = 0.1;\r\nvar GAS_BUFFER = 100;\r\n/**\r\n * Examples of use :\r\n *\r\n *  Estimate a transfer operation :\r\n * ```\r\n * // Assuming that provider and signer are already configured...\r\n *\r\n * const amount = 2;\r\n * const address = 'tz1h3rQ8wBxFd8L9B3d7Jhaawu6Z568XU3xY';\r\n *\r\n * // Estimate gasLimit, storageLimit and fees for a transfer operation\r\n * const est = await Tezos.estimate.transfer({ to: address, amount: amount })\r\n * console.log(est.burnFeeMutez, est.gasLimit, est.minimalFeeMutez, est.storageLimit,\r\n *  est.suggestedFeeMutez, est.totalCost, est.usingBaseFeeMutez)\r\n *\r\n * ```\r\n *\r\n * Estimate a contract origination :\r\n * ```\r\n * // generic.json is referring to a Michelson Smart Contract\r\n *\r\n * const genericMultisigJSON = require('./generic.json')\r\n * const est = await Tezos.estimate.originate({\r\n *   code: genericMultisigJSON,\r\n *   storage: {\r\n *     stored_counter: 0,\r\n *     threshold: 1,\r\n *     keys: ['edpkuLxx9PQD8fZ45eUzrK3BhfDZJHhBuK4Zi49DcEGANwd2rpX82t']\r\n *   }\r\n * })\r\n * console.log(est.burnFeeMutez, est.gasLimit, est.minimalFeeMutez, est.storageLimit,\r\n *   est.suggestedFeeMutez, est.totalCost, est.usingBaseFeeMutez)\r\n *\r\n * ```\r\n */\r\nvar Estimate = /** @class */ (function () {\r\n    function Estimate(_milligasLimit, _storageLimit, opSize, minimalFeePerStorageByteMutez, \r\n    /**\r\n     * @description Base fee in mutez (1 mutez = 1e10−6 tez)\r\n     */\r\n    baseFeeMutez) {\r\n        if (baseFeeMutez === void 0) { baseFeeMutez = MINIMAL_FEE_MUTEZ; }\r\n        this._milligasLimit = _milligasLimit;\r\n        this._storageLimit = _storageLimit;\r\n        this.opSize = opSize;\r\n        this.minimalFeePerStorageByteMutez = minimalFeePerStorageByteMutez;\r\n        this.baseFeeMutez = baseFeeMutez;\r\n    }\r\n    Object.defineProperty(Estimate.prototype, \"burnFeeMutez\", {\r\n        /**\r\n         * @description The number of Mutez that will be burned for the storage of the [operation](https://tezos.gitlab.io/user/glossary.html#operations). (Storage + Allocation fees)\r\n         */\r\n        get: function () {\r\n            return this.roundUp(Number(this.storageLimit) * Number(this.minimalFeePerStorageByteMutez));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Estimate.prototype, \"storageLimit\", {\r\n        /**\r\n         * @description  The limit on the amount of storage an [operation](https://tezos.gitlab.io/user/glossary.html#operations) can use.\r\n         */\r\n        get: function () {\r\n            var limit = Math.max(Number(this._storageLimit), 0);\r\n            return limit > 0 ? limit : 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Estimate.prototype, \"gasLimit\", {\r\n        /**\r\n         * @description The limit on the amount of [gas](https://tezos.gitlab.io/user/glossary.html#gas) a given operation can consume.\r\n         */\r\n        get: function () {\r\n            return this.roundUp(Number(this._milligasLimit) / 1000 + GAS_BUFFER);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Estimate.prototype, \"operationFeeMutez\", {\r\n        get: function () {\r\n            return ((Number(this._milligasLimit) / 1000 + GAS_BUFFER) * MINIMAL_FEE_PER_GAS_MUTEZ + Number(this.opSize) * MINIMAL_FEE_PER_BYTE_MUTEZ);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Estimate.prototype.roundUp = function (nanotez) {\r\n        return Math.ceil(Number(nanotez));\r\n    };\r\n    Object.defineProperty(Estimate.prototype, \"minimalFeeMutez\", {\r\n        /**\r\n         * @description Minimum fees for the [operation](https://tezos.gitlab.io/user/glossary.html#operations) according to [baker](https://tezos.gitlab.io/user/glossary.html#baker) defaults.\r\n         */\r\n        get: function () {\r\n            return this.roundUp(MINIMAL_FEE_MUTEZ + this.operationFeeMutez);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Estimate.prototype, \"suggestedFeeMutez\", {\r\n        /**\r\n         * @description The suggested fee for the operation which includes minimal fees and a small buffer.\r\n         */\r\n        get: function () {\r\n            return this.roundUp(this.operationFeeMutez + MINIMAL_FEE_MUTEZ * 2);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Estimate.prototype, \"usingBaseFeeMutez\", {\r\n        /**\r\n         * @description Fees according to your specified base fee will ensure that at least minimum fees are used.\r\n         */\r\n        get: function () {\r\n            return (Math.max(Number(this.baseFeeMutez), MINIMAL_FEE_MUTEZ) + this.roundUp(this.operationFeeMutez));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Estimate.prototype, \"totalCost\", {\r\n        /**\r\n         * @description The sum of `minimalFeeMutez` + `burnFeeMutez`.\r\n         */\r\n        get: function () {\r\n            return this.minimalFeeMutez + this.burnFeeMutez;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Estimate.prototype, \"consumedMilligas\", {\r\n        /**\r\n         * @description Since Delphinet, consumed gas is provided in milligas for more precision.\r\n         * This function returns an estimation of the gas that operation will consume in milligas.\r\n         */\r\n        get: function () {\r\n            return Number(this._milligasLimit);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Estimate;\r\n}());\n\nvar TZ_DECIMALS = 6;\r\nvar MTZ_DECIMALS = 3;\r\nfunction getDecimal(format) {\r\n    switch (format) {\r\n        case 'tz':\r\n            return TZ_DECIMALS;\r\n        case 'mtz':\r\n            return MTZ_DECIMALS;\r\n        case 'mutez':\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\nfunction format(from, to, amount) {\r\n    if (from === void 0) { from = 'mutez'; }\r\n    if (to === void 0) { to = 'mutez'; }\r\n    var bigNum = new BigNumber(amount);\r\n    if (bigNum.isNaN()) {\r\n        return amount;\r\n    }\r\n    return bigNum\r\n        .multipliedBy(Math.pow(10, getDecimal(from)))\r\n        .dividedBy(Math.pow(10, getDecimal(to)));\r\n}\n\nvar createOriginationOperation = function (_a) {\r\n    var code = _a.code, init = _a.init, _b = _a.balance, balance = _b === void 0 ? \"0\" : _b, delegate = _a.delegate, storage = _a.storage, _c = _a.fee, fee = _c === void 0 ? DEFAULT_FEE.ORIGINATION : _c, _d = _a.gasLimit, gasLimit = _d === void 0 ? DEFAULT_GAS_LIMIT.ORIGINATION : _d, _e = _a.storageLimit, storageLimit = _e === void 0 ? DEFAULT_STORAGE_LIMIT.ORIGINATION : _e;\r\n    return __awaiter(void 0, void 0, void 0, function () {\r\n        var parser, contractCode, c, c, order_1, contractStorage, storageType, schema, c, script, operation;\r\n        return __generator(this, function (_f) {\r\n            // tslint:disable-next-line: strict-type-predicates\r\n            if (storage !== undefined && init !== undefined) {\r\n                throw new Error(\"Storage and Init cannot be set a the same time. Please either use storage or init but not both.\");\r\n            }\r\n            parser = new Parser({ expandMacros: true });\r\n            if (typeof code === 'string') {\r\n                c = parser.parseScript(code);\r\n                if (c === null) {\r\n                    throw new Error('Empty Michelson source');\r\n                }\r\n                contractCode = c;\r\n            }\r\n            else {\r\n                c = parser.parseJSON(code);\r\n                if (!Array.isArray(c)) {\r\n                    throw new Error('JSON encoded Michelson script must be an array');\r\n                }\r\n                order_1 = ['parameter', 'storage', 'code'];\r\n                // Ensure correct ordering for RPC\r\n                contractCode = c.sort(function (a, b) { return order_1.indexOf(a.prim) - order_1.indexOf(b.prim); });\r\n            }\r\n            if (storage !== undefined) {\r\n                storageType = contractCode.find(function (p) { return ('prim' in p) && p.prim === 'storage'; });\r\n                if ((storageType === null || storageType === void 0 ? void 0 : storageType.args) === undefined) {\r\n                    throw new Error('Missing storage section');\r\n                }\r\n                schema = new Schema(storageType.args[0]);\r\n                contractStorage = schema.Encode(storage);\r\n            }\r\n            else if (typeof init === 'string') {\r\n                c = parser.parseMichelineExpression(init);\r\n                if (c === null) {\r\n                    throw new Error('Empty initial storage value');\r\n                }\r\n                contractStorage = c;\r\n            }\r\n            else if (typeof init === 'object') {\r\n                contractStorage = parser.parseJSON(init);\r\n            }\r\n            script = {\r\n                code: contractCode,\r\n                storage: contractStorage,\r\n            };\r\n            operation = {\r\n                kind: OpKind.ORIGINATION,\r\n                fee: fee,\r\n                gas_limit: gasLimit,\r\n                storage_limit: storageLimit,\r\n                balance: format(\"tz\", \"mutez\", balance).toString(),\r\n                script: script,\r\n            };\r\n            if (delegate) {\r\n                operation.delegate = delegate;\r\n            }\r\n            return [2 /*return*/, operation];\r\n        });\r\n    });\r\n};\r\nvar createTransferOperation = function (_a) {\r\n    var to = _a.to, amount = _a.amount, parameter = _a.parameter, _b = _a.fee, fee = _b === void 0 ? DEFAULT_FEE.TRANSFER : _b, _c = _a.gasLimit, gasLimit = _c === void 0 ? DEFAULT_GAS_LIMIT.TRANSFER : _c, _d = _a.storageLimit, storageLimit = _d === void 0 ? DEFAULT_STORAGE_LIMIT.TRANSFER : _d, _e = _a.mutez, mutez = _e === void 0 ? false : _e;\r\n    return __awaiter(void 0, void 0, void 0, function () {\r\n        var operation;\r\n        return __generator(this, function (_f) {\r\n            operation = {\r\n                kind: OpKind.TRANSACTION,\r\n                fee: fee,\r\n                gas_limit: gasLimit,\r\n                storage_limit: storageLimit,\r\n                amount: mutez\r\n                    ? amount.toString()\r\n                    : format(\"tz\", \"mutez\", amount).toString(),\r\n                destination: to,\r\n                parameters: parameter,\r\n            };\r\n            return [2 /*return*/, operation];\r\n        });\r\n    });\r\n};\r\nvar createSetDelegateOperation = function (_a) {\r\n    var delegate = _a.delegate, source = _a.source, _b = _a.fee, fee = _b === void 0 ? DEFAULT_FEE.DELEGATION : _b, _c = _a.gasLimit, gasLimit = _c === void 0 ? DEFAULT_GAS_LIMIT.DELEGATION : _c, _d = _a.storageLimit, storageLimit = _d === void 0 ? DEFAULT_STORAGE_LIMIT.DELEGATION : _d;\r\n    return __awaiter(void 0, void 0, void 0, function () {\r\n        var operation;\r\n        return __generator(this, function (_e) {\r\n            operation = {\r\n                kind: OpKind.DELEGATION,\r\n                source: source,\r\n                fee: fee,\r\n                gas_limit: gasLimit,\r\n                storage_limit: storageLimit,\r\n                delegate: delegate,\r\n            };\r\n            return [2 /*return*/, operation];\r\n        });\r\n    });\r\n};\r\nvar createRegisterDelegateOperation = function (_a, source) {\r\n    var _b = _a.fee, fee = _b === void 0 ? DEFAULT_FEE.DELEGATION : _b, _c = _a.gasLimit, gasLimit = _c === void 0 ? DEFAULT_GAS_LIMIT.DELEGATION : _c, _d = _a.storageLimit, storageLimit = _d === void 0 ? DEFAULT_STORAGE_LIMIT.DELEGATION : _d;\r\n    return __awaiter(void 0, void 0, void 0, function () {\r\n        return __generator(this, function (_e) {\r\n            return [2 /*return*/, {\r\n                    kind: OpKind.DELEGATION,\r\n                    fee: fee,\r\n                    gas_limit: gasLimit,\r\n                    storage_limit: storageLimit,\r\n                    delegate: source,\r\n                }];\r\n        });\r\n    });\r\n};\n\nvar mergeLimits = function (userDefinedLimit, defaultLimits) {\r\n    return {\r\n        fee: typeof userDefinedLimit.fee === 'undefined' ? defaultLimits.fee : userDefinedLimit.fee,\r\n        gasLimit: typeof userDefinedLimit.gasLimit === 'undefined'\r\n            ? defaultLimits.gasLimit\r\n            : userDefinedLimit.gasLimit,\r\n        storageLimit: typeof userDefinedLimit.storageLimit === 'undefined'\r\n            ? defaultLimits.storageLimit\r\n            : userDefinedLimit.storageLimit,\r\n    };\r\n};\r\n// RPC requires a signature but does not verify it\r\nvar SIGNATURE_STUB = 'edsigtkpiSSschcaCt9pUVrpNPf7TTcgvgDEDD6NCEHMy8NNQJCGnMfLZzYoQj74yLjo9wx6MPVV29CvVzgi7qEcEUok3k7AuMg';\r\nvar RPCEstimateProvider = /** @class */ (function (_super) {\r\n    __extends(RPCEstimateProvider, _super);\r\n    function RPCEstimateProvider() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.ALLOCATION_STORAGE = 257;\r\n        _this.ORIGINATION_STORAGE = 257;\r\n        return _this;\r\n    }\r\n    // Maximum values defined by the protocol\r\n    RPCEstimateProvider.prototype.getAccountLimits = function (pkh) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var balance, _a, hard_gas_limit_per_operation, hard_storage_limit_per_operation, cost_per_byte;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.rpc.getBalance(pkh)];\r\n                    case 1:\r\n                        balance = _b.sent();\r\n                        return [4 /*yield*/, this.rpc.getConstants()];\r\n                    case 2:\r\n                        _a = _b.sent(), hard_gas_limit_per_operation = _a.hard_gas_limit_per_operation, hard_storage_limit_per_operation = _a.hard_storage_limit_per_operation, cost_per_byte = _a.cost_per_byte;\r\n                        return [2 /*return*/, {\r\n                                fee: 0,\r\n                                gasLimit: hard_gas_limit_per_operation.toNumber(),\r\n                                storageLimit: Math.floor(BigNumber.min(balance.dividedBy(cost_per_byte), hard_storage_limit_per_operation).toNumber()),\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RPCEstimateProvider.prototype.createEstimateFromOperationContent = function (content, size, costPerByte) {\r\n        var _this = this;\r\n        var operationResults = flattenOperationResult({ contents: [content] });\r\n        var totalGas = 0;\r\n        var totalMilligas = 0;\r\n        var totalStorage = 0;\r\n        operationResults.forEach(function (result) {\r\n            totalStorage +=\r\n                'originated_contracts' in result && typeof result.originated_contracts !== 'undefined'\r\n                    ? result.originated_contracts.length * _this.ORIGINATION_STORAGE\r\n                    : 0;\r\n            totalStorage += 'allocated_destination_contract' in result ? _this.ALLOCATION_STORAGE : 0;\r\n            totalGas += Number(result.consumed_gas) || 0;\r\n            totalMilligas += Number(result.consumed_milligas) || 0;\r\n            totalStorage +=\r\n                'paid_storage_size_diff' in result ? Number(result.paid_storage_size_diff) || 0 : 0;\r\n        });\r\n        if (totalGas !== 0 && totalMilligas === 0) {\r\n            // This will convert gas to milligas for Carthagenet where result does not contain consumed gas in milligas.\r\n            totalMilligas = totalGas * 1000;\r\n        }\r\n        if (isOpWithFee(content)) {\r\n            return new Estimate(totalMilligas || 0, Number(totalStorage || 0), size, costPerByte.toNumber());\r\n        }\r\n        else {\r\n            return new Estimate(0, 0, size, costPerByte.toNumber(), 0);\r\n        }\r\n    };\r\n    RPCEstimateProvider.prototype.createEstimate = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, opbytes, _b, branch, contents, operation, opResponse, cost_per_byte, errors;\r\n            var _c;\r\n            var _this = this;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0: return [4 /*yield*/, this.prepareAndForge(params)];\r\n                    case 1:\r\n                        _a = _d.sent(), opbytes = _a.opbytes, _b = _a.opOb, branch = _b.branch, contents = _b.contents;\r\n                        _c = {\r\n                            operation: { branch: branch, contents: contents, signature: SIGNATURE_STUB }\r\n                        };\r\n                        return [4 /*yield*/, this.rpc.getChainId()];\r\n                    case 2:\r\n                        operation = (_c.chain_id = _d.sent(),\r\n                            _c);\r\n                        return [4 /*yield*/, this.simulate(operation)];\r\n                    case 3:\r\n                        opResponse = (_d.sent()).opResponse;\r\n                        return [4 /*yield*/, this.rpc.getConstants()];\r\n                    case 4:\r\n                        cost_per_byte = (_d.sent()).cost_per_byte;\r\n                        errors = __spread(flattenErrors(opResponse, 'backtracked'), flattenErrors(opResponse));\r\n                        // Fail early in case of errors\r\n                        if (errors.length) {\r\n                            throw new TezosOperationError(errors);\r\n                        }\r\n                        while (opResponse.contents.length !== (Array.isArray(params.operation) ? params.operation.length : 1)) {\r\n                            opResponse.contents.shift();\r\n                        }\r\n                        return [2 /*return*/, opResponse.contents.map(function (x) {\r\n                                return _this.createEstimateFromOperationContent(x, opbytes.length / 2 / opResponse.contents.length, cost_per_byte);\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Estimate gasLimit, storageLimit and fees for an origination operation\r\n     *\r\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\r\n     *\r\n     * @param OriginationOperation Originate operation parameter\r\n     */\r\n    RPCEstimateProvider.prototype.originate = function (_a) {\r\n        var fee = _a.fee, storageLimit = _a.storageLimit, gasLimit = _a.gasLimit, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pkh, DEFAULT_PARAMS, op;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 1:\r\n                        pkh = _b.sent();\r\n                        return [4 /*yield*/, this.getAccountLimits(pkh)];\r\n                    case 2:\r\n                        DEFAULT_PARAMS = _b.sent();\r\n                        return [4 /*yield*/, createOriginationOperation(__assign(__assign({}, rest), mergeLimits({ fee: fee, storageLimit: storageLimit, gasLimit: gasLimit }, DEFAULT_PARAMS)))];\r\n                    case 3:\r\n                        op = _b.sent();\r\n                        return [4 /*yield*/, this.createEstimate({ operation: op, source: pkh })];\r\n                    case 4: return [2 /*return*/, (_b.sent())[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Estimate gasLimit, storageLimit and fees for an transfer operation\r\n     *\r\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\r\n     *\r\n     * @param TransferOperation Originate operation parameter\r\n     */\r\n    RPCEstimateProvider.prototype.transfer = function (_a) {\r\n        var fee = _a.fee, storageLimit = _a.storageLimit, gasLimit = _a.gasLimit, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pkh, DEFAULT_PARAMS, op;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 1:\r\n                        pkh = _b.sent();\r\n                        return [4 /*yield*/, this.getAccountLimits(pkh)];\r\n                    case 2:\r\n                        DEFAULT_PARAMS = _b.sent();\r\n                        return [4 /*yield*/, createTransferOperation(__assign(__assign({}, rest), mergeLimits({ fee: fee, storageLimit: storageLimit, gasLimit: gasLimit }, DEFAULT_PARAMS)))];\r\n                    case 3:\r\n                        op = _b.sent();\r\n                        return [4 /*yield*/, this.createEstimate({ operation: op, source: pkh })];\r\n                    case 4: return [2 /*return*/, (_b.sent())[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Estimate gasLimit, storageLimit and fees for a delegate operation\r\n     *\r\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\r\n     *\r\n     * @param Estimate\r\n     */\r\n    RPCEstimateProvider.prototype.setDelegate = function (_a) {\r\n        var fee = _a.fee, gasLimit = _a.gasLimit, storageLimit = _a.storageLimit, rest = __rest(_a, [\"fee\", \"gasLimit\", \"storageLimit\"]);\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var sourceOrDefault, _b, DEFAULT_PARAMS, op;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _b = rest.source;\r\n                        if (_b) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 1:\r\n                        _b = (_c.sent());\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        sourceOrDefault = _b;\r\n                        return [4 /*yield*/, this.getAccountLimits(sourceOrDefault)];\r\n                    case 3:\r\n                        DEFAULT_PARAMS = _c.sent();\r\n                        return [4 /*yield*/, createSetDelegateOperation(__assign(__assign({}, rest), mergeLimits({ fee: fee, storageLimit: storageLimit, gasLimit: gasLimit }, DEFAULT_PARAMS)))];\r\n                    case 4:\r\n                        op = _c.sent();\r\n                        return [4 /*yield*/, this.createEstimate({ operation: op, source: sourceOrDefault })];\r\n                    case 5: return [2 /*return*/, (_c.sent())[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RPCEstimateProvider.prototype.batch = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var operations, DEFAULT_PARAMS, _a, params_1, params_1_1, param, _b, _c, _d, _e, _f, _g, _h, e_1_1;\r\n            var e_1, _j;\r\n            return __generator(this, function (_k) {\r\n                switch (_k.label) {\r\n                    case 0:\r\n                        operations = [];\r\n                        _a = this.getAccountLimits;\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 1: return [4 /*yield*/, _a.apply(this, [_k.sent()])];\r\n                    case 2:\r\n                        DEFAULT_PARAMS = _k.sent();\r\n                        _k.label = 3;\r\n                    case 3:\r\n                        _k.trys.push([3, 15, 16, 17]);\r\n                        params_1 = __values(params), params_1_1 = params_1.next();\r\n                        _k.label = 4;\r\n                    case 4:\r\n                        if (!!params_1_1.done) return [3 /*break*/, 14];\r\n                        param = params_1_1.value;\r\n                        _b = param.kind;\r\n                        switch (_b) {\r\n                            case OpKind.TRANSACTION: return [3 /*break*/, 5];\r\n                            case OpKind.ORIGINATION: return [3 /*break*/, 7];\r\n                            case OpKind.DELEGATION: return [3 /*break*/, 9];\r\n                            case OpKind.ACTIVATION: return [3 /*break*/, 11];\r\n                        }\r\n                        return [3 /*break*/, 12];\r\n                    case 5:\r\n                        _d = (_c = operations).push;\r\n                        return [4 /*yield*/, createTransferOperation(__assign(__assign({}, param), mergeLimits(param, DEFAULT_PARAMS)))];\r\n                    case 6:\r\n                        _d.apply(_c, [_k.sent()]);\r\n                        return [3 /*break*/, 13];\r\n                    case 7:\r\n                        _f = (_e = operations).push;\r\n                        return [4 /*yield*/, createOriginationOperation(__assign(__assign({}, param), mergeLimits(param, DEFAULT_PARAMS)))];\r\n                    case 8:\r\n                        _f.apply(_e, [_k.sent()]);\r\n                        return [3 /*break*/, 13];\r\n                    case 9:\r\n                        _h = (_g = operations).push;\r\n                        return [4 /*yield*/, createSetDelegateOperation(__assign(__assign({}, param), mergeLimits(param, DEFAULT_PARAMS)))];\r\n                    case 10:\r\n                        _h.apply(_g, [_k.sent()]);\r\n                        return [3 /*break*/, 13];\r\n                    case 11:\r\n                        operations.push(__assign(__assign({}, param), DEFAULT_PARAMS));\r\n                        return [3 /*break*/, 13];\r\n                    case 12: throw new Error(\"Unsupported operation kind: \" + param.kind);\r\n                    case 13:\r\n                        params_1_1 = params_1.next();\r\n                        return [3 /*break*/, 4];\r\n                    case 14: return [3 /*break*/, 17];\r\n                    case 15:\r\n                        e_1_1 = _k.sent();\r\n                        e_1 = { error: e_1_1 };\r\n                        return [3 /*break*/, 17];\r\n                    case 16:\r\n                        try {\r\n                            if (params_1_1 && !params_1_1.done && (_j = params_1.return)) _j.call(params_1);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                        return [7 /*endfinally*/];\r\n                    case 17: return [2 /*return*/, this.createEstimate({ operation: operations })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Estimate gasLimit, storageLimit and fees for a delegate operation\r\n     *\r\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\r\n     *\r\n     * @param Estimate\r\n     */\r\n    RPCEstimateProvider.prototype.registerDelegate = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var DEFAULT_PARAMS, _a, op, _b, _c, _d;\r\n            var _e;\r\n            return __generator(this, function (_f) {\r\n                switch (_f.label) {\r\n                    case 0:\r\n                        _a = this.getAccountLimits;\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 1: return [4 /*yield*/, _a.apply(this, [_f.sent()])];\r\n                    case 2:\r\n                        DEFAULT_PARAMS = _f.sent();\r\n                        _b = createRegisterDelegateOperation;\r\n                        _c = [__assign(__assign({}, params), DEFAULT_PARAMS)];\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 3: return [4 /*yield*/, _b.apply(void 0, _c.concat([_f.sent()]))];\r\n                    case 4:\r\n                        op = _f.sent();\r\n                        _d = this.createEstimate;\r\n                        _e = { operation: op };\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 5: return [4 /*yield*/, _d.apply(this, [(_e.source = _f.sent(), _e)])];\r\n                    case 6: return [2 /*return*/, (_f.sent())[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RPCEstimateProvider;\r\n}(OperationEmitter));\n\n/**\r\n * @description Delegation operation provide utility function to fetch newly issued delegation\r\n *\r\n * @warn Currently support only one delegation per operation\r\n */\r\nvar DelegateOperation = /** @class */ (function (_super) {\r\n    __extends(DelegateOperation, _super);\r\n    function DelegateOperation(hash, params, source, raw, results, context) {\r\n        var _this = _super.call(this, hash, raw, results, context) || this;\r\n        _this.params = params;\r\n        _this.source = source;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DelegateOperation.prototype, \"operationResults\", {\r\n        get: function () {\r\n            var delegationOp = Array.isArray(this.results) &&\r\n                this.results.find(function (op) { return op.kind === 'delegation'; });\r\n            var result = delegationOp && delegationOp.metadata && delegationOp.metadata.operation_result;\r\n            return result ? result : undefined;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateOperation.prototype, \"status\", {\r\n        get: function () {\r\n            var operationResults = this.operationResults;\r\n            if (operationResults) {\r\n                return operationResults.status;\r\n            }\r\n            else {\r\n                return 'unknown';\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateOperation.prototype, \"delegate\", {\r\n        get: function () {\r\n            return this.delegate;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateOperation.prototype, \"isRegisterOperation\", {\r\n        get: function () {\r\n            return this.delegate === this.source;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateOperation.prototype, \"fee\", {\r\n        get: function () {\r\n            return this.params.fee;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateOperation.prototype, \"gasLimit\", {\r\n        get: function () {\r\n            return this.params.gas_limit;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateOperation.prototype, \"storageLimit\", {\r\n        get: function () {\r\n            return this.params.storage_limit;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateOperation.prototype, \"consumedGas\", {\r\n        get: function () {\r\n            var consumedGas = this.operationResults && this.operationResults.consumed_gas;\r\n            return consumedGas ? consumedGas : undefined;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateOperation.prototype, \"errors\", {\r\n        get: function () {\r\n            return this.operationResults && this.operationResults.errors;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DelegateOperation;\r\n}(Operation));\n\n/**\r\n * @description Origination operation provide utility function to fetch newly originated contract\r\n *\r\n * @warn Currently support only one origination per operation\r\n */\r\nvar OriginationOperation = /** @class */ (function (_super) {\r\n    __extends(OriginationOperation, _super);\r\n    function OriginationOperation(hash, params, raw, results, context, contractProvider) {\r\n        var _this = _super.call(this, hash, raw, results, context) || this;\r\n        _this.params = params;\r\n        _this.contractProvider = contractProvider;\r\n        var originatedContracts = _this.operationResults && _this.operationResults.originated_contracts;\r\n        if (Array.isArray(originatedContracts)) {\r\n            _this.contractAddress = originatedContracts[0];\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(OriginationOperation.prototype, \"status\", {\r\n        get: function () {\r\n            var operationResults = this.operationResults;\r\n            if (operationResults) {\r\n                return operationResults.status;\r\n            }\r\n            else {\r\n                return 'unknown';\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OriginationOperation.prototype, \"operationResults\", {\r\n        get: function () {\r\n            var originationOp = Array.isArray(this.results) &&\r\n                this.results.find(function (op) { return op.kind === 'origination'; });\r\n            var result = originationOp &&\r\n                hasMetadataWithResult(originationOp) &&\r\n                originationOp.metadata.operation_result;\r\n            return result ? result : undefined;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OriginationOperation.prototype, \"fee\", {\r\n        get: function () {\r\n            return this.params.fee;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OriginationOperation.prototype, \"gasLimit\", {\r\n        get: function () {\r\n            return this.params.gas_limit;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OriginationOperation.prototype, \"storageLimit\", {\r\n        get: function () {\r\n            return this.params.storage_limit;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OriginationOperation.prototype, \"consumedGas\", {\r\n        get: function () {\r\n            var consumedGas = this.operationResults && this.operationResults.consumed_gas;\r\n            return consumedGas ? consumedGas : undefined;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OriginationOperation.prototype, \"storageDiff\", {\r\n        get: function () {\r\n            var storageDiff = this.operationResults && this.operationResults.paid_storage_size_diff;\r\n            return storageDiff ? storageDiff : undefined;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OriginationOperation.prototype, \"storageSize\", {\r\n        get: function () {\r\n            var storageSize = this.operationResults && this.operationResults.storage_size;\r\n            return storageSize ? storageSize : undefined;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OriginationOperation.prototype, \"errors\", {\r\n        get: function () {\r\n            return this.operationResults && this.operationResults.errors;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @description Provide the contract abstract of the newly originated contract\r\n     */\r\n    OriginationOperation.prototype.contract = function (confirmations, interval, timeout) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.contractAddress) {\r\n                            throw new Error('No contract was originated in this operation');\r\n                        }\r\n                        return [4 /*yield*/, this.confirmation(confirmations, interval, timeout)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.contractProvider.at(this.contractAddress)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return OriginationOperation;\r\n}(Operation));\n\n/**\r\n * @description Transaction operation provides utility functions to fetch a newly issued transaction\r\n *\r\n * @warn Currently supports one transaction per operation\r\n */\r\nvar TransactionOperation = /** @class */ (function (_super) {\r\n    __extends(TransactionOperation, _super);\r\n    function TransactionOperation(hash, params, source, raw, results, context) {\r\n        var _this = _super.call(this, hash, raw, results, context) || this;\r\n        _this.params = params;\r\n        _this.source = source;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TransactionOperation.prototype, \"operationResults\", {\r\n        get: function () {\r\n            var transactionOp = Array.isArray(this.results) &&\r\n                this.results.find(function (op) { return op.kind === 'transaction'; });\r\n            return transactionOp ? [transactionOp] : [];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionOperation.prototype, \"status\", {\r\n        get: function () {\r\n            var operationResults = this.operationResults;\r\n            var txResult = operationResults[0];\r\n            if (txResult) {\r\n                return txResult.metadata.operation_result.status;\r\n            }\r\n            else {\r\n                return 'unknown';\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionOperation.prototype, \"amount\", {\r\n        get: function () {\r\n            return new BigNumber(this.params.amount);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionOperation.prototype, \"destination\", {\r\n        get: function () {\r\n            return this.params.destination;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionOperation.prototype, \"fee\", {\r\n        get: function () {\r\n            return this.params.fee;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionOperation.prototype, \"gasLimit\", {\r\n        get: function () {\r\n            return this.params.gas_limit;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionOperation.prototype, \"storageLimit\", {\r\n        get: function () {\r\n            return this.params.storage_limit;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransactionOperation.prototype.sumProp = function (arr, prop) {\r\n        return arr.reduce(function (prev, current) {\r\n            return prop in current ? Number(current[prop]) + prev : prev;\r\n        }, 0);\r\n    };\r\n    Object.defineProperty(TransactionOperation.prototype, \"consumedGas\", {\r\n        get: function () {\r\n            return String(this.sumProp(flattenOperationResult({ contents: this.operationResults }), 'consumed_gas'));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionOperation.prototype, \"storageDiff\", {\r\n        get: function () {\r\n            return String(this.sumProp(flattenOperationResult({ contents: this.operationResults }), 'paid_storage_size_diff'));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionOperation.prototype, \"storageSize\", {\r\n        get: function () {\r\n            return String(this.sumProp(flattenOperationResult({ contents: this.operationResults }), 'storage_size'));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionOperation.prototype, \"errors\", {\r\n        get: function () {\r\n            return flattenErrors({ contents: this.operationResults });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return TransactionOperation;\r\n}(Operation));\n\nvar InvalidParameterError = /** @class */ (function () {\r\n    function InvalidParameterError(smartContractMethodName, sigs, args) {\r\n        this.smartContractMethodName = smartContractMethodName;\r\n        this.sigs = sigs;\r\n        this.args = args;\r\n        this.name = 'Invalid parameters error';\r\n        this.message = smartContractMethodName + \" Received \" + args.length + \" arguments while expecting one of the following signatures (\" + JSON.stringify(sigs) + \")\";\r\n    }\r\n    return InvalidParameterError;\r\n}());\r\nvar UndefinedLambdaContractError = /** @class */ (function () {\r\n    function UndefinedLambdaContractError() {\r\n        this.name = 'Undefined LambdaContract error';\r\n        this.message = \"This might happen if you are using a sandbox. Please provide the address of a lambda contract as a parameter of the read method.\";\r\n    }\r\n    return UndefinedLambdaContractError;\r\n}());\r\nvar InvalidDelegationSource = /** @class */ (function () {\r\n    function InvalidDelegationSource(source) {\r\n        this.source = source;\r\n        this.name = 'Invalid delegation source error';\r\n        this.message = \"Since Babylon delegation source can no longer be a contract address \" + source + \". Please use the smart contract abstraction to set your delegate.\";\r\n    }\r\n    return InvalidDelegationSource;\r\n}());\n\nvar setDelegate = function (key) {\r\n    return [\r\n        { prim: 'DROP' },\r\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\r\n        {\r\n            prim: 'PUSH',\r\n            args: [{ prim: 'key_hash' }, { string: key }],\r\n        },\r\n        { prim: 'SOME' },\r\n        { prim: 'SET_DELEGATE' },\r\n        { prim: 'CONS' },\r\n    ];\r\n};\r\nvar transferImplicit = function (key, mutez) {\r\n    return [\r\n        { prim: 'DROP' },\r\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\r\n        {\r\n            prim: 'PUSH',\r\n            args: [{ prim: 'key_hash' }, { string: key }],\r\n        },\r\n        { prim: 'IMPLICIT_ACCOUNT' },\r\n        {\r\n            prim: 'PUSH',\r\n            args: [{ prim: 'mutez' }, { int: \"\" + mutez }],\r\n        },\r\n        { prim: 'UNIT' },\r\n        { prim: 'TRANSFER_TOKENS' },\r\n        { prim: 'CONS' },\r\n    ];\r\n};\r\nvar removeDelegate = function () {\r\n    return [\r\n        { prim: 'DROP' },\r\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\r\n        { prim: 'NONE', args: [{ prim: 'key_hash' }] },\r\n        { prim: 'SET_DELEGATE' },\r\n        { prim: 'CONS' },\r\n    ];\r\n};\r\nvar transferToContract = function (key, amount) {\r\n    return [\r\n        { prim: 'DROP' },\r\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\r\n        {\r\n            prim: 'PUSH',\r\n            args: [{ prim: 'address' }, { string: key }],\r\n        },\r\n        { prim: 'CONTRACT', args: [{ prim: 'unit' }] },\r\n        [\r\n            {\r\n                prim: 'IF_NONE',\r\n                args: [[[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]], []],\r\n            },\r\n        ],\r\n        {\r\n            prim: 'PUSH',\r\n            args: [{ prim: 'mutez' }, { int: \"\" + amount }],\r\n        },\r\n        { prim: 'UNIT' },\r\n        { prim: 'TRANSFER_TOKENS' },\r\n        { prim: 'CONS' },\r\n    ];\r\n};\r\nvar MANAGER_LAMBDA = {\r\n    setDelegate: setDelegate,\r\n    removeDelegate: removeDelegate,\r\n    transferImplicit: transferImplicit,\r\n    transferToContract: transferToContract,\r\n};\n\nvar WalletOperationBatch = /** @class */ (function () {\r\n    function WalletOperationBatch(walletProvider, operationFactory) {\r\n        this.walletProvider = walletProvider;\r\n        this.operationFactory = operationFactory;\r\n        this.operations = [];\r\n    }\r\n    /**\r\n     *\r\n     * @description Add a transaction operation to the batch\r\n     *\r\n     * @param params Transfer operation parameter\r\n     */\r\n    WalletOperationBatch.prototype.withTransfer = function (params) {\r\n        this.operations.push(__assign({ kind: OpKind.TRANSACTION }, params));\r\n        return this;\r\n    };\r\n    /**\r\n     *\r\n     * @description Add a transaction operation to the batch\r\n     *\r\n     * @param params Transfer operation parameter\r\n     */\r\n    WalletOperationBatch.prototype.withContractCall = function (params) {\r\n        return this.withTransfer(params.toTransferParams());\r\n    };\r\n    /**\r\n     *\r\n     * @description Add a delegation operation to the batch\r\n     *\r\n     * @param params Delegation operation parameter\r\n     */\r\n    WalletOperationBatch.prototype.withDelegation = function (params) {\r\n        this.operations.push(__assign({ kind: OpKind.DELEGATION }, params));\r\n        return this;\r\n    };\r\n    /**\r\n     *\r\n     * @description Add an origination operation to the batch\r\n     *\r\n     * @param params Origination operation parameter\r\n     */\r\n    WalletOperationBatch.prototype.withOrigination = function (params) {\r\n        this.operations.push(__assign({ kind: OpKind.ORIGINATION }, params));\r\n        return this;\r\n    };\r\n    WalletOperationBatch.prototype.mapOperation = function (param) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (param.kind) {\r\n                    case OpKind.TRANSACTION:\r\n                        return [2 /*return*/, this.walletProvider.mapTransferParamsToWalletParams(__assign({}, param))];\r\n                    case OpKind.ORIGINATION:\r\n                        return [2 /*return*/, this.walletProvider.mapOriginateParamsToWalletParams(__assign({}, param))];\r\n                    case OpKind.DELEGATION:\r\n                        return [2 /*return*/, this.walletProvider.mapDelegateParamsToWalletParams(__assign({}, param))];\r\n                    default:\r\n                        throw new Error(\"Unsupported operation kind: \" + param.kind);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Add a group operation to the batch. Operation will be applied in the order they are in the params array\r\n     *\r\n     * @param params Operations parameter\r\n     */\r\n    WalletOperationBatch.prototype.with = function (params) {\r\n        var e_1, _a;\r\n        try {\r\n            for (var params_1 = __values(params), params_1_1 = params_1.next(); !params_1_1.done; params_1_1 = params_1.next()) {\r\n                var param = params_1_1.value;\r\n                switch (param.kind) {\r\n                    case OpKind.TRANSACTION:\r\n                        this.withTransfer(param);\r\n                        break;\r\n                    case OpKind.ORIGINATION:\r\n                        this.withOrigination(param);\r\n                        break;\r\n                    case OpKind.DELEGATION:\r\n                        this.withDelegation(param);\r\n                        break;\r\n                    default:\r\n                        throw new Error(\"Unsupported operation kind: \" + param.kind);\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (params_1_1 && !params_1_1.done && (_a = params_1.return)) _a.call(params_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     *\r\n     * @description Submit batch operation to wallet\r\n     *\r\n     */\r\n    WalletOperationBatch.prototype.send = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var ops, _a, _b, op, _c, _d, e_2_1, opHash;\r\n            var e_2, _e;\r\n            return __generator(this, function (_f) {\r\n                switch (_f.label) {\r\n                    case 0:\r\n                        ops = [];\r\n                        _f.label = 1;\r\n                    case 1:\r\n                        _f.trys.push([1, 6, 7, 8]);\r\n                        _a = __values(this.operations), _b = _a.next();\r\n                        _f.label = 2;\r\n                    case 2:\r\n                        if (!!_b.done) return [3 /*break*/, 5];\r\n                        op = _b.value;\r\n                        _d = (_c = ops).push;\r\n                        return [4 /*yield*/, this.mapOperation(op)];\r\n                    case 3:\r\n                        _d.apply(_c, [_f.sent()]);\r\n                        _f.label = 4;\r\n                    case 4:\r\n                        _b = _a.next();\r\n                        return [3 /*break*/, 2];\r\n                    case 5: return [3 /*break*/, 8];\r\n                    case 6:\r\n                        e_2_1 = _f.sent();\r\n                        e_2 = { error: e_2_1 };\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        try {\r\n                            if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\r\n                        }\r\n                        finally { if (e_2) throw e_2.error; }\r\n                        return [7 /*endfinally*/];\r\n                    case 8: return [4 /*yield*/, this.walletProvider.sendOperations(ops)];\r\n                    case 9:\r\n                        opHash = _f.sent();\r\n                        return [2 /*return*/, this.operationFactory.createOperation(opHash)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return WalletOperationBatch;\r\n}());\r\nvar Wallet = /** @class */ (function () {\r\n    function Wallet(context) {\r\n        this.context = context;\r\n        this.walletCommand = function (send) {\r\n            return {\r\n                send: send,\r\n            };\r\n        };\r\n    }\r\n    Object.defineProperty(Wallet.prototype, \"walletProvider\", {\r\n        get: function () {\r\n            return this.context.walletProvider;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @description Retrieve the PKH of the account that is currently in use by the wallet\r\n     *\r\n     * @param option Option to use while fetching the PKH.\r\n     * If forceRefetch is specified the wallet provider implementation will refetch the PKH from the wallet\r\n     */\r\n    Wallet.prototype.pkh = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, forceRefetch = _b.forceRefetch;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _c;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        if (!(!this._pkh || forceRefetch)) return [3 /*break*/, 2];\r\n                        _c = this;\r\n                        return [4 /*yield*/, this.walletProvider.getPKH()];\r\n                    case 1:\r\n                        _c._pkh = _d.sent();\r\n                        _d.label = 2;\r\n                    case 2: return [2 /*return*/, this._pkh];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Originate a new contract according to the script in parameters.\r\n     *\r\n     * @returns An operation handle with the result from the rpc node\r\n     *\r\n     * @param originateParams Originate operation parameter\r\n     */\r\n    Wallet.prototype.originate = function (params) {\r\n        var _this = this;\r\n        return this.walletCommand(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var mappedParams, opHash;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.walletProvider.mapOriginateParamsToWalletParams(__assign({}, params))];\r\n                    case 1:\r\n                        mappedParams = _a.sent();\r\n                        return [4 /*yield*/, this.walletProvider.sendOperations([mappedParams])];\r\n                    case 2:\r\n                        opHash = _a.sent();\r\n                        return [2 /*return*/, this.context.operationFactory.createOriginationOperation(opHash)];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     *\r\n     * @description Set the delegate for a contract.\r\n     *\r\n     * @returns An operation handle with the result from the rpc node\r\n     *\r\n     * @param delegateParams operation parameter\r\n     */\r\n    Wallet.prototype.setDelegate = function (params) {\r\n        var _this = this;\r\n        return this.walletCommand(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var mappedParams, opHash;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.walletProvider.mapDelegateParamsToWalletParams(__assign({}, params))];\r\n                    case 1:\r\n                        mappedParams = _a.sent();\r\n                        return [4 /*yield*/, this.walletProvider.sendOperations([mappedParams])];\r\n                    case 2:\r\n                        opHash = _a.sent();\r\n                        return [2 /*return*/, this.context.operationFactory.createDelegationOperation(opHash)];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     *\r\n     * @description Register the current address as delegate.\r\n     *\r\n     * @returns An operation handle with the result from the rpc node\r\n     *\r\n     */\r\n    Wallet.prototype.registerDelegate = function () {\r\n        var _this = this;\r\n        return this.walletCommand(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var mappedParams, _a, _b, opHash;\r\n            var _c;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _b = (_a = this.walletProvider).mapDelegateParamsToWalletParams;\r\n                        _c = {};\r\n                        return [4 /*yield*/, this.pkh()];\r\n                    case 1: return [4 /*yield*/, _b.apply(_a, [(_c.delegate = _d.sent(),\r\n                                _c)])];\r\n                    case 2:\r\n                        mappedParams = _d.sent();\r\n                        return [4 /*yield*/, this.walletProvider.sendOperations([mappedParams])];\r\n                    case 3:\r\n                        opHash = _d.sent();\r\n                        return [2 /*return*/, this.context.operationFactory.createDelegationOperation(opHash)];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     *\r\n     * @description Transfer tezos tokens from current address to a specific address or call a smart contract.\r\n     *\r\n     * @returns A wallet command from which we can send the operation to the wallet\r\n     *\r\n     * @param params operation parameter\r\n     */\r\n    Wallet.prototype.transfer = function (params) {\r\n        var _this = this;\r\n        return this.walletCommand(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var mappedParams, opHash;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.walletProvider.mapTransferParamsToWalletParams(params)];\r\n                    case 1:\r\n                        mappedParams = _a.sent();\r\n                        return [4 /*yield*/, this.walletProvider.sendOperations([mappedParams])];\r\n                    case 2:\r\n                        opHash = _a.sent();\r\n                        return [2 /*return*/, this.context.operationFactory.createTransactionOperation(opHash)];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     *\r\n     * @description Create a batch of operation\r\n     *\r\n     * @returns A batch object from which we can add more operation or send a command to the wallet to execute the batch\r\n     *\r\n     * @param params List of operation to initialize the batch with\r\n     */\r\n    Wallet.prototype.batch = function (params) {\r\n        var batch = new WalletOperationBatch(this.walletProvider, this.context.operationFactory);\r\n        batch.with(params);\r\n        return batch;\r\n    };\r\n    /**\r\n     *\r\n     * @description Create an smart contract abstraction for the address specified. Calling entrypoints with the returned\r\n     * smart contract abstraction will leverage the wallet provider to make smart contract calls\r\n     *\r\n     * @param address Smart contract address\r\n     */\r\n    Wallet.prototype.at = function (address) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var script, entrypoints, blockHeader, chainId;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.context.rpc.getScript(address)];\r\n                    case 1:\r\n                        script = _a.sent();\r\n                        return [4 /*yield*/, this.context.rpc.getEntrypoints(address)];\r\n                    case 2:\r\n                        entrypoints = _a.sent();\r\n                        return [4 /*yield*/, this.context.rpc.getBlockHeader()];\r\n                    case 3:\r\n                        blockHeader = _a.sent();\r\n                        chainId = blockHeader.chain_id;\r\n                        return [2 /*return*/, new ContractAbstraction(address, script, this, this.context.contract, entrypoints, chainId)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Wallet;\r\n}());\n\nvar LegacyWalletProvider = /** @class */ (function () {\r\n    function LegacyWalletProvider(context) {\r\n        this.context = context;\r\n    }\r\n    LegacyWalletProvider.prototype.getPKH = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.context.signer.publicKeyHash()];\r\n            });\r\n        });\r\n    };\r\n    LegacyWalletProvider.prototype.mapTransferParamsToWalletParams = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, attachKind(params, OpKind.TRANSACTION)];\r\n            });\r\n        });\r\n    };\r\n    LegacyWalletProvider.prototype.mapOriginateParamsToWalletParams = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, attachKind(params, OpKind.ORIGINATION)];\r\n            });\r\n        });\r\n    };\r\n    LegacyWalletProvider.prototype.mapDelegateParamsToWalletParams = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, attachKind(params, OpKind.DELEGATION)];\r\n            });\r\n        });\r\n    };\r\n    LegacyWalletProvider.prototype.sendOperations = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var op;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.context.batch.batch(params).send()];\r\n                    case 1:\r\n                        op = _a.sent();\r\n                        return [2 /*return*/, op.hash];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return LegacyWalletProvider;\r\n}());\n\nvar LambdaView = /** @class */ (function () {\r\n    function LambdaView(lambdaContract, viewContract, viewMethod, contractParameter) {\r\n        if (viewMethod === void 0) { viewMethod = 'default'; }\r\n        if (contractParameter === void 0) { contractParameter = { prim: 'Unit' }; }\r\n        this.lambdaContract = lambdaContract;\r\n        this.viewContract = viewContract;\r\n        this.viewMethod = viewMethod;\r\n        this.contractParameter = contractParameter;\r\n        this.voidLambda = this.createVoidLambda();\r\n    }\r\n    LambdaView.prototype.execute = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var ex_1, lastError, failedWith;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.lambdaContract.methods.default(this.voidLambda).send()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        ex_1 = _a.sent();\r\n                        if (ex_1 instanceof TezosOperationError) {\r\n                            lastError = ex_1.errors[ex_1.errors.length - 1];\r\n                            failedWith = lastError.with;\r\n                            return [2 /*return*/, failedWith];\r\n                        }\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LambdaView.prototype.createVoidLambda = function () {\r\n        var _a = __read(this.getView(), 2), parameter = _a[0], callback = _a[1];\r\n        var contractArgs = [\r\n            {\r\n                prim: 'pair',\r\n                args: [parameter, { prim: 'contract', args: [callback] }],\r\n            },\r\n        ];\r\n        if (this.viewMethod === 'default') {\r\n            contractArgs = [{ string: '%default' }].concat(contractArgs);\r\n        }\r\n        return [\r\n            { prim: 'PUSH', args: [{ prim: 'mutez' }, { int: '0' }] },\r\n            { prim: 'NONE', args: [{ prim: 'key_hash' }] },\r\n            {\r\n                prim: 'CREATE_CONTRACT',\r\n                args: [\r\n                    [\r\n                        { prim: 'parameter', args: [callback] },\r\n                        { prim: 'storage', args: [{ prim: 'unit' }] },\r\n                        {\r\n                            prim: 'code',\r\n                            args: [[{ prim: 'CAR' }, { prim: 'FAILWITH' }]],\r\n                        },\r\n                    ],\r\n                ],\r\n            },\r\n            {\r\n                prim: 'DIP',\r\n                args: [\r\n                    [\r\n                        {\r\n                            prim: 'DIP',\r\n                            args: [\r\n                                [\r\n                                    {\r\n                                        prim: 'LAMBDA',\r\n                                        args: [\r\n                                            {\r\n                                                prim: 'pair',\r\n                                                args: [{ prim: 'address' }, { prim: 'unit' }],\r\n                                            },\r\n                                            {\r\n                                                prim: 'pair',\r\n                                                args: [{ prim: 'list', args: [{ prim: 'operation' }] }, { prim: 'unit' }],\r\n                                            },\r\n                                            [\r\n                                                { prim: 'CAR' },\r\n                                                { prim: 'CONTRACT', args: [callback] },\r\n                                                {\r\n                                                    prim: 'IF_NONE',\r\n                                                    args: [\r\n                                                        [\r\n                                                            {\r\n                                                                prim: 'PUSH',\r\n                                                                args: [{ prim: 'string' }, { string: \"Callback type unmatched\" }],\r\n                                                            },\r\n                                                            { prim: 'FAILWITH' },\r\n                                                        ],\r\n                                                        [],\r\n                                                    ],\r\n                                                },\r\n                                                {\r\n                                                    prim: 'PUSH',\r\n                                                    args: [parameter, this.contractParameter],\r\n                                                },\r\n                                                { prim: 'PAIR' },\r\n                                                {\r\n                                                    prim: 'DIP',\r\n                                                    args: [\r\n                                                        [\r\n                                                            {\r\n                                                                prim: 'PUSH',\r\n                                                                args: [\r\n                                                                    { prim: 'address' },\r\n                                                                    { string: this.viewContract.address + \"%\" + this.viewMethod },\r\n                                                                ],\r\n                                                            },\r\n                                                            { prim: 'DUP' },\r\n                                                            { prim: 'CONTRACT', args: contractArgs },\r\n                                                            {\r\n                                                                prim: 'IF_NONE',\r\n                                                                args: [\r\n                                                                    [\r\n                                                                        {\r\n                                                                            prim: 'PUSH',\r\n                                                                            args: [\r\n                                                                                { prim: 'string' },\r\n                                                                                { string: \"Contract does not exist\" },\r\n                                                                            ],\r\n                                                                        },\r\n                                                                        { prim: 'FAILWITH' },\r\n                                                                    ],\r\n                                                                    [{ prim: 'DIP', args: [[{ prim: 'DROP' }]] }],\r\n                                                                ],\r\n                                                            },\r\n                                                            {\r\n                                                                prim: 'PUSH',\r\n                                                                args: [{ prim: 'mutez' }, { int: '0' }],\r\n                                                            },\r\n                                                        ],\r\n                                                    ],\r\n                                                },\r\n                                                { prim: 'TRANSFER_TOKENS' },\r\n                                                {\r\n                                                    prim: 'DIP',\r\n                                                    args: [[{ prim: 'NIL', args: [{ prim: 'operation' }] }]],\r\n                                                },\r\n                                                { prim: 'CONS' },\r\n                                                { prim: 'DIP', args: [[{ prim: 'UNIT' }]] },\r\n                                                { prim: 'PAIR' },\r\n                                            ],\r\n                                        ],\r\n                                    },\r\n                                ],\r\n                            ],\r\n                        },\r\n                        { prim: 'APPLY' },\r\n                        {\r\n                            prim: 'DIP',\r\n                            args: [\r\n                                [\r\n                                    {\r\n                                        prim: 'PUSH',\r\n                                        args: [{ prim: 'address' }, { string: this.lambdaContract.address }],\r\n                                    },\r\n                                    { prim: 'DUP' },\r\n                                    {\r\n                                        prim: 'CONTRACT',\r\n                                        args: [\r\n                                            {\r\n                                                prim: 'lambda',\r\n                                                args: [\r\n                                                    { prim: 'unit' },\r\n                                                    {\r\n                                                        prim: 'pair',\r\n                                                        args: [\r\n                                                            { prim: 'list', args: [{ prim: 'operation' }] },\r\n                                                            { prim: 'unit' },\r\n                                                        ],\r\n                                                    },\r\n                                                ],\r\n                                            },\r\n                                        ],\r\n                                    },\r\n                                    {\r\n                                        prim: 'IF_NONE',\r\n                                        args: [\r\n                                            [\r\n                                                {\r\n                                                    prim: 'PUSH',\r\n                                                    args: [{ prim: 'string' }, { string: \"Contract does not exists\" }],\r\n                                                },\r\n                                                { prim: 'FAILWITH' },\r\n                                            ],\r\n                                            [{ prim: 'DIP', args: [[{ prim: 'DROP' }]] }],\r\n                                        ],\r\n                                    },\r\n                                    { prim: 'PUSH', args: [{ prim: 'mutez' }, { int: '0' }] },\r\n                                ],\r\n                            ],\r\n                        },\r\n                        { prim: 'TRANSFER_TOKENS' },\r\n                        {\r\n                            prim: 'DIP',\r\n                            args: [[{ prim: 'NIL', args: [{ prim: 'operation' }] }]],\r\n                        },\r\n                        { prim: 'CONS' },\r\n                    ],\r\n                ],\r\n            },\r\n            { prim: 'CONS' },\r\n            { prim: 'DIP', args: [[{ prim: 'UNIT' }]] },\r\n            { prim: 'PAIR' },\r\n        ];\r\n    };\r\n    LambdaView.prototype.getView = function () {\r\n        var entrypoints = this.viewContract.entrypoints.entrypoints;\r\n        var entrypoint = entrypoints[this.viewMethod];\r\n        if (!entrypoint) {\r\n            throw Error(\"Contract at \" + this.viewContract.address + \" does not have entrypoint: \" + this.viewMethod);\r\n        }\r\n        if (!('prim' in entrypoint) || !entrypoint.args) {\r\n            // TODO: Enhance this error message to be more descriptive\r\n            throw Error('Entrypoint args undefined');\r\n        }\r\n        var args = Array.from(entrypoint.args);\r\n        var _a = __read(args, 2), parameter = _a[0], callbackContract = _a[1];\r\n        if ('annots' in parameter) {\r\n            delete parameter['annots'];\r\n        }\r\n        if (!('prim' in callbackContract) || !callbackContract.args) {\r\n            // TODO: Enhance this error message to be more descriptive\r\n            throw Error('Callback contract args undefined');\r\n        }\r\n        var message;\r\n        if (entrypoint.prim !== 'pair') {\r\n            message = \"Expected {'prim': 'pair', ..} but found {'prim': \" + entrypoint.prim + \", ..}\";\r\n        }\r\n        else if (args.length !== 2) {\r\n            message = \"Expected an Array of length 2, but found: \" + args;\r\n        }\r\n        else if (callbackContract.prim !== 'contract') {\r\n            message = \"Expected a {prim: 'contract', ...}, but found: \" + callbackContract.prim;\r\n        }\r\n        else if (callbackContract.args && callbackContract.args.length !== 1) {\r\n            message = \"Expected a single argument to 'contract', but found: \" + callbackContract.args;\r\n        }\r\n        if (message)\r\n            throw Error(message);\r\n        return [parameter, callbackContract.args[0]];\r\n    };\r\n    return LambdaView;\r\n}());\n\nvar DEFAULT_SMART_CONTRACT_METHOD_NAME = 'default';\r\n/**\r\n * @description Utility class to send smart contract operation\r\n */\r\nvar ContractMethod = /** @class */ (function () {\r\n    function ContractMethod(provider, address, parameterSchema, name, args, isMultipleEntrypoint, isAnonymous) {\r\n        if (isMultipleEntrypoint === void 0) { isMultipleEntrypoint = true; }\r\n        if (isAnonymous === void 0) { isAnonymous = false; }\r\n        this.provider = provider;\r\n        this.address = address;\r\n        this.parameterSchema = parameterSchema;\r\n        this.name = name;\r\n        this.args = args;\r\n        this.isMultipleEntrypoint = isMultipleEntrypoint;\r\n        this.isAnonymous = isAnonymous;\r\n    }\r\n    Object.defineProperty(ContractMethod.prototype, \"schema\", {\r\n        /**\r\n         * @description Get the schema of the smart contract method\r\n         */\r\n        get: function () {\r\n            return this.isAnonymous\r\n                ? this.parameterSchema.ExtractSchema()[this.name]\r\n                : this.parameterSchema.ExtractSchema();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @description Send the smart contract operation\r\n     *\r\n     * @param Options generic operation parameter\r\n     */\r\n    ContractMethod.prototype.send = function (params) {\r\n        if (params === void 0) { params = {}; }\r\n        if (this.provider instanceof Wallet) {\r\n            // TODO got around TS2352: Conversion of type 'T & Wallet' to type 'Wallet' by adding `as unknown`. Needs clarification\r\n            return this.provider.transfer(this.toTransferParams(params)).send();\r\n        }\r\n        else {\r\n            return this.provider.transfer(this.toTransferParams(params));\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @description Create transfer params to be used with TezosToolkit.contract.transfer methods\r\n     *\r\n     * @param Options generic transfer operation parameters\r\n     */\r\n    ContractMethod.prototype.toTransferParams = function (_a) {\r\n        var _b, _c;\r\n        var _d = _a === void 0 ? {} : _a, fee = _d.fee, gasLimit = _d.gasLimit, storageLimit = _d.storageLimit, source = _d.source, _e = _d.amount, amount = _e === void 0 ? 0 : _e, _f = _d.mutez, mutez = _f === void 0 ? false : _f;\r\n        var fullTransferParams = {\r\n            to: this.address,\r\n            amount: amount,\r\n            fee: fee,\r\n            mutez: mutez,\r\n            source: source,\r\n            gasLimit: gasLimit,\r\n            storageLimit: storageLimit,\r\n            parameter: {\r\n                entrypoint: this.isMultipleEntrypoint ? this.name : 'default',\r\n                value: this.isAnonymous\r\n                    ? (_b = this.parameterSchema).Encode.apply(_b, __spread([this.name], this.args)) : (_c = this.parameterSchema).Encode.apply(_c, __spread(this.args)),\r\n            },\r\n        };\r\n        return fullTransferParams;\r\n    };\r\n    return ContractMethod;\r\n}());\r\n/**\r\n * @description Utility class to retrieve data from a smart contract's storage without incurring fees via a contract's view method\r\n */\r\nvar ContractView = /** @class */ (function () {\r\n    function ContractView(currentContract, provider, name, chainId, callbackParametersSchema, parameterSchema, args) {\r\n        this.currentContract = currentContract;\r\n        this.provider = provider;\r\n        this.name = name;\r\n        this.chainId = chainId;\r\n        this.callbackParametersSchema = callbackParametersSchema;\r\n        this.parameterSchema = parameterSchema;\r\n        this.args = args;\r\n    }\r\n    /**\r\n     *\r\n     * @description Find which lambda contract to use based on the current network,\r\n     * encode parameters to Michelson,\r\n     * create an instance of Lambdaview to retrive data, and\r\n     * Decode Michelson response\r\n     *\r\n     * @param Options Address of a lambda contract (sandbox users)\r\n     */\r\n    ContractView.prototype.read = function (customLambdaAddress) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var lambdaAddress, lambdaContract, arg, lambdaView, failedWith, response;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        // TODO Verify if the 'customLambdaAdress' is a valid originated contract and if not, return an appropriate error message. \r\n                        if (customLambdaAddress) {\r\n                            lambdaAddress = customLambdaAddress;\r\n                        }\r\n                        else if (this.chainId === ChainIds.CARTHAGENET) {\r\n                            lambdaAddress = DefaultLambdaAddresses.CARTHAGENET;\r\n                        }\r\n                        else if (this.chainId === ChainIds.DELPHINET) {\r\n                            lambdaAddress = DefaultLambdaAddresses.DELPHINET;\r\n                        }\r\n                        else if (this.chainId === ChainIds.MAINNET) {\r\n                            lambdaAddress = DefaultLambdaAddresses.MAINNET;\r\n                        }\r\n                        else {\r\n                            throw new UndefinedLambdaContractError();\r\n                        }\r\n                        return [4 /*yield*/, this.provider.at(lambdaAddress)];\r\n                    case 1:\r\n                        lambdaContract = _b.sent();\r\n                        arg = (_a = this.parameterSchema).Encode.apply(_a, __spread(this.args));\r\n                        lambdaView = new LambdaView(lambdaContract, this.currentContract, this.name, arg);\r\n                        return [4 /*yield*/, lambdaView.execute()];\r\n                    case 2:\r\n                        failedWith = _b.sent();\r\n                        response = this.callbackParametersSchema.Execute(failedWith);\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContractView;\r\n}());\r\nvar validateArgs = function (args, schema, name) {\r\n    var sigs = schema.ExtractSignatures();\r\n    if (!sigs.find(function (x) { return x.length === args.length; })) {\r\n        throw new InvalidParameterError(name, sigs, args);\r\n    }\r\n};\r\nvar isView = function (schema) {\r\n    var isView = false;\r\n    var sigs = schema.ExtractSignatures();\r\n    if ((sigs[0][sigs[0].length - 1] === 'contract')) {\r\n        isView = true;\r\n    }\r\n    return isView;\r\n};\r\nvar isContractProvider = function (variableToCheck) {\r\n    return variableToCheck.contractProviderTypeSymbol !== undefined;\r\n};\r\n/**\r\n * @description Smart contract abstraction\r\n */\r\nvar ContractAbstraction = /** @class */ (function () {\r\n    function ContractAbstraction(address, script, provider, storageProvider, entrypoints, chainId) {\r\n        this.address = address;\r\n        this.script = script;\r\n        this.storageProvider = storageProvider;\r\n        this.entrypoints = entrypoints;\r\n        this.chainId = chainId;\r\n        /**\r\n         * @description Contains methods that are implemented by the target Tezos Smart Contract, and offers the user to call the Smart Contract methods as if they were native TS/JS methods.\r\n         * NB: if the contract contains annotation it will include named properties; if not it will be indexed by a number.\r\n         *\r\n         */\r\n        this.methods = {};\r\n        this.views = {};\r\n        this.schema = Schema.fromRPCResponse({ script: this.script });\r\n        this.parameterSchema = ParameterSchema.fromRPCResponse({ script: this.script });\r\n        this._initializeMethods(this, address, provider, this.entrypoints.entrypoints, this.chainId);\r\n    }\r\n    ContractAbstraction.prototype._initializeMethods = function (currentContract, address, provider, entrypoints, chainId) {\r\n        var _this = this;\r\n        var parameterSchema = this.parameterSchema;\r\n        var keys = Object.keys(entrypoints);\r\n        if (parameterSchema.isMultipleEntryPoint) {\r\n            keys.forEach(function (smartContractMethodName) {\r\n                var smartContractMethodSchema = new ParameterSchema(entrypoints[smartContractMethodName]);\r\n                var method = function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    validateArgs(args, smartContractMethodSchema, smartContractMethodName);\r\n                    return new ContractMethod(provider, address, smartContractMethodSchema, smartContractMethodName, args);\r\n                };\r\n                _this.methods[smartContractMethodName] = method;\r\n                if (isContractProvider(provider)) {\r\n                    if (isView(smartContractMethodSchema)) {\r\n                        var view = function () {\r\n                            var args = [];\r\n                            for (var _i = 0; _i < arguments.length; _i++) {\r\n                                args[_i] = arguments[_i];\r\n                            }\r\n                            var entrypointParamWithoutCallback = entrypoints[smartContractMethodName].args[0];\r\n                            var smartContractMethodSchemaWithoutCallback = new ParameterSchema(entrypointParamWithoutCallback);\r\n                            var parametersCallback = entrypoints[smartContractMethodName].args[1].args[0];\r\n                            var smartContractMethodCallbackSchema = new ParameterSchema(parametersCallback);\r\n                            validateArgs(args, smartContractMethodSchemaWithoutCallback, smartContractMethodName);\r\n                            return new ContractView(currentContract, provider, smartContractMethodName, chainId, smartContractMethodCallbackSchema, smartContractMethodSchemaWithoutCallback, args);\r\n                        };\r\n                        _this.views[smartContractMethodName] = view;\r\n                    }\r\n                }\r\n            });\r\n            // Deal with methods with no annotations which were not discovered by the RPC endpoint\r\n            // Methods with no annotations are discovered using parameter schema\r\n            var anonymousMethods = Object.keys(parameterSchema.ExtractSchema()).filter(function (key) { return Object.keys(entrypoints).indexOf(key) === -1; });\r\n            anonymousMethods.forEach(function (smartContractMethodName) {\r\n                var method = function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    validateArgs(__spread([smartContractMethodName], args), parameterSchema, smartContractMethodName);\r\n                    return new ContractMethod(provider, address, parameterSchema, smartContractMethodName, args, false, true);\r\n                };\r\n                _this.methods[smartContractMethodName] = method;\r\n            });\r\n        }\r\n        else {\r\n            var smartContractMethodSchema_1 = this.parameterSchema;\r\n            var method = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                validateArgs(args, parameterSchema, DEFAULT_SMART_CONTRACT_METHOD_NAME);\r\n                return new ContractMethod(provider, address, smartContractMethodSchema_1, DEFAULT_SMART_CONTRACT_METHOD_NAME, args, false);\r\n            };\r\n            this.methods[DEFAULT_SMART_CONTRACT_METHOD_NAME] = method;\r\n        }\r\n    };\r\n    /**\r\n     * @description Return a friendly representation of the smart contract storage\r\n     */\r\n    ContractAbstraction.prototype.storage = function () {\r\n        return this.storageProvider.getStorage(this.address, this.schema);\r\n    };\r\n    /**\r\n     *\r\n     * @description Return a friendly representation of the smart contract big map value\r\n     *\r\n     * @param key BigMap key to fetch\r\n     *\r\n     * @deprecated getBigMapKey has been deprecated in favor of getBigMapKeyByID\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\r\n     */\r\n    ContractAbstraction.prototype.bigMap = function (key) {\r\n        // tslint:disable-next-line: deprecation\r\n        return this.storageProvider.getBigMapKey(this.address, key, this.schema);\r\n    };\r\n    return ContractAbstraction;\r\n}());\n\nvar BigMapAbstraction = /** @class */ (function () {\r\n    function BigMapAbstraction(id, schema, provider) {\r\n        this.id = id;\r\n        this.schema = schema;\r\n        this.provider = provider;\r\n    }\r\n    BigMapAbstraction.prototype.get = function (keyToEncode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var id, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.provider.getBigMapKeyByID(this.id.toString(), keyToEncode, this.schema)];\r\n                    case 1:\r\n                        id = _a.sent();\r\n                        return [2 /*return*/, id];\r\n                    case 2:\r\n                        e_1 = _a.sent();\r\n                        if (e_1 instanceof HttpResponseError && e_1.status === STATUS_CODE.NOT_FOUND) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        else {\r\n                            throw e_1;\r\n                        }\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BigMapAbstraction.prototype.toJSON = function () {\r\n        return this.id.toString();\r\n    };\r\n    BigMapAbstraction.prototype.toString = function () {\r\n        return this.id.toString();\r\n    };\r\n    return BigMapAbstraction;\r\n}());\n\n// Override the default michelson encoder semantic to provide richer abstraction over storage properties\r\nvar smartContractAbstractionSemantic = function (provider) { return ({\r\n    // Provide a specific abstraction for BigMaps\r\n    big_map: function (val, code) {\r\n        if (!val || !('int' in val) || val.int === undefined) {\r\n            // Return an empty object in case of missing big map ID\r\n            return {};\r\n        }\r\n        else {\r\n            var schema = new Schema(code);\r\n            return new BigMapAbstraction(new BigNumber(val.int), schema, provider);\r\n        }\r\n    },\r\n}); };\n\nvar RpcContractProvider = /** @class */ (function (_super) {\r\n    __extends(RpcContractProvider, _super);\r\n    function RpcContractProvider(context, estimator) {\r\n        var _this = _super.call(this, context) || this;\r\n        _this.estimator = estimator;\r\n        _this.contractProviderTypeSymbol = Symbol.for('taquito--provider-type-symbol');\r\n        return _this;\r\n    }\r\n    /**\r\n     *\r\n     * @description Return a well formatted json object of the contract storage\r\n     *\r\n     * @param contract contract address you want to get the storage from\r\n     * @param schema optional schema can either be the contract script rpc response or a michelson-encoder schema\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\r\n     */\r\n    RpcContractProvider.prototype.getStorage = function (contract, schema) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contractSchema, storage;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!schema) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.rpc.getScript(contract)];\r\n                    case 1:\r\n                        schema = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (Schema.isSchema(schema)) {\r\n                            contractSchema = schema;\r\n                        }\r\n                        else {\r\n                            contractSchema = Schema.fromRPCResponse({ script: schema });\r\n                        }\r\n                        return [4 /*yield*/, this.rpc.getStorage(contract)];\r\n                    case 3:\r\n                        storage = _a.sent();\r\n                        return [2 /*return*/, contractSchema.Execute(storage, smartContractAbstractionSemantic(this))]; // Cast into T because only the caller can know the true type of the storage\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Return a well formatted json object of the contract big map storage\r\n     *\r\n     * @param contract contract address you want to get the storage from\r\n     * @param key contract big map key to fetch value from\r\n     * @param schema optional schema can either be the contract script rpc response or a michelson-encoder schema\r\n     *\r\n     * @deprecated Deprecated in favor of getBigMapKeyByID\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\r\n     */\r\n    RpcContractProvider.prototype.getBigMapKey = function (contract, key, schema) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contractSchema, encodedKey, val;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!schema) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.rpc.getScript(contract)];\r\n                    case 1:\r\n                        schema = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (Schema.isSchema(schema)) {\r\n                            contractSchema = schema;\r\n                        }\r\n                        else {\r\n                            contractSchema = Schema.fromRPCResponse({ script: schema });\r\n                        }\r\n                        encodedKey = contractSchema.EncodeBigMapKey(key);\r\n                        return [4 /*yield*/, this.rpc.getBigMapKey(contract, encodedKey)];\r\n                    case 3:\r\n                        val = _a.sent();\r\n                        return [2 /*return*/, contractSchema.ExecuteOnBigMapValue(val)]; // Cast into T because only the caller can know the true type of the storage\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Return a well formatted json object of a big map value\r\n     *\r\n     * @param id Big Map ID\r\n     * @param keyToEncode key to query (will be encoded properly according to the schema)\r\n     * @param schema Big Map schema (can be determined using your contract type)\r\n     *\r\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-big-maps-big-map-id-script-expr\r\n     */\r\n    RpcContractProvider.prototype.getBigMapKeyByID = function (id, keyToEncode, schema) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, key, type, packed, encodedExpr, bigMapValue;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = schema.EncodeBigMapKey(keyToEncode), key = _a.key, type = _a.type;\r\n                        return [4 /*yield*/, this.context.rpc.packData({ data: key, type: type })];\r\n                    case 1:\r\n                        packed = (_b.sent()).packed;\r\n                        encodedExpr = encodeExpr(packed);\r\n                        return [4 /*yield*/, this.context.rpc.getBigMapExpr(id.toString(), encodedExpr)];\r\n                    case 2:\r\n                        bigMapValue = _b.sent();\r\n                        return [2 /*return*/, schema.ExecuteOnBigMapValue(bigMapValue, smartContractAbstractionSemantic(this))];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Originate a new contract according to the script in parameters. Will sign and inject an operation using the current context\r\n     *\r\n     * @returns An operation handle with the result from the rpc node\r\n     *\r\n     * @warn You cannot specify storage and init at the same time (use init to pass the raw michelson representation of storage)\r\n     *\r\n     * @param OriginationOperation Originate operation parameter\r\n     */\r\n    RpcContractProvider.prototype.originate = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var estimate, publicKeyHash, operation, preparedOrigination, forgedOrigination, _a, hash, context, forgedBytes, opResponse;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.estimate(params, this.estimator.originate.bind(this.estimator))];\r\n                    case 1:\r\n                        estimate = _b.sent();\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 2:\r\n                        publicKeyHash = _b.sent();\r\n                        return [4 /*yield*/, createOriginationOperation(__assign(__assign({}, params), estimate))];\r\n                    case 3:\r\n                        operation = _b.sent();\r\n                        return [4 /*yield*/, this.prepareOperation({ operation: operation, source: publicKeyHash })];\r\n                    case 4:\r\n                        preparedOrigination = _b.sent();\r\n                        return [4 /*yield*/, this.forge(preparedOrigination)];\r\n                    case 5:\r\n                        forgedOrigination = _b.sent();\r\n                        return [4 /*yield*/, this.signAndInject(forgedOrigination)];\r\n                    case 6:\r\n                        _a = _b.sent(), hash = _a.hash, context = _a.context, forgedBytes = _a.forgedBytes, opResponse = _a.opResponse;\r\n                        return [2 /*return*/, new OriginationOperation(hash, operation, forgedBytes, opResponse, context, this)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Set the delegate for a contract. Will sign and inject an operation using the current context\r\n     *\r\n     * @returns An operation handle with the result from the rpc node\r\n     *\r\n     * @param SetDelegate operation parameter\r\n     */\r\n    RpcContractProvider.prototype.setDelegate = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var estimate, operation, sourceOrDefault, _a, opBytes, _b, hash, context, forgedBytes, opResponse;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        // Since babylon delegation source cannot smart contract\r\n                        if (/kt1/i.test(params.source)) {\r\n                            throw new InvalidDelegationSource(params.source);\r\n                        }\r\n                        return [4 /*yield*/, this.estimate(params, this.estimator.setDelegate.bind(this.estimator))];\r\n                    case 1:\r\n                        estimate = _c.sent();\r\n                        return [4 /*yield*/, createSetDelegateOperation(__assign(__assign({}, params), estimate))];\r\n                    case 2:\r\n                        operation = _c.sent();\r\n                        _a = params.source;\r\n                        if (_a) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 3:\r\n                        _a = (_c.sent());\r\n                        _c.label = 4;\r\n                    case 4:\r\n                        sourceOrDefault = _a;\r\n                        return [4 /*yield*/, this.prepareAndForge({\r\n                                operation: operation,\r\n                                source: sourceOrDefault,\r\n                            })];\r\n                    case 5:\r\n                        opBytes = _c.sent();\r\n                        return [4 /*yield*/, this.signAndInject(opBytes)];\r\n                    case 6:\r\n                        _b = _c.sent(), hash = _b.hash, context = _b.context, forgedBytes = _b.forgedBytes, opResponse = _b.opResponse;\r\n                        return [2 /*return*/, new DelegateOperation(hash, operation, sourceOrDefault, forgedBytes, opResponse, context)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Register the current address as delegate. Will sign and inject an operation using the current context\r\n     *\r\n     * @returns An operation handle with the result from the rpc node\r\n     *\r\n     * @param RegisterDelegate operation parameter\r\n     */\r\n    RpcContractProvider.prototype.registerDelegate = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var estimate, source, operation, opBytes, _a, hash, context, forgedBytes, opResponse;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.estimate(params, this.estimator.registerDelegate.bind(this.estimator))];\r\n                    case 1:\r\n                        estimate = _b.sent();\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 2:\r\n                        source = _b.sent();\r\n                        return [4 /*yield*/, createRegisterDelegateOperation(__assign(__assign({}, params), estimate), source)];\r\n                    case 3:\r\n                        operation = _b.sent();\r\n                        return [4 /*yield*/, this.prepareAndForge({ operation: operation })];\r\n                    case 4:\r\n                        opBytes = _b.sent();\r\n                        return [4 /*yield*/, this.signAndInject(opBytes)];\r\n                    case 5:\r\n                        _a = _b.sent(), hash = _a.hash, context = _a.context, forgedBytes = _a.forgedBytes, opResponse = _a.opResponse;\r\n                        return [2 /*return*/, new DelegateOperation(hash, operation, source, forgedBytes, opResponse, context)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Transfer tz from current address to a specific address. Will sign and inject an operation using the current context\r\n     *\r\n     * @returns An operation handle with the result from the rpc node\r\n     *\r\n     * @param Transfer operation parameter\r\n     */\r\n    RpcContractProvider.prototype.transfer = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var estimate, operation, source, _a, opBytes, _b, hash, context, forgedBytes, opResponse;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0: return [4 /*yield*/, this.estimate(params, this.estimator.transfer.bind(this.estimator))];\r\n                    case 1:\r\n                        estimate = _c.sent();\r\n                        return [4 /*yield*/, createTransferOperation(__assign(__assign({}, params), estimate))];\r\n                    case 2:\r\n                        operation = _c.sent();\r\n                        _a = params.source;\r\n                        if (_a) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 3:\r\n                        _a = (_c.sent());\r\n                        _c.label = 4;\r\n                    case 4:\r\n                        source = _a;\r\n                        return [4 /*yield*/, this.prepareAndForge({ operation: operation, source: params.source })];\r\n                    case 5:\r\n                        opBytes = _c.sent();\r\n                        return [4 /*yield*/, this.signAndInject(opBytes)];\r\n                    case 6:\r\n                        _b = _c.sent(), hash = _b.hash, context = _b.context, forgedBytes = _b.forgedBytes, opResponse = _b.opResponse;\r\n                        return [2 /*return*/, new TransactionOperation(hash, operation, source, forgedBytes, opResponse, context)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RpcContractProvider.prototype.at = function (address) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var script, entrypoints, blockHeader, chainId;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.rpc.getScript(address)];\r\n                    case 1:\r\n                        script = _a.sent();\r\n                        return [4 /*yield*/, this.rpc.getEntrypoints(address)];\r\n                    case 2:\r\n                        entrypoints = _a.sent();\r\n                        return [4 /*yield*/, this.rpc.getBlockHeader()];\r\n                    case 3:\r\n                        blockHeader = _a.sent();\r\n                        chainId = blockHeader.chain_id;\r\n                        return [2 /*return*/, new ContractAbstraction(address, script, this, this, entrypoints, chainId)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RpcContractProvider;\r\n}(OperationEmitter));\n\nvar BatchOperation = /** @class */ (function (_super) {\r\n    __extends(BatchOperation, _super);\r\n    function BatchOperation(hash, params, source, raw, results, context) {\r\n        var _this = _super.call(this, hash, raw, results, context) || this;\r\n        _this.params = params;\r\n        _this.source = source;\r\n        return _this;\r\n    }\r\n    BatchOperation.prototype.sumProp = function (arr, prop) {\r\n        return arr.reduce(function (prev, current) {\r\n            return prop in current ? Number(current[prop]) + prev : prev;\r\n        }, 0);\r\n    };\r\n    Object.defineProperty(BatchOperation.prototype, \"status\", {\r\n        get: function () {\r\n            return (this.results\r\n                .filter(function (result) { return BATCH_KINDS.indexOf(result.kind) !== -1; })\r\n                .map(function (result) {\r\n                if (hasMetadataWithResult(result)) {\r\n                    return result.metadata.operation_result.status;\r\n                }\r\n                else {\r\n                    return 'unknown';\r\n                }\r\n            })[0] || 'unknown');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BatchOperation.prototype, \"fee\", {\r\n        get: function () {\r\n            return this.sumProp(this.params, 'fee');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BatchOperation.prototype, \"gasLimit\", {\r\n        get: function () {\r\n            return this.sumProp(this.params, 'gas_limit');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BatchOperation.prototype, \"storageLimit\", {\r\n        get: function () {\r\n            return this.sumProp(this.params, 'storage_limit');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BatchOperation.prototype, \"consumedGas\", {\r\n        get: function () {\r\n            return String(this.sumProp(flattenOperationResult({ contents: this.results }), 'consumed_gas'));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BatchOperation.prototype, \"storageDiff\", {\r\n        get: function () {\r\n            return String(this.sumProp(flattenOperationResult({ contents: this.results }), 'paid_storage_size_diff'));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BatchOperation.prototype, \"errors\", {\r\n        get: function () {\r\n            return flattenErrors({ contents: this.results });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return BatchOperation;\r\n}(Operation));\n\nvar BATCH_KINDS = [\r\n    OpKind.ACTIVATION,\r\n    OpKind.ORIGINATION,\r\n    OpKind.TRANSACTION,\r\n    OpKind.DELEGATION,\r\n];\r\nvar OperationBatch = /** @class */ (function (_super) {\r\n    __extends(OperationBatch, _super);\r\n    function OperationBatch(context, estimator) {\r\n        var _this = _super.call(this, context) || this;\r\n        _this.estimator = estimator;\r\n        _this.operations = [];\r\n        return _this;\r\n    }\r\n    /**\r\n     *\r\n     * @description Add a transaction operation to the batch\r\n     *\r\n     * @param params Transfer operation parameter\r\n     */\r\n    OperationBatch.prototype.withTransfer = function (params) {\r\n        this.operations.push(__assign({ kind: OpKind.TRANSACTION }, params));\r\n        return this;\r\n    };\r\n    /**\r\n     *\r\n     * @description Add a transaction operation to the batch\r\n     *\r\n     * @param params Transfer operation parameter\r\n     */\r\n    OperationBatch.prototype.withContractCall = function (params) {\r\n        return this.withTransfer(params.toTransferParams());\r\n    };\r\n    /**\r\n     *\r\n     * @description Add a delegation operation to the batch\r\n     *\r\n     * @param params Delegation operation parameter\r\n     */\r\n    OperationBatch.prototype.withDelegation = function (params) {\r\n        this.operations.push(__assign({ kind: OpKind.DELEGATION }, params));\r\n        return this;\r\n    };\r\n    /**\r\n     *\r\n     * @description Add an activation operation to the batch\r\n     *\r\n     * @param params Activation operation parameter\r\n     */\r\n    OperationBatch.prototype.withActivation = function (_a) {\r\n        var pkh = _a.pkh, secret = _a.secret;\r\n        this.operations.push({ kind: OpKind.ACTIVATION, pkh: pkh, secret: secret });\r\n        return this;\r\n    };\r\n    /**\r\n     *\r\n     * @description Add an origination operation to the batch\r\n     *\r\n     * @param params Origination operation parameter\r\n     */\r\n    OperationBatch.prototype.withOrigination = function (params) {\r\n        this.operations.push(__assign({ kind: OpKind.ORIGINATION }, params));\r\n        return this;\r\n    };\r\n    OperationBatch.prototype.getRPCOp = function (param) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (param.kind) {\r\n                    case OpKind.TRANSACTION:\r\n                        return [2 /*return*/, createTransferOperation(__assign({}, param))];\r\n                    case OpKind.ORIGINATION:\r\n                        return [2 /*return*/, createOriginationOperation(__assign({}, param))];\r\n                    case OpKind.DELEGATION:\r\n                        return [2 /*return*/, createSetDelegateOperation(__assign({}, param))];\r\n                    case OpKind.ACTIVATION:\r\n                        return [2 /*return*/, __assign({}, param)];\r\n                    default:\r\n                        throw new Error(\"Unsupported operation kind: \" + param.kind);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description Add a group operation to the batch. Operation will be applied in the order they are in the params array\r\n     *\r\n     * @param params Operations parameter\r\n     */\r\n    OperationBatch.prototype.with = function (params) {\r\n        var e_1, _a;\r\n        try {\r\n            for (var params_1 = __values(params), params_1_1 = params_1.next(); !params_1_1.done; params_1_1 = params_1.next()) {\r\n                var param = params_1_1.value;\r\n                switch (param.kind) {\r\n                    case OpKind.TRANSACTION:\r\n                        this.withTransfer(param);\r\n                        break;\r\n                    case OpKind.ORIGINATION:\r\n                        this.withOrigination(param);\r\n                        break;\r\n                    case OpKind.DELEGATION:\r\n                        this.withDelegation(param);\r\n                        break;\r\n                    case OpKind.ACTIVATION:\r\n                        this.withActivation(param);\r\n                        break;\r\n                    default:\r\n                        throw new Error(\"Unsupported operation kind: \" + param.kind);\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (params_1_1 && !params_1_1.done && (_a = params_1.return)) _a.call(params_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     *\r\n     * @description Forge and Inject the operation batch\r\n     *\r\n     * @param params Optionally specify the source of the operation\r\n     */\r\n    OperationBatch.prototype.send = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var estimates, ops, i, _a, _b, op, estimated, _c, _d, e_2_1, source, _e, opBytes, _f, hash, context, forgedBytes, opResponse;\r\n            var e_2, _g;\r\n            var _this = this;\r\n            return __generator(this, function (_h) {\r\n                switch (_h.label) {\r\n                    case 0: return [4 /*yield*/, this.estimator.batch(this.operations)];\r\n                    case 1:\r\n                        estimates = _h.sent();\r\n                        ops = [];\r\n                        i = 0;\r\n                        _h.label = 2;\r\n                    case 2:\r\n                        _h.trys.push([2, 10, 11, 12]);\r\n                        _a = __values(this.operations), _b = _a.next();\r\n                        _h.label = 3;\r\n                    case 3:\r\n                        if (!!_b.done) return [3 /*break*/, 9];\r\n                        op = _b.value;\r\n                        if (!isOpWithFee(op)) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.estimate(op, function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                                return [2 /*return*/, estimates[i]];\r\n                            }); }); })];\r\n                    case 4:\r\n                        estimated = _h.sent();\r\n                        _d = (_c = ops).push;\r\n                        return [4 /*yield*/, this.getRPCOp(__assign(__assign({}, op), estimated))];\r\n                    case 5:\r\n                        _d.apply(_c, [_h.sent()]);\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        ops.push(__assign({}, op));\r\n                        _h.label = 7;\r\n                    case 7:\r\n                        i++;\r\n                        _h.label = 8;\r\n                    case 8:\r\n                        _b = _a.next();\r\n                        return [3 /*break*/, 3];\r\n                    case 9: return [3 /*break*/, 12];\r\n                    case 10:\r\n                        e_2_1 = _h.sent();\r\n                        e_2 = { error: e_2_1 };\r\n                        return [3 /*break*/, 12];\r\n                    case 11:\r\n                        try {\r\n                            if (_b && !_b.done && (_g = _a.return)) _g.call(_a);\r\n                        }\r\n                        finally { if (e_2) throw e_2.error; }\r\n                        return [7 /*endfinally*/];\r\n                    case 12:\r\n                        _e = (params && params.source);\r\n                        if (_e) return [3 /*break*/, 14];\r\n                        return [4 /*yield*/, this.signer.publicKeyHash()];\r\n                    case 13:\r\n                        _e = (_h.sent());\r\n                        _h.label = 14;\r\n                    case 14:\r\n                        source = _e;\r\n                        return [4 /*yield*/, this.prepareAndForge({\r\n                                operation: ops,\r\n                                source: source,\r\n                            })];\r\n                    case 15:\r\n                        opBytes = _h.sent();\r\n                        return [4 /*yield*/, this.signAndInject(opBytes)];\r\n                    case 16:\r\n                        _f = _h.sent(), hash = _f.hash, context = _f.context, forgedBytes = _f.forgedBytes, opResponse = _f.opResponse;\r\n                        return [2 /*return*/, new BatchOperation(hash, ops, source, forgedBytes, opResponse, context)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return OperationBatch;\r\n}(OperationEmitter));\r\nvar RPCBatchProvider = /** @class */ (function () {\r\n    function RPCBatchProvider(context, estimator) {\r\n        this.context = context;\r\n        this.estimator = estimator;\r\n    }\r\n    /***\r\n     *\r\n     * @description Batch a group of operation together. Operations will be applied in the order in which they are added to the batch\r\n     *\r\n     * @param params List of operation to batch together\r\n     */\r\n    RPCBatchProvider.prototype.batch = function (params) {\r\n        var batch = new OperationBatch(this.context, this.estimator);\r\n        if (Array.isArray(params)) {\r\n            batch.with(params);\r\n        }\r\n        return batch;\r\n    };\r\n    return RPCBatchProvider;\r\n}());\n\nvar defaultConfig = {\r\n    confirmationPollingIntervalSecond: 10,\r\n    defaultConfirmationCount: 1,\r\n    confirmationPollingTimeoutSecond: 180,\r\n    shouldObservableSubscriptionRetry: false\r\n};\r\n/**\r\n * @description Encapsulate common service used throughout different part of the library\r\n */\r\nvar Context = /** @class */ (function () {\r\n    function Context(_rpc, _signer, _proto, _config, forger, injector, wallet) {\r\n        if (_signer === void 0) { _signer = new NoopSigner(); }\r\n        this._rpc = _rpc;\r\n        this._signer = _signer;\r\n        this._proto = _proto;\r\n        this._config = _config;\r\n        this.tz = new RpcTzProvider(this);\r\n        this.estimate = new RPCEstimateProvider(this);\r\n        this.contract = new RpcContractProvider(this, this.estimate);\r\n        this.batch = new RPCBatchProvider(this, this.estimate);\r\n        this.wallet = new Wallet(this);\r\n        if (typeof this._rpc === 'string') {\r\n            this._rpcClient = new RpcClient(this._rpc);\r\n        }\r\n        else {\r\n            this._rpcClient = this._rpc;\r\n        }\r\n        this.config = _config;\r\n        this._forger = forger ? forger : new RpcForger(this);\r\n        this._injector = injector ? injector : new RpcInjector(this);\r\n        this.operationFactory = new OperationFactory(this);\r\n        this._walletProvider = wallet ? wallet : new LegacyWalletProvider(this);\r\n    }\r\n    Object.defineProperty(Context.prototype, \"config\", {\r\n        get: function () {\r\n            return this._config;\r\n        },\r\n        set: function (value) {\r\n            this._config = __assign(__assign({}, defaultConfig), value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Context.prototype, \"rpc\", {\r\n        get: function () {\r\n            return this._rpcClient;\r\n        },\r\n        set: function (value) {\r\n            this._rpcClient = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Context.prototype, \"injector\", {\r\n        get: function () {\r\n            return this._injector;\r\n        },\r\n        set: function (value) {\r\n            this._injector = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Context.prototype, \"forger\", {\r\n        get: function () {\r\n            return this._forger;\r\n        },\r\n        set: function (value) {\r\n            this._forger = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Context.prototype, \"signer\", {\r\n        get: function () {\r\n            return this._signer;\r\n        },\r\n        set: function (value) {\r\n            this._signer = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Context.prototype, \"walletProvider\", {\r\n        get: function () {\r\n            return this._walletProvider;\r\n        },\r\n        set: function (value) {\r\n            this._walletProvider = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Context.prototype, \"proto\", {\r\n        get: function () {\r\n            return this._proto;\r\n        },\r\n        set: function (value) {\r\n            this._proto = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Context.prototype.isAnyProtocolActive = function (protocol) {\r\n        if (protocol === void 0) { protocol = []; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var next_protocol;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._proto) return [3 /*break*/, 1];\r\n                        return [2 /*return*/, protocol.includes(this._proto)];\r\n                    case 1: return [4 /*yield*/, this.rpc.getBlockMetadata()];\r\n                    case 2:\r\n                        next_protocol = (_a.sent()).next_protocol;\r\n                        return [2 /*return*/, protocol.includes(next_protocol)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @description Create a copy of the current context. Useful when you have long running operation and you do not want a context change to affect the operation\r\n     */\r\n    Context.prototype.clone = function () {\r\n        return new Context(this.rpc, this.signer, this.proto, this.config, this.forger, this._injector);\r\n    };\r\n    return Context;\r\n}());\n\nvar opHashFilter = function (op, filter) { return op.hash === filter.opHash; };\r\nvar sourceFilter = function (x, filter) {\r\n    switch (x.kind) {\r\n        case 'endorsement':\r\n            return 'metadata' in x && x.metadata.delegate === filter.source;\r\n        case 'activate_account':\r\n            return 'metadata' in x && x.pkh === filter.source;\r\n        default:\r\n            return 'source' in x && x.source === filter.source;\r\n    }\r\n};\r\nvar kindFilter = function (x, filter) { return 'kind' in x && x.kind === filter.kind; };\r\nvar destinationFilter = function (x, filter) {\r\n    switch (x.kind) {\r\n        case 'delegation':\r\n            return x.delegate === filter.destination;\r\n        case 'origination':\r\n            if ('metadata' in x &&\r\n                'operation_result' in x.metadata &&\r\n                'originated_contracts' in x.metadata.operation_result &&\r\n                Array.isArray(x.metadata.operation_result.originated_contracts)) {\r\n                return x.metadata.operation_result.originated_contracts.some(function (contract) { return contract === filter.destination; });\r\n            }\r\n            break;\r\n        case 'transaction':\r\n            return x.destination === filter.destination;\r\n        default:\r\n            return false;\r\n    }\r\n};\r\nvar evaluateOpFilter = function (op, filter) {\r\n    if ('opHash' in filter) {\r\n        return opHashFilter(op, filter);\r\n    }\r\n    else if ('source' in filter) {\r\n        return sourceFilter(op, filter);\r\n    }\r\n    else if ('kind' in filter) {\r\n        return kindFilter(op, filter);\r\n    }\r\n    else if ('destination' in filter) {\r\n        return destinationFilter(op, filter);\r\n    }\r\n    return false;\r\n};\r\nvar evaluateExpression = function (op, exp) {\r\n    if (Array.isArray(exp.and)) {\r\n        return exp.and.every(function (x) { return evaluateFilter(op, x); });\r\n    }\r\n    else if (Array.isArray(exp.or)) {\r\n        return exp.or.some(function (x) { return evaluateFilter(op, x); });\r\n    }\r\n    else {\r\n        throw new Error('Filter expression must contains either and/or property');\r\n    }\r\n};\r\nvar evaluateFilter = function (op, filter) {\r\n    var filters = [];\r\n    if (!Array.isArray(filter)) {\r\n        filters.push(filter);\r\n    }\r\n    else {\r\n        filters.push.apply(filters, __spread(filter));\r\n    }\r\n    return filters.every(function (filterOrExp) {\r\n        if ('and' in filterOrExp || 'or' in filterOrExp) {\r\n            return evaluateExpression(op, filterOrExp);\r\n        }\r\n        else {\r\n            return evaluateOpFilter(op, filterOrExp);\r\n        }\r\n    });\r\n};\n\nvar ObservableSubscription = /** @class */ (function () {\r\n    function ObservableSubscription(obs, shouldRetry) {\r\n        var _this = this;\r\n        if (shouldRetry === void 0) { shouldRetry = false; }\r\n        this.shouldRetry = shouldRetry;\r\n        this.errorListeners = [];\r\n        this.messageListeners = [];\r\n        this.closeListeners = [];\r\n        this.completed$ = new Subject();\r\n        obs\r\n            .pipe(takeUntil(this.completed$), tap(function (data) {\r\n            _this.call(_this.messageListeners, data);\r\n        }, function (error) {\r\n            _this.call(_this.errorListeners, error);\r\n        }, function () {\r\n            _this.call(_this.closeListeners);\r\n        }), this.shouldRetry ? retry() : tap(), catchError(function () { return NEVER; }))\r\n            .subscribe();\r\n    }\r\n    ObservableSubscription.prototype.call = function (listeners, value) {\r\n        var e_1, _a;\r\n        try {\r\n            for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\r\n                var l = listeners_1_1.value;\r\n                try {\r\n                    l(value);\r\n                }\r\n                catch (ex) {\r\n                    console.error(ex);\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    ObservableSubscription.prototype.remove = function (listeners, value) {\r\n        var idx = listeners.indexOf(value);\r\n        if (idx !== -1) {\r\n            listeners.splice(idx, 1);\r\n        }\r\n    };\r\n    ObservableSubscription.prototype.on = function (type, cb) {\r\n        switch (type) {\r\n            case 'data':\r\n                this.messageListeners.push(cb);\r\n                break;\r\n            case 'error':\r\n                this.errorListeners.push(cb);\r\n                break;\r\n            case 'close':\r\n                this.closeListeners.push(cb);\r\n                break;\r\n            default:\r\n                throw new Error(\"Trying to register on an unsupported event: \" + type);\r\n        }\r\n    };\r\n    ObservableSubscription.prototype.off = function (type, cb) {\r\n        switch (type) {\r\n            case 'data':\r\n                this.remove(this.messageListeners, cb);\r\n                break;\r\n            case 'error':\r\n                this.remove(this.errorListeners, cb);\r\n                break;\r\n            case 'close':\r\n                this.remove(this.closeListeners, cb);\r\n                break;\r\n            default:\r\n                throw new Error(\"Trying to unregister on an unsupported event: \" + type);\r\n        }\r\n    };\r\n    ObservableSubscription.prototype.close = function () {\r\n        this.completed$.next();\r\n    };\r\n    return ObservableSubscription;\r\n}());\n\nvar getLastBlock = function (context) {\r\n    return from(context.rpc.getBlock()).pipe(first());\r\n};\r\nvar applyFilter = function (filter) {\r\n    return concatMap(function (block) {\r\n        return new Observable(function (sub) {\r\n            var e_1, _a, e_2, _b, e_3, _c;\r\n            try {\r\n                for (var _d = __values(block.operations), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                    var ops = _e.value;\r\n                    try {\r\n                        for (var ops_1 = (e_2 = void 0, __values(ops)), ops_1_1 = ops_1.next(); !ops_1_1.done; ops_1_1 = ops_1.next()) {\r\n                            var op = ops_1_1.value;\r\n                            try {\r\n                                for (var _f = (e_3 = void 0, __values(op.contents)), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                                    var content = _g.value;\r\n                                    if (evaluateFilter(__assign({ hash: op.hash }, content), filter)) {\r\n                                        sub.next(__assign({ hash: op.hash }, content));\r\n                                    }\r\n                                }\r\n                            }\r\n                            catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                            finally {\r\n                                try {\r\n                                    if (_g && !_g.done && (_c = _f.return)) _c.call(_f);\r\n                                }\r\n                                finally { if (e_3) throw e_3.error; }\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (ops_1_1 && !ops_1_1.done && (_b = ops_1.return)) _b.call(ops_1);\r\n                        }\r\n                        finally { if (e_2) throw e_2.error; }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            sub.complete();\r\n        });\r\n    });\r\n};\r\nvar PollingSubscribeProvider = /** @class */ (function () {\r\n    function PollingSubscribeProvider(context, POLL_INTERVAL) {\r\n        var _this = this;\r\n        if (POLL_INTERVAL === void 0) { POLL_INTERVAL = 20000; }\r\n        this.context = context;\r\n        this.POLL_INTERVAL = POLL_INTERVAL;\r\n        this.newBlock$ = timer(0, this.POLL_INTERVAL).pipe(map(function () { return _this.context; }), switchMap(getLastBlock), distinctUntilKeyChanged('hash'), publishReplay(), refCount());\r\n    }\r\n    PollingSubscribeProvider.prototype.subscribe = function (_filter) {\r\n        return new ObservableSubscription(this.newBlock$.pipe(pluck('hash')), this.context.config.shouldObservableSubscriptionRetry);\r\n    };\r\n    PollingSubscribeProvider.prototype.subscribeOperation = function (filter) {\r\n        return new ObservableSubscription(this.newBlock$.pipe(applyFilter(filter)), this.context.config.shouldObservableSubscriptionRetry);\r\n    };\r\n    return PollingSubscribeProvider;\r\n}());\n\nvar ForgingMismatchError = /** @class */ (function () {\r\n    function ForgingMismatchError(results) {\r\n        this.results = results;\r\n        this.name = 'ForgingMismatchError';\r\n        this.message = 'Forging mismatch error';\r\n    }\r\n    return ForgingMismatchError;\r\n}());\r\nvar CompositeForger = /** @class */ (function () {\r\n    function CompositeForger(forgers) {\r\n        this.forgers = forgers;\r\n        if (forgers.length === 0) {\r\n            throw new Error('At least one forger must be specified');\r\n        }\r\n    }\r\n    CompositeForger.prototype.forge = function (_a) {\r\n        var branch = _a.branch, contents = _a.contents;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var results, lastResult, currentResult;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all(this.forgers.map(function (forger) {\r\n                            return forger.forge({ branch: branch, contents: contents });\r\n                        }))];\r\n                    case 1:\r\n                        results = _b.sent();\r\n                        if (results.length === 0) {\r\n                            throw new Error('At least one forger must be specified');\r\n                        }\r\n                        lastResult = results.pop();\r\n                        while (results.length) {\r\n                            currentResult = results.pop();\r\n                            if (currentResult !== lastResult) {\r\n                                throw new ForgingMismatchError([lastResult, currentResult]);\r\n                            }\r\n                            lastResult = currentResult;\r\n                        }\r\n                        return [2 /*return*/, lastResult];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CompositeForger;\r\n}());\n\n/**\r\n * @description Facade class that surfaces all of the libraries capability and allow it's configuration\r\n *\r\n * @param _rpc The RPC server to use\r\n */\r\nvar TezosToolkit = /** @class */ (function () {\r\n    function TezosToolkit(_rpc, _context) {\r\n        if (_context === void 0) { _context = new Context(_rpc); }\r\n        this._rpc = _rpc;\r\n        this._context = _context;\r\n        this._options = {};\r\n        this.format = format;\r\n        this.batch = this._context.batch.batch.bind(this._context.batch);\r\n        if (typeof this._rpc === 'string') {\r\n            this._rpcClient = new RpcClient(this._rpc);\r\n        }\r\n        else {\r\n            this._rpcClient = this._rpc;\r\n        }\r\n        this._wallet = new Wallet(this._context);\r\n        this.setProvider({ rpc: this._rpcClient });\r\n    }\r\n    /**\r\n     * @description Sets configuration on the Tezos Taquito instance. Allows user to choose which signer, rpc client, rpc url, forger and so forth\r\n     *\r\n     * @param options rpc url or rpcClient to use to interact with the Tezos network\r\n     *\r\n     * @example Tezos.setProvider({rpc: 'https://api.tez.ie/rpc/mainnet', signer: new InMemorySigner.fromSecretKey(“edsk...”)})\r\n     * @example Tezos.setProvider({ config: { confirmationPollingTimeoutSecond: 300 }})\r\n     *\r\n     */\r\n    TezosToolkit.prototype.setProvider = function (_a) {\r\n        var rpc = _a.rpc, stream = _a.stream, signer = _a.signer, protocol = _a.protocol, config = _a.config, forger = _a.forger, wallet = _a.wallet;\r\n        this.setRpcProvider(rpc);\r\n        this.setStreamProvider(stream);\r\n        this.setSignerProvider(signer);\r\n        this.setForgerProvider(forger);\r\n        this.setWalletProvider(wallet);\r\n        this._context.proto = protocol;\r\n        this._context.config = config;\r\n    };\r\n    /**\r\n     * @description Sets signer provider on the Tezos Taquito instance.\r\n     *\r\n     * @param options signer to use to interact with the Tezos network\r\n     *\r\n     * @example Tezos.setSignerProvider(new InMemorySigner.fromSecretKey('edsk...'))\r\n     *\r\n     */\r\n    TezosToolkit.prototype.setSignerProvider = function (signer) {\r\n        if (!this._options.signer && typeof signer === 'undefined') {\r\n            this._context.signer = new NoopSigner();\r\n            this._options.signer = signer;\r\n        }\r\n        else if (typeof signer !== 'undefined') {\r\n            this._context.signer = signer;\r\n            this._options.signer = signer;\r\n        }\r\n    };\r\n    /**\r\n     * @description Sets rpc provider on the Tezos Taquito instance\r\n     *\r\n     * @param options rpc url or rpcClient to use to interact with the Tezos network\r\n     *\r\n     * @example Tezos.setRpcProvider('https://api.tez.ie/rpc/mainnet')\r\n     *\r\n     */\r\n    TezosToolkit.prototype.setRpcProvider = function (rpc) {\r\n        if (typeof rpc === 'string') {\r\n            this._rpcClient = new RpcClient(rpc);\r\n        }\r\n        else if (rpc instanceof RpcClient) {\r\n            this._rpcClient = rpc;\r\n        }\r\n        /*     else if (this._options.rpc === undefined) {\r\n              this._rpcClient = new RpcClient();\r\n            } */\r\n        this._options.rpc = this._rpcClient;\r\n        this._context.rpc = this._rpcClient;\r\n    };\r\n    /**\r\n     * @description Sets forger provider on the Tezos Taquito instance\r\n     *\r\n     * @param options forger to use to interact with the Tezos network\r\n     *\r\n     * @example Tezos.setForgerProvider(localForger)\r\n     *\r\n     */\r\n    TezosToolkit.prototype.setForgerProvider = function (forger) {\r\n        var f = typeof forger === 'undefined' ? this.getFactory(RpcForger)() : forger;\r\n        this._options.forger = f;\r\n        this._context.forger = f;\r\n    };\r\n    /**\r\n     * @description Sets stream provider on the Tezos Taquito instance\r\n     *\r\n     * @param options stream to use to interact with the Tezos network\r\n     *\r\n     * @example Tezos.setStreamProvider(...)\r\n     *\r\n     */\r\n    TezosToolkit.prototype.setStreamProvider = function (stream) {\r\n        if (typeof stream === 'string') {\r\n            this._stream = new PollingSubscribeProvider(new Context(new RpcClient(stream)));\r\n        }\r\n        else if (typeof stream !== 'undefined') {\r\n            this._stream = stream;\r\n        }\r\n        else if (this._options.stream === undefined) {\r\n            this._stream = this.getFactory(PollingSubscribeProvider)();\r\n        }\r\n        this._options.stream = stream;\r\n    };\r\n    /**\r\n     * @description Sets wallet provider on the Tezos Taquito instance\r\n     *\r\n     * @param options wallet to use to interact with the Tezos network\r\n     *\r\n     * @example Tezos.setWalletProvider(...)\r\n     *\r\n     */\r\n    TezosToolkit.prototype.setWalletProvider = function (wallet) {\r\n        if (!this._options.wallet && typeof wallet === 'undefined') {\r\n            var w = this.getFactory(LegacyWalletProvider)();\r\n            this._options.wallet = w;\r\n            this._context.walletProvider = w;\r\n        }\r\n        else if (typeof wallet !== 'undefined') {\r\n            this._options.wallet = wallet;\r\n            this._context.walletProvider = wallet;\r\n        }\r\n    };\r\n    Object.defineProperty(TezosToolkit.prototype, \"tz\", {\r\n        /**\r\n         * @description Provide access to tezos account management\r\n         */\r\n        get: function () {\r\n            return this._context.tz;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TezosToolkit.prototype, \"contract\", {\r\n        /**\r\n         * @description Provide access to smart contract utilities\r\n         */\r\n        get: function () {\r\n            return this._context.contract;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TezosToolkit.prototype, \"wallet\", {\r\n        get: function () {\r\n            return this._wallet;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TezosToolkit.prototype, \"operation\", {\r\n        get: function () {\r\n            return this._context.operationFactory;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TezosToolkit.prototype, \"estimate\", {\r\n        /**\r\n         * @description Provide access to operation estimation utilities\r\n         */\r\n        get: function () {\r\n            return this._context.estimate;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TezosToolkit.prototype, \"stream\", {\r\n        /**\r\n         * @description Provide access to streaming utilities backed by an streamer implementation\r\n         */\r\n        get: function () {\r\n            return this._stream;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TezosToolkit.prototype, \"rpc\", {\r\n        /**\r\n         * @description Provide access to the currently used rpc client\r\n         */\r\n        get: function () {\r\n            return this._context.rpc;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TezosToolkit.prototype, \"signer\", {\r\n        /**\r\n         * @description Provide access to the currently used signer\r\n         */\r\n        get: function () {\r\n            return this._context.signer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TezosToolkit.prototype.getFactory = function (ctor) {\r\n        var _this = this;\r\n        return function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new (ctor.bind.apply(ctor, __spread([void 0, _this._context], args)))();\r\n        };\r\n    };\r\n    return TezosToolkit;\r\n}());\n\nexport { BigMapAbstraction, ChainIds, CompositeForger, Context, ContractAbstraction, ContractMethod, ContractView, DEFAULT_FEE, DEFAULT_GAS_LIMIT, DEFAULT_STORAGE_LIMIT, DefaultLambdaAddresses, DelegationWalletOperation, InvalidDelegationSource, InvalidParameterError, LegacyWalletProvider, MANAGER_LAMBDA, MissedBlockDuringConfirmationError, OriginationWalletOperation, PollingSubscribeProvider, Protocols, RpcForger, TezosOperationError, TezosPreapplyFailureError, TezosToolkit, TransactionWalletOperation, UndefinedLambdaContractError, Wallet, WalletOperation, WalletOperationBatch, createOriginationOperation, createRegisterDelegateOperation, createSetDelegateOperation, createTransferOperation, defaultConfig, protocols };\n//# sourceMappingURL=taquito.es5.js.map\n"]},"metadata":{},"sourceType":"module"}