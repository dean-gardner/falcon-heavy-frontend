{"ast":null,"code":"import { mode } from \"@chakra-ui/theme-tools\";\nvar parts = [\"overlay\", \"dialogContainer\", \"dialog\", \"header\", \"closeButton\", \"body\", \"footer\"];\nvar baseStyleOverlay = {\n  bg: \"blackAlpha.600\",\n  zIndex: \"modal\"\n};\n\nfunction baseStyleDialogContainer(props) {\n  var {\n    isCentered,\n    scrollBehavior\n  } = props;\n  return {\n    display: \"flex\",\n    zIndex: \"modal\",\n    justifyContent: \"center\",\n    alignItems: isCentered ? \"center\" : \"flex-start\",\n    overflow: scrollBehavior === \"inside\" ? \"hidden\" : \"auto\"\n  };\n}\n\nfunction baseStyleDialog(props) {\n  var {\n    scrollBehavior\n  } = props;\n  return {\n    borderRadius: \"md\",\n    bg: mode(\"white\", \"gray.700\")(props),\n    color: \"inherit\",\n    my: \"3.75rem\",\n    zIndex: \"modal\",\n    maxH: scrollBehavior === \"inside\" ? \"calc(100vh - 7.5rem)\" : undefined,\n    boxShadow: mode(\"lg\", \"dark-lg\")(props)\n  };\n}\n\nvar baseStyleHeader = {\n  px: 6,\n  py: 4,\n  fontSize: \"xl\",\n  fontWeight: \"semibold\"\n};\nvar baseStyleCloseButton = {\n  position: \"absolute\",\n  top: 2,\n  right: 3\n};\n\nfunction baseStyleBody(props) {\n  var {\n    scrollBehavior\n  } = props;\n  return {\n    px: 6,\n    py: 2,\n    flex: 1,\n    overflow: scrollBehavior === \"inside\" ? \"auto\" : undefined\n  };\n}\n\nvar baseStyleFooter = {\n  px: 6,\n  py: 4\n};\n\nvar baseStyle = props => ({\n  overlay: baseStyleOverlay,\n  dialogContainer: baseStyleDialogContainer(props),\n  dialog: baseStyleDialog(props),\n  header: baseStyleHeader,\n  closeButton: baseStyleCloseButton,\n  body: baseStyleBody(props),\n  footer: baseStyleFooter\n});\n/**\n * Since the `maxWidth` prop references theme.sizes internally,\n * we can leverage that to size our modals.\n */\n\n\nfunction getSize(value) {\n  if (value === \"full\") {\n    return {\n      dialog: {\n        maxW: \"100vw\",\n        h: \"100vh\"\n      }\n    };\n  }\n\n  return {\n    dialog: {\n      maxW: value\n    }\n  };\n}\n\nvar sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\"),\n  xl: getSize(\"xl\"),\n  \"2xl\": getSize(\"2xl\"),\n  \"3xl\": getSize(\"3xl\"),\n  \"4xl\": getSize(\"4xl\"),\n  \"5xl\": getSize(\"5xl\"),\n  \"6xl\": getSize(\"6xl\"),\n  full: getSize(\"full\")\n};\nvar defaultProps = {\n  size: \"md\"\n};\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps\n};","map":{"version":3,"mappings":"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","names":["mode","parts","baseStyleOverlay","bg","zIndex","baseStyleDialogContainer","props","isCentered","scrollBehavior","display","justifyContent","alignItems","overflow","baseStyleDialog","borderRadius","color","my","maxH","undefined","boxShadow","baseStyleHeader","px","py","fontSize","fontWeight","baseStyleCloseButton","position","top","right","baseStyleBody","flex","baseStyleFooter","baseStyle","overlay","dialogContainer","dialog","header","closeButton","body","footer","getSize","value","maxW","h","sizes","xs","sm","md","lg","xl","full","defaultProps","size"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/theme/dist/esm/components/modal.js"],"sourcesContent":["import { mode } from \"@chakra-ui/theme-tools\";\nvar parts = [\"overlay\", \"dialogContainer\", \"dialog\", \"header\", \"closeButton\", \"body\", \"footer\"];\nvar baseStyleOverlay = {\n  bg: \"blackAlpha.600\",\n  zIndex: \"modal\"\n};\n\nfunction baseStyleDialogContainer(props) {\n  var {\n    isCentered,\n    scrollBehavior\n  } = props;\n  return {\n    display: \"flex\",\n    zIndex: \"modal\",\n    justifyContent: \"center\",\n    alignItems: isCentered ? \"center\" : \"flex-start\",\n    overflow: scrollBehavior === \"inside\" ? \"hidden\" : \"auto\"\n  };\n}\n\nfunction baseStyleDialog(props) {\n  var {\n    scrollBehavior\n  } = props;\n  return {\n    borderRadius: \"md\",\n    bg: mode(\"white\", \"gray.700\")(props),\n    color: \"inherit\",\n    my: \"3.75rem\",\n    zIndex: \"modal\",\n    maxH: scrollBehavior === \"inside\" ? \"calc(100vh - 7.5rem)\" : undefined,\n    boxShadow: mode(\"lg\", \"dark-lg\")(props)\n  };\n}\n\nvar baseStyleHeader = {\n  px: 6,\n  py: 4,\n  fontSize: \"xl\",\n  fontWeight: \"semibold\"\n};\nvar baseStyleCloseButton = {\n  position: \"absolute\",\n  top: 2,\n  right: 3\n};\n\nfunction baseStyleBody(props) {\n  var {\n    scrollBehavior\n  } = props;\n  return {\n    px: 6,\n    py: 2,\n    flex: 1,\n    overflow: scrollBehavior === \"inside\" ? \"auto\" : undefined\n  };\n}\n\nvar baseStyleFooter = {\n  px: 6,\n  py: 4\n};\n\nvar baseStyle = props => ({\n  overlay: baseStyleOverlay,\n  dialogContainer: baseStyleDialogContainer(props),\n  dialog: baseStyleDialog(props),\n  header: baseStyleHeader,\n  closeButton: baseStyleCloseButton,\n  body: baseStyleBody(props),\n  footer: baseStyleFooter\n});\n/**\n * Since the `maxWidth` prop references theme.sizes internally,\n * we can leverage that to size our modals.\n */\n\n\nfunction getSize(value) {\n  if (value === \"full\") {\n    return {\n      dialog: {\n        maxW: \"100vw\",\n        h: \"100vh\"\n      }\n    };\n  }\n\n  return {\n    dialog: {\n      maxW: value\n    }\n  };\n}\n\nvar sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\"),\n  xl: getSize(\"xl\"),\n  \"2xl\": getSize(\"2xl\"),\n  \"3xl\": getSize(\"3xl\"),\n  \"4xl\": getSize(\"4xl\"),\n  \"5xl\": getSize(\"5xl\"),\n  \"6xl\": getSize(\"6xl\"),\n  full: getSize(\"full\")\n};\nvar defaultProps = {\n  size: \"md\"\n};\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps\n};\n//# sourceMappingURL=modal.js.map"]},"metadata":{},"sourceType":"module"}