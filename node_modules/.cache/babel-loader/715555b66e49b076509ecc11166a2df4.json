{"ast":null,"code":"/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return function subscribeOnOperatorFunction(source) {\n    return source.lift(new SubscribeOnOperator(scheduler, delay));\n  };\n}\n\nvar SubscribeOnOperator = /*@__PURE__*/function () {\n  function SubscribeOnOperator(scheduler, delay) {\n    this.scheduler = scheduler;\n    this.delay = delay;\n  }\n\n  SubscribeOnOperator.prototype.call = function (subscriber, source) {\n    return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n  };\n\n  return SubscribeOnOperator;\n}();","map":{"version":3,"mappings":"AAAA;AACA,SAASA,qBAAT,QAAsC,qCAAtC;AACA,OAAO,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,KAAhC,EAAuC;AAC1C,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAClBA,SAAK,GAAG,CAAR;AACH;;AACD,SAAO,SAASC,2BAAT,CAAqCC,MAArC,EAA6C;AAChD,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,mBAAJ,CAAwBL,SAAxB,EAAmCC,KAAnC,CAAZ,CAAP;AACH,GAFD;AAGH;;AACD,IAAII,mBAAmB,GAAG,aAAe,YAAY;AACjD,WAASA,mBAAT,CAA6BL,SAA7B,EAAwCC,KAAxC,EAA+C;AAC3C,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;AACDI,qBAAmB,CAACC,SAApB,CAA8BC,IAA9B,GAAqC,UAAUC,UAAV,EAAsBL,MAAtB,EAA8B;AAC/D,WAAO,IAAIL,qBAAJ,CAA0BK,MAA1B,EAAkC,KAAKF,KAAvC,EAA8C,KAAKD,SAAnD,EAA8DS,SAA9D,CAAwED,UAAxE,CAAP;AACH,GAFD;;AAGA,SAAOH,mBAAP;AACH,CATwC,EAAzC","names":["SubscribeOnObservable","subscribeOn","scheduler","delay","subscribeOnOperatorFunction","source","lift","SubscribeOnOperator","prototype","call","subscriber","subscribe"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/subscribeOn.js"],"sourcesContent":["/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nvar SubscribeOnOperator = /*@__PURE__*/ (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n//# sourceMappingURL=subscribeOn.js.map\n"]},"metadata":{},"sourceType":"module"}