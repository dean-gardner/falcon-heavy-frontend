{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function takeLast(count) {\n  return function takeLastOperatorFunction(source) {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nvar TakeLastOperator = /*@__PURE__*/function () {\n  function TakeLastOperator(total) {\n    this.total = total;\n\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError();\n    }\n  }\n\n  TakeLastOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  };\n\n  return TakeLastOperator;\n}();\n\nvar TakeLastSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TakeLastSubscriber, _super);\n\n  function TakeLastSubscriber(destination, total) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.total = total;\n    _this.ring = new Array();\n    _this.count = 0;\n    return _this;\n  }\n\n  TakeLastSubscriber.prototype._next = function (value) {\n    var ring = this.ring;\n    var total = this.total;\n    var count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      var index = count % total;\n      ring[index] = value;\n    }\n  };\n\n  TakeLastSubscriber.prototype._complete = function () {\n    var destination = this.destination;\n    var count = this.count;\n\n    if (count > 0) {\n      var total = this.count >= this.total ? this.total : this.count;\n      var ring = this.ring;\n\n      for (var i = 0; i < total; i++) {\n        var idx = count++ % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  };\n\n  return TakeLastSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,uBAAT,QAAwC,iCAAxC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC5B,SAAO,SAASC,wBAAT,CAAkCC,MAAlC,EAA0C;AAC7C,QAAIF,KAAK,KAAK,CAAd,EAAiB;AACb,aAAOF,KAAK,EAAZ;AACH,KAFD,MAGK;AACD,aAAOI,MAAM,CAACC,IAAP,CAAY,IAAIC,gBAAJ,CAAqBJ,KAArB,CAAZ,CAAP;AACH;AACJ,GAPD;AAQH;;AACD,IAAII,gBAAgB,GAAG,aAAe,YAAY;AAC9C,WAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAKA,KAAL,GAAaA,KAAb;;AACA,QAAI,KAAKA,KAAL,GAAa,CAAjB,EAAoB;AAChB,YAAM,IAAIR,uBAAJ,EAAN;AACH;AACJ;;AACDO,kBAAgB,CAACE,SAAjB,CAA2BC,IAA3B,GAAkC,UAAUC,UAAV,EAAsBN,MAAtB,EAA8B;AAC5D,WAAOA,MAAM,CAACO,SAAP,CAAiB,IAAIC,kBAAJ,CAAuBF,UAAvB,EAAmC,KAAKH,KAAxC,CAAjB,CAAP;AACH,GAFD;;AAGA,SAAOD,gBAAP;AACH,CAXqC,EAAtC;;AAYA,IAAIM,kBAAkB,GAAG,aAAe,UAAUC,MAAV,EAAkB;AACtDhB,SAAO,CAACiB,SAAR,CAAkBF,kBAAlB,EAAsCC,MAAtC;;AACA,WAASD,kBAAT,CAA4BG,WAA5B,EAAyCR,KAAzC,EAAgD;AAC5C,QAAIS,KAAK,GAAGH,MAAM,CAACJ,IAAP,CAAY,IAAZ,EAAkBM,WAAlB,KAAkC,IAA9C;;AACAC,SAAK,CAACT,KAAN,GAAcA,KAAd;AACAS,SAAK,CAACC,IAAN,GAAa,IAAIC,KAAJ,EAAb;AACAF,SAAK,CAACd,KAAN,GAAc,CAAd;AACA,WAAOc,KAAP;AACH;;AACDJ,oBAAkB,CAACJ,SAAnB,CAA6BW,KAA7B,GAAqC,UAAUC,KAAV,EAAiB;AAClD,QAAIH,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIV,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIL,KAAK,GAAG,KAAKA,KAAL,EAAZ;;AACA,QAAIe,IAAI,CAACI,MAAL,GAAcd,KAAlB,EAAyB;AACrBU,UAAI,CAACK,IAAL,CAAUF,KAAV;AACH,KAFD,MAGK;AACD,UAAIG,KAAK,GAAGrB,KAAK,GAAGK,KAApB;AACAU,UAAI,CAACM,KAAD,CAAJ,GAAcH,KAAd;AACH;AACJ,GAXD;;AAYAR,oBAAkB,CAACJ,SAAnB,CAA6BgB,SAA7B,GAAyC,YAAY;AACjD,QAAIT,WAAW,GAAG,KAAKA,WAAvB;AACA,QAAIb,KAAK,GAAG,KAAKA,KAAjB;;AACA,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,UAAIK,KAAK,GAAG,KAAKL,KAAL,IAAc,KAAKK,KAAnB,GAA2B,KAAKA,KAAhC,GAAwC,KAAKL,KAAzD;AACA,UAAIe,IAAI,GAAG,KAAKA,IAAhB;;AACA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,KAApB,EAA2BkB,CAAC,EAA5B,EAAgC;AAC5B,YAAIC,GAAG,GAAIxB,KAAK,EAAN,GAAYK,KAAtB;AACAQ,mBAAW,CAACY,IAAZ,CAAiBV,IAAI,CAACS,GAAD,CAArB;AACH;AACJ;;AACDX,eAAW,CAACa,QAAZ;AACH,GAZD;;AAaA,SAAOhB,kBAAP;AACH,CAnCuC,CAmCtCd,UAnCsC,CAAxC","names":["tslib_1","Subscriber","ArgumentOutOfRangeError","empty","takeLast","count","takeLastOperatorFunction","source","lift","TakeLastOperator","total","prototype","call","subscriber","subscribe","TakeLastSubscriber","_super","__extends","destination","_this","ring","Array","_next","value","length","push","index","_complete","i","idx","next","complete"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/takeLast.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nvar TakeLastOperator = /*@__PURE__*/ (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\nvar TakeLastSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeLast.js.map\n"]},"metadata":{},"sourceType":"module"}