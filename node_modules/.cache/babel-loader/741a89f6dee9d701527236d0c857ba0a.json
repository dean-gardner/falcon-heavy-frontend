{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { objectKeys } from \"@chakra-ui/utils\";\nimport { AnimatePresence } from \"framer-motion\";\nimport * as React from \"react\";\nimport { Toast } from \"./toast\";\nimport { findToast, getToastPosition } from \"./toast.utils\";\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\n\nexport class ToastManager extends React.Component {\n  /**\n   * Static id counter to create unique ids\n   * for each toast\n   */\n\n  /**\n   * State to track all the toast across all positions\n   */\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    _defineProperty(this, \"state\", {\n      top: [],\n      \"top-left\": [],\n      \"top-right\": [],\n      \"bottom-left\": [],\n      bottom: [],\n      \"bottom-right\": []\n    });\n\n    _defineProperty(this, \"notify\", (message, options) => {\n      var toast = this.createToast(message, options);\n      var {\n        position,\n        id\n      } = toast;\n      this.setState(prevToasts => {\n        var isTop = position.includes(\"top\");\n        /**\n         * - If the toast is positioned at the top edges, the\n         * recent toast stacks on top of the other toasts.\n         *\n         * - If the toast is positioned at the bottom edges, the recent\n         * toast stacks below the other toasts.\n         */\n\n        var toasts = isTop ? [toast, ...prevToasts[position]] : [...prevToasts[position], toast];\n        return _extends({}, prevToasts, {\n          [position]: toasts\n        });\n      });\n      return id;\n    });\n\n    _defineProperty(this, \"updateToast\", (id, options) => {\n      this.setState(prevState => {\n        var nextState = _extends({}, prevState);\n\n        var {\n          position,\n          index\n        } = findToast(nextState, id);\n\n        if (position && index !== -1) {\n          nextState[position][index] = _extends({}, nextState[position][index], options);\n        }\n\n        return nextState;\n      });\n    });\n\n    _defineProperty(this, \"closeAll\", function (_temp) {\n      var {\n        positions\n      } = _temp === void 0 ? {} : _temp; // only one setState here for perf reasons\n      // instead of spamming this.closeToast\n\n      _this.setState(prev => {\n        var allPositions = [\"bottom\", \"bottom-right\", \"bottom-left\", \"top\", \"top-left\", \"top-right\"];\n        var positionsToClose = positions != null ? positions : allPositions;\n        return positionsToClose.reduce((acc, position) => {\n          acc[position] = prev[position].map(toast => _extends({}, toast, {\n            requestClose: true\n          }));\n          return acc;\n        }, {});\n      });\n    });\n\n    _defineProperty(this, \"createToast\", (message, options) => {\n      var _options$id, _options$position;\n\n      ToastManager.counter += 1;\n      var id = (_options$id = options.id) != null ? _options$id : ToastManager.counter;\n      var position = (_options$position = options.position) != null ? _options$position : \"top\";\n      return {\n        id,\n        message,\n        position,\n        duration: options.duration,\n        onCloseComplete: options.onCloseComplete,\n        onRequestRemove: () => this.removeToast(String(id), position),\n        status: options.status,\n        requestClose: false\n      };\n    });\n\n    _defineProperty(this, \"closeToast\", id => {\n      this.setState(prevState => {\n        var position = getToastPosition(prevState, id);\n        if (!position) return prevState;\n        return _extends({}, prevState, {\n          [position]: prevState[position].map(toast => {\n            // id may be string or number\n            // eslint-disable-next-line eqeqeq\n            if (toast.id == id) {\n              return _extends({}, toast, {\n                requestClose: true\n              });\n            }\n\n            return toast;\n          })\n        });\n      });\n    });\n\n    _defineProperty(this, \"removeToast\", (id, position) => {\n      this.setState(prevState => _extends({}, prevState, {\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter(toast => toast.id != id)\n      }));\n    });\n\n    _defineProperty(this, \"isVisible\", id => {\n      var {\n        position\n      } = findToast(this.state, id);\n      return Boolean(position);\n    });\n\n    _defineProperty(this, \"getStyle\", position => {\n      var isTopOrBottom = position === \"top\" || position === \"bottom\";\n      var margin = isTopOrBottom ? \"0 auto\" : undefined;\n      var top = position.includes(\"top\") ? 0 : undefined;\n      var bottom = position.includes(\"bottom\") ? 0 : undefined;\n      var right = !position.includes(\"left\") ? 0 : undefined;\n      var left = !position.includes(\"right\") ? 0 : undefined;\n      return {\n        position: \"fixed\",\n        zIndex: 5500,\n        pointerEvents: \"none\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin,\n        top,\n        bottom,\n        right,\n        left\n      };\n    });\n\n    var methods = {\n      notify: this.notify,\n      closeAll: this.closeAll,\n      close: this.closeToast,\n      update: this.updateToast,\n      isActive: this.isVisible\n    };\n    props.notify(methods);\n  }\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n\n\n  render() {\n    return objectKeys(this.state).map(position => {\n      var toasts = this.state[position];\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        key: position,\n        id: \"chakra-toast-manager-\" + position,\n        style: this.getStyle(position)\n      }, /*#__PURE__*/React.createElement(AnimatePresence, {\n        initial: false\n      }, toasts.map(toast => /*#__PURE__*/React.createElement(Toast, _extends({\n        key: toast.id\n      }, toast)))));\n    });\n  }\n\n}\n\n_defineProperty(ToastManager, \"counter\", 0);","map":{"version":3,"mappings":"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","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","objectKeys","AnimatePresence","React","Toast","findToast","getToastPosition","ToastManager","Component","constructor","props","_this","top","bottom","message","options","toast","createToast","position","id","setState","prevToasts","isTop","includes","toasts","prevState","nextState","index","_temp","positions","prev","allPositions","positionsToClose","reduce","acc","map","requestClose","_options$id","_options$position","counter","duration","onCloseComplete","onRequestRemove","removeToast","String","status","filter","state","Boolean","isTopOrBottom","margin","undefined","right","left","zIndex","pointerEvents","display","flexDirection","methods","notify","closeAll","close","closeToast","update","updateToast","isActive","isVisible","render","createElement","style","getStyle","initial"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/toast/dist/esm/toast-manager.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { objectKeys } from \"@chakra-ui/utils\";\nimport { AnimatePresence } from \"framer-motion\";\nimport * as React from \"react\";\nimport { Toast } from \"./toast\";\nimport { findToast, getToastPosition } from \"./toast.utils\";\n\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\nexport class ToastManager extends React.Component {\n  /**\n   * Static id counter to create unique ids\n   * for each toast\n   */\n\n  /**\n   * State to track all the toast across all positions\n   */\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    _defineProperty(this, \"state\", {\n      top: [],\n      \"top-left\": [],\n      \"top-right\": [],\n      \"bottom-left\": [],\n      bottom: [],\n      \"bottom-right\": []\n    });\n\n    _defineProperty(this, \"notify\", (message, options) => {\n      var toast = this.createToast(message, options);\n      var {\n        position,\n        id\n      } = toast;\n      this.setState(prevToasts => {\n        var isTop = position.includes(\"top\");\n        /**\n         * - If the toast is positioned at the top edges, the\n         * recent toast stacks on top of the other toasts.\n         *\n         * - If the toast is positioned at the bottom edges, the recent\n         * toast stacks below the other toasts.\n         */\n\n        var toasts = isTop ? [toast, ...prevToasts[position]] : [...prevToasts[position], toast];\n        return _extends({}, prevToasts, {\n          [position]: toasts\n        });\n      });\n      return id;\n    });\n\n    _defineProperty(this, \"updateToast\", (id, options) => {\n      this.setState(prevState => {\n        var nextState = _extends({}, prevState);\n\n        var {\n          position,\n          index\n        } = findToast(nextState, id);\n\n        if (position && index !== -1) {\n          nextState[position][index] = _extends({}, nextState[position][index], options);\n        }\n\n        return nextState;\n      });\n    });\n\n    _defineProperty(this, \"closeAll\", function (_temp) {\n      var {\n        positions\n      } = _temp === void 0 ? {} : _temp;\n\n      // only one setState here for perf reasons\n      // instead of spamming this.closeToast\n      _this.setState(prev => {\n        var allPositions = [\"bottom\", \"bottom-right\", \"bottom-left\", \"top\", \"top-left\", \"top-right\"];\n        var positionsToClose = positions != null ? positions : allPositions;\n        return positionsToClose.reduce((acc, position) => {\n          acc[position] = prev[position].map(toast => _extends({}, toast, {\n            requestClose: true\n          }));\n          return acc;\n        }, {});\n      });\n    });\n\n    _defineProperty(this, \"createToast\", (message, options) => {\n      var _options$id, _options$position;\n\n      ToastManager.counter += 1;\n      var id = (_options$id = options.id) != null ? _options$id : ToastManager.counter;\n      var position = (_options$position = options.position) != null ? _options$position : \"top\";\n      return {\n        id,\n        message,\n        position,\n        duration: options.duration,\n        onCloseComplete: options.onCloseComplete,\n        onRequestRemove: () => this.removeToast(String(id), position),\n        status: options.status,\n        requestClose: false\n      };\n    });\n\n    _defineProperty(this, \"closeToast\", id => {\n      this.setState(prevState => {\n        var position = getToastPosition(prevState, id);\n        if (!position) return prevState;\n        return _extends({}, prevState, {\n          [position]: prevState[position].map(toast => {\n            // id may be string or number\n            // eslint-disable-next-line eqeqeq\n            if (toast.id == id) {\n              return _extends({}, toast, {\n                requestClose: true\n              });\n            }\n\n            return toast;\n          })\n        });\n      });\n    });\n\n    _defineProperty(this, \"removeToast\", (id, position) => {\n      this.setState(prevState => _extends({}, prevState, {\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter(toast => toast.id != id)\n      }));\n    });\n\n    _defineProperty(this, \"isVisible\", id => {\n      var {\n        position\n      } = findToast(this.state, id);\n      return Boolean(position);\n    });\n\n    _defineProperty(this, \"getStyle\", position => {\n      var isTopOrBottom = position === \"top\" || position === \"bottom\";\n      var margin = isTopOrBottom ? \"0 auto\" : undefined;\n      var top = position.includes(\"top\") ? 0 : undefined;\n      var bottom = position.includes(\"bottom\") ? 0 : undefined;\n      var right = !position.includes(\"left\") ? 0 : undefined;\n      var left = !position.includes(\"right\") ? 0 : undefined;\n      return {\n        position: \"fixed\",\n        zIndex: 5500,\n        pointerEvents: \"none\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin,\n        top,\n        bottom,\n        right,\n        left\n      };\n    });\n\n    var methods = {\n      notify: this.notify,\n      closeAll: this.closeAll,\n      close: this.closeToast,\n      update: this.updateToast,\n      isActive: this.isVisible\n    };\n    props.notify(methods);\n  }\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n\n\n  render() {\n    return objectKeys(this.state).map(position => {\n      var toasts = this.state[position];\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        key: position,\n        id: \"chakra-toast-manager-\" + position,\n        style: this.getStyle(position)\n      }, /*#__PURE__*/React.createElement(AnimatePresence, {\n        initial: false\n      }, toasts.map(toast => /*#__PURE__*/React.createElement(Toast, _extends({\n        key: toast.id\n      }, toast)))));\n    });\n  }\n\n}\n\n_defineProperty(ToastManager, \"counter\", 0);\n//# sourceMappingURL=toast-manager.js.map"]},"metadata":{},"sourceType":"module"}