{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n\n  var resultSelector = undefined;\n  var scheduler = undefined;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop();\n  }\n\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0];\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\n\nvar CombineLatestOperator = /*@__PURE__*/function () {\n  function CombineLatestOperator(resultSelector) {\n    this.resultSelector = resultSelector;\n  }\n\n  CombineLatestOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  };\n\n  return CombineLatestOperator;\n}();\n\nexport { CombineLatestOperator };\n\nvar CombineLatestSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(CombineLatestSubscriber, _super);\n\n  function CombineLatestSubscriber(destination, resultSelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.resultSelector = resultSelector;\n    _this.active = 0;\n    _this.values = [];\n    _this.observables = [];\n    return _this;\n  }\n\n  CombineLatestSubscriber.prototype._next = function (observable) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  };\n\n  CombineLatestSubscriber.prototype._complete = function () {\n    var observables = this.observables;\n    var len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n\n      for (var i = 0; i < len; i++) {\n        var observable = observables[i];\n        this.add(subscribeToResult(this, observable, undefined, i));\n      }\n    }\n  };\n\n  CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  };\n\n  CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n    var values = this.values;\n    var oldVal = values[outerIndex];\n    var toRespond = !this.toRespond ? 0 : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  };\n\n  CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n    var result;\n\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return CombineLatestSubscriber;\n}(OuterSubscriber);\n\nexport { CombineLatestSubscriber };","map":{"version":3,"mappings":"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","names":["tslib_1","isScheduler","isArray","OuterSubscriber","subscribeToResult","fromArray","NONE","combineLatest","observables","_i","arguments","length","resultSelector","undefined","scheduler","pop","lift","CombineLatestOperator","prototype","call","subscriber","source","subscribe","CombineLatestSubscriber","_super","__extends","destination","_this","active","values","_next","observable","push","_complete","len","complete","toRespond","i","add","notifyComplete","unused","notifyNext","_outerValue","innerValue","outerIndex","oldVal","_tryResultSelector","next","slice","result","apply","err","error"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/combineLatest.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = undefined;\n    var scheduler = undefined;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexport { CombineLatestOperator };\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, undefined, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\nexport { CombineLatestSubscriber };\n//# sourceMappingURL=combineLatest.js.map\n"]},"metadata":{},"sourceType":"module"}