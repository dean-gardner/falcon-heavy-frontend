{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n  if (dueTime === void 0) {\n    dueTime = 0;\n  }\n\n  var period = -1;\n\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(function (subscriber) {\n    var due = isNumeric(dueTime) ? dueTime : +dueTime - scheduler.now();\n    return scheduler.schedule(dispatch, due, {\n      index: 0,\n      period: period,\n      subscriber: subscriber\n    });\n  });\n}\n\nfunction dispatch(state) {\n  var index = state.index,\n      period = state.period,\n      subscriber = state.subscriber;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,SAASC,KAAT,CAAeC,OAAf,EAAwBC,iBAAxB,EAA2CC,SAA3C,EAAsD;AACzD,MAAIF,OAAO,KAAK,KAAK,CAArB,EAAwB;AACpBA,WAAO,GAAG,CAAV;AACH;;AACD,MAAIG,MAAM,GAAG,CAAC,CAAd;;AACA,MAAIN,SAAS,CAACI,iBAAD,CAAb,EAAkC;AAC9BE,UAAM,GAAGC,MAAM,CAACH,iBAAD,CAAN,GAA4B,CAA5B,IAAiC,CAAjC,IAAsCG,MAAM,CAACH,iBAAD,CAArD;AACH,GAFD,MAGK,IAAIH,WAAW,CAACG,iBAAD,CAAf,EAAoC;AACrCC,aAAS,GAAGD,iBAAZ;AACH;;AACD,MAAI,CAACH,WAAW,CAACI,SAAD,CAAhB,EAA6B;AACzBA,aAAS,GAAGN,KAAZ;AACH;;AACD,SAAO,IAAID,UAAJ,CAAe,UAAUU,UAAV,EAAsB;AACxC,QAAIC,GAAG,GAAGT,SAAS,CAACG,OAAD,CAAT,GACJA,OADI,GAEH,CAACA,OAAD,GAAWE,SAAS,CAACK,GAAV,EAFlB;AAGA,WAAOL,SAAS,CAACM,QAAV,CAAmBC,QAAnB,EAA6BH,GAA7B,EAAkC;AACrCI,WAAK,EAAE,CAD8B;AAC3BP,YAAM,EAAEA,MADmB;AACXE,gBAAU,EAAEA;AADD,KAAlC,CAAP;AAGH,GAPM,CAAP;AAQH;;AACD,SAASI,QAAT,CAAkBE,KAAlB,EAAyB;AACrB,MAAID,KAAK,GAAGC,KAAK,CAACD,KAAlB;AAAA,MAAyBP,MAAM,GAAGQ,KAAK,CAACR,MAAxC;AAAA,MAAgDE,UAAU,GAAGM,KAAK,CAACN,UAAnE;AACAA,YAAU,CAACO,IAAX,CAAgBF,KAAhB;;AACA,MAAIL,UAAU,CAACQ,MAAf,EAAuB;AACnB;AACH,GAFD,MAGK,IAAIV,MAAM,KAAK,CAAC,CAAhB,EAAmB;AACpB,WAAOE,UAAU,CAACS,QAAX,EAAP;AACH;;AACDH,OAAK,CAACD,KAAN,GAAcA,KAAK,GAAG,CAAtB;AACA,OAAKF,QAAL,CAAcG,KAAd,EAAqBR,MAArB;AACH","names":["Observable","async","isNumeric","isScheduler","timer","dueTime","periodOrScheduler","scheduler","period","Number","subscriber","due","now","schedule","dispatch","index","state","next","closed","complete"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/timer.js"],"sourcesContent":["/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n    if (dueTime === void 0) {\n        dueTime = 0;\n    }\n    var period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        var due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period: period, subscriber: subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    var index = state.index, period = state.period, subscriber = state.subscriber;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map\n"]},"metadata":{},"sourceType":"module"}