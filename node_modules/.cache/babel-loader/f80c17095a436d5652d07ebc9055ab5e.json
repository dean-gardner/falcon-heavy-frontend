{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { ariaAttr, callAllHandlers, omit } from \"@chakra-ui/utils\";\nimport { useFormControlContext } from \"./form-control\";\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\n\nexport function useFormControl(props) {\n  var _props$id;\n\n  var field = useFormControlContext();\n  var describedBy = [];\n\n  if (field == null ? void 0 : field.isInvalid) {\n    /**\n     * Error message must be described first\n     * in all scenarios\n     */\n    if (describedBy.length > 0) {\n      describedBy.unshift(field.feedbackId);\n    } else {\n      describedBy.push(field.feedbackId);\n    }\n  }\n\n  if (field == null ? void 0 : field.hasHelpText) describedBy.push(field.helpTextId);\n  var ariaDescribedBy = describedBy.join(\" \");\n  var cleanProps = omit(props, [\"isInvalid\", \"isDisabled\", \"isReadOnly\", \"isRequired\"]);\n  return _extends({}, cleanProps, {\n    id: (_props$id = props.id) != null ? _props$id : field == null ? void 0 : field.id,\n    disabled: props.disabled || props.isDisabled || (field == null ? void 0 : field.isDisabled),\n    readOnly: props.readOnly || props.isReadOnly || (field == null ? void 0 : field.isReadOnly),\n    required: props.required || props.isRequired || (field == null ? void 0 : field.isRequired),\n    \"aria-invalid\": ariaAttr(props.isInvalid || (field == null ? void 0 : field.isInvalid)),\n    \"aria-required\": ariaAttr(props.isRequired || (field == null ? void 0 : field.isRequired)),\n    \"aria-readonly\": ariaAttr(props.isReadOnly || (field == null ? void 0 : field.isReadOnly)),\n    \"aria-describedby\": ariaDescribedBy || undefined,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, props.onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, props.onBlur)\n  });\n}","map":{"version":3,"mappings":"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","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ariaAttr","callAllHandlers","omit","useFormControlContext","useFormControl","props","_props$id","field","describedBy","isInvalid","unshift","feedbackId","push","hasHelpText","helpTextId","ariaDescribedBy","join","cleanProps","id","disabled","isDisabled","readOnly","isReadOnly","required","isRequired","undefined","onFocus","onBlur"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/form-control/dist/esm/use-form-control.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ariaAttr, callAllHandlers, omit } from \"@chakra-ui/utils\";\nimport { useFormControlContext } from \"./form-control\";\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl(props) {\n  var _props$id;\n\n  var field = useFormControlContext();\n  var describedBy = [];\n\n  if (field == null ? void 0 : field.isInvalid) {\n    /**\n     * Error message must be described first\n     * in all scenarios\n     */\n    if (describedBy.length > 0) {\n      describedBy.unshift(field.feedbackId);\n    } else {\n      describedBy.push(field.feedbackId);\n    }\n  }\n\n  if (field == null ? void 0 : field.hasHelpText) describedBy.push(field.helpTextId);\n  var ariaDescribedBy = describedBy.join(\" \");\n  var cleanProps = omit(props, [\"isInvalid\", \"isDisabled\", \"isReadOnly\", \"isRequired\"]);\n  return _extends({}, cleanProps, {\n    id: (_props$id = props.id) != null ? _props$id : field == null ? void 0 : field.id,\n    disabled: props.disabled || props.isDisabled || (field == null ? void 0 : field.isDisabled),\n    readOnly: props.readOnly || props.isReadOnly || (field == null ? void 0 : field.isReadOnly),\n    required: props.required || props.isRequired || (field == null ? void 0 : field.isRequired),\n    \"aria-invalid\": ariaAttr(props.isInvalid || (field == null ? void 0 : field.isInvalid)),\n    \"aria-required\": ariaAttr(props.isRequired || (field == null ? void 0 : field.isRequired)),\n    \"aria-readonly\": ariaAttr(props.isReadOnly || (field == null ? void 0 : field.isReadOnly)),\n    \"aria-describedby\": ariaDescribedBy || undefined,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, props.onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, props.onBlur)\n  });\n}\n//# sourceMappingURL=use-form-control.js.map"]},"metadata":{},"sourceType":"module"}