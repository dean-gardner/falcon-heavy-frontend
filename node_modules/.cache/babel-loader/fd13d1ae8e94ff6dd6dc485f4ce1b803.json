{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nvar VirtualTimeScheduler = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(VirtualTimeScheduler, _super);\n\n  function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n    if (SchedulerAction === void 0) {\n      SchedulerAction = VirtualAction;\n    }\n\n    if (maxFrames === void 0) {\n      maxFrames = Number.POSITIVE_INFINITY;\n    }\n\n    var _this = _super.call(this, SchedulerAction, function () {\n      return _this.frame;\n    }) || this;\n\n    _this.maxFrames = maxFrames;\n    _this.frame = 0;\n    _this.index = -1;\n    return _this;\n  }\n\n  VirtualTimeScheduler.prototype.flush = function () {\n    var _a = this,\n        actions = _a.actions,\n        maxFrames = _a.maxFrames;\n\n    var error, action;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  VirtualTimeScheduler.frameTimeFactor = 10;\n  return VirtualTimeScheduler;\n}(AsyncScheduler);\n\nexport { VirtualTimeScheduler };\n\nvar VirtualAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(VirtualAction, _super);\n\n  function VirtualAction(scheduler, work, index) {\n    if (index === void 0) {\n      index = scheduler.index += 1;\n    }\n\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    _this.index = index;\n    _this.active = true;\n    _this.index = scheduler.index = index;\n    return _this;\n  }\n\n  VirtualAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (!this.id) {\n      return _super.prototype.schedule.call(this, state, delay);\n    }\n\n    this.active = false;\n    var action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  };\n\n  VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    this.delay = scheduler.frame + delay;\n    var actions = scheduler.actions;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return true;\n  };\n\n  VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return undefined;\n  };\n\n  VirtualAction.prototype._execute = function (state, delay) {\n    if (this.active === true) {\n      return _super.prototype._execute.call(this, state, delay);\n    }\n  };\n\n  VirtualAction.sortActions = function (a, b) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n\n  return VirtualAction;\n}(AsyncAction);\n\nexport { VirtualAction };","map":{"version":3,"mappings":"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","names":["tslib_1","AsyncAction","AsyncScheduler","VirtualTimeScheduler","_super","__extends","SchedulerAction","maxFrames","VirtualAction","Number","POSITIVE_INFINITY","_this","call","frame","index","prototype","flush","_a","actions","error","action","delay","shift","execute","state","unsubscribe","frameTimeFactor","scheduler","work","active","schedule","id","add","requestAsyncId","push","sort","sortActions","recycleAsyncId","undefined","_execute","a","b"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nvar VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        if (SchedulerAction === void 0) {\n            SchedulerAction = VirtualAction;\n        }\n        if (maxFrames === void 0) {\n            maxFrames = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler));\nexport { VirtualTimeScheduler };\nvar VirtualAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) {\n            index = scheduler.index += 1;\n        }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction));\nexport { VirtualAction };\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n"]},"metadata":{},"sourceType":"module"}