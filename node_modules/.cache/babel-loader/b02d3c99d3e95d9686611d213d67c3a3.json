{"ast":null,"code":"const cbs = [_ => undefined];\nlet myWindow = {\n  postMessage: (message, _target) => {\n    console.log('GOT POST MESSAGE', message);\n    cbs.forEach(callbackElement => {\n      callbackElement({\n        data: message\n      });\n    });\n  },\n  addEventListener: (name, eventCallback) => {\n    console.log('addEventListener', name);\n    cbs.push(eventCallback);\n  },\n  removeEventListener: (name, eventCallback) => {\n    console.log('addEventListener', name);\n    cbs.splice(cbs.indexOf(element => element === eventCallback), 1);\n  }\n};\n\ntry {\n  if (typeof window !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    myWindow = window;\n  }\n} catch (windowError) {\n  console.log(`not defined: ${windowError}`);\n}\n\nexport { myWindow };","map":{"version":3,"mappings":"AAAA,MAAMA,GAAG,GAAG,CAAEC,CAAD,IAAOC,SAAR,CAAZ;AACA,IAAIC,QAAQ,GAAG;AACXC,aAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC/BC,WAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,OAAhC;AACAL,OAAG,CAACS,OAAJ,CAAaC,eAAD,IAAqB;AAC7BA,qBAAe,CAAC;AAAEC,YAAI,EAAEN;AAAR,OAAD,CAAf;AACH,KAFD;AAGH,GANU;AAOXO,kBAAgB,EAAE,CAACC,IAAD,EAAOC,aAAP,KAAyB;AACvCP,WAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,IAAhC;AACAb,OAAG,CAACe,IAAJ,CAASD,aAAT;AACH,GAVU;AAWXE,qBAAmB,EAAE,CAACH,IAAD,EAAOC,aAAP,KAAyB;AAC1CP,WAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,IAAhC;AACAb,OAAG,CAACiB,MAAJ,CAAWjB,GAAG,CAACkB,OAAJ,CAAaC,OAAD,IAAaA,OAAO,KAAKL,aAArC,CAAX,EAAgE,CAAhE;AACH;AAdU,CAAf;;AAgBA,IAAI;AACA,MAAI,OAAOM,MAAP,KAAkB,WAAtB,EAAmC;AAC/B;AACAjB,YAAQ,GAAGiB,MAAX;AACH;AACJ,CALD,CAMA,OAAOC,WAAP,EAAoB;AAChBd,SAAO,CAACC,GAAR,CAAa,gBAAea,WAAY,EAAxC;AACH;;AACD,SAASlB,QAAT","names":["cbs","_","undefined","myWindow","postMessage","message","_target","console","log","forEach","callbackElement","data","addEventListener","name","eventCallback","push","removeEventListener","splice","indexOf","element","window","windowError"],"sourceRoot":"","sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@airgap/beacon-sdk/dist/esm/MockWindow.js"],"sourcesContent":["const cbs = [(_) => undefined];\nlet myWindow = {\n    postMessage: (message, _target) => {\n        console.log('GOT POST MESSAGE', message);\n        cbs.forEach((callbackElement) => {\n            callbackElement({ data: message });\n        });\n    },\n    addEventListener: (name, eventCallback) => {\n        console.log('addEventListener', name);\n        cbs.push(eventCallback);\n    },\n    removeEventListener: (name, eventCallback) => {\n        console.log('addEventListener', name);\n        cbs.splice(cbs.indexOf((element) => element === eventCallback), 1);\n    }\n};\ntry {\n    if (typeof window !== 'undefined') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        myWindow = window;\n    }\n}\ncatch (windowError) {\n    console.log(`not defined: ${windowError}`);\n}\nexport { myWindow };\n//# sourceMappingURL=MockWindow.js.map"]},"metadata":{},"sourceType":"module"}