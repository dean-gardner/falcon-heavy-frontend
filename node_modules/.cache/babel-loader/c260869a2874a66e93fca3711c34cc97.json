{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar XMLHttpRequestEventTarget =\n/** @class */\nfunction () {\n  function XMLHttpRequestEventTarget() {\n    this.listeners = {};\n  }\n\n  XMLHttpRequestEventTarget.prototype.addEventListener = function (eventType, listener) {\n    eventType = eventType.toLowerCase();\n    this.listeners[eventType] = this.listeners[eventType] || [];\n    this.listeners[eventType].push(listener.handleEvent || listener);\n  };\n\n  XMLHttpRequestEventTarget.prototype.removeEventListener = function (eventType, listener) {\n    eventType = eventType.toLowerCase();\n\n    if (!this.listeners[eventType]) {\n      return;\n    }\n\n    var index = this.listeners[eventType].indexOf(listener.handleEvent || listener);\n\n    if (index < 0) {\n      return;\n    }\n\n    this.listeners[eventType].splice(index, 1);\n  };\n\n  XMLHttpRequestEventTarget.prototype.dispatchEvent = function (event) {\n    var eventType = event.type.toLowerCase();\n    event.target = this; // TODO: set event.currentTarget?\n\n    if (this.listeners[eventType]) {\n      for (var _i = 0, _a = this.listeners[eventType]; _i < _a.length; _i++) {\n        var listener_1 = _a[_i];\n        listener_1.call(this, event);\n      }\n    }\n\n    var listener = this[\"on\" + eventType];\n\n    if (listener) {\n      listener.call(this, event);\n    }\n\n    return true;\n  };\n\n  return XMLHttpRequestEventTarget;\n}();\n\nexports.XMLHttpRequestEventTarget = XMLHttpRequestEventTarget;","map":{"version":3,"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,yBAAyB;AAAG;AAAe,YAAY;AACvD,WAASA,yBAAT,GAAqC;AACjC,SAAKC,SAAL,GAAiB,EAAjB;AACH;;AACDD,2BAAyB,CAACE,SAA1B,CAAoCC,gBAApC,GAAuD,UAAUC,SAAV,EAAqBC,QAArB,EAA+B;AAClFD,aAAS,GAAGA,SAAS,CAACE,WAAV,EAAZ;AACA,SAAKL,SAAL,CAAeG,SAAf,IAA4B,KAAKH,SAAL,CAAeG,SAAf,KAA6B,EAAzD;AACA,SAAKH,SAAL,CAAeG,SAAf,EAA0BG,IAA1B,CAA+BF,QAAQ,CAACG,WAAT,IAAwBH,QAAvD;AACH,GAJD;;AAKAL,2BAAyB,CAACE,SAA1B,CAAoCO,mBAApC,GAA0D,UAAUL,SAAV,EAAqBC,QAArB,EAA+B;AACrFD,aAAS,GAAGA,SAAS,CAACE,WAAV,EAAZ;;AACA,QAAI,CAAC,KAAKL,SAAL,CAAeG,SAAf,CAAL,EAAgC;AAC5B;AACH;;AACD,QAAIM,KAAK,GAAG,KAAKT,SAAL,CAAeG,SAAf,EAA0BO,OAA1B,CAAkCN,QAAQ,CAACG,WAAT,IAAwBH,QAA1D,CAAZ;;AACA,QAAIK,KAAK,GAAG,CAAZ,EAAe;AACX;AACH;;AACD,SAAKT,SAAL,CAAeG,SAAf,EAA0BQ,MAA1B,CAAiCF,KAAjC,EAAwC,CAAxC;AACH,GAVD;;AAWAV,2BAAyB,CAACE,SAA1B,CAAoCW,aAApC,GAAoD,UAAUC,KAAV,EAAiB;AACjE,QAAIV,SAAS,GAAGU,KAAK,CAACC,IAAN,CAAWT,WAAX,EAAhB;AACAQ,SAAK,CAACE,MAAN,GAAe,IAAf,CAFiE,CAE5C;;AACrB,QAAI,KAAKf,SAAL,CAAeG,SAAf,CAAJ,EAA+B;AAC3B,WAAK,IAAIa,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAKjB,SAAL,CAAeG,SAAf,CAAtB,EAAiDa,EAAE,GAAGC,EAAE,CAACC,MAAzD,EAAiEF,EAAE,EAAnE,EAAuE;AACnE,YAAIG,UAAU,GAAGF,EAAE,CAACD,EAAD,CAAnB;AACAG,kBAAU,CAACC,IAAX,CAAgB,IAAhB,EAAsBP,KAAtB;AACH;AACJ;;AACD,QAAIT,QAAQ,GAAG,KAAK,OAAOD,SAAZ,CAAf;;AACA,QAAIC,QAAJ,EAAc;AACVA,cAAQ,CAACgB,IAAT,CAAc,IAAd,EAAoBP,KAApB;AACH;;AACD,WAAO,IAAP;AACH,GAdD;;AAeA,SAAOd,yBAAP;AACH,CApC8C,EAA/C;;AAqCAF,OAAO,CAACE,yBAAR,GAAoCA,yBAApC","names":["Object","defineProperty","exports","value","XMLHttpRequestEventTarget","listeners","prototype","addEventListener","eventType","listener","toLowerCase","push","handleEvent","removeEventListener","index","indexOf","splice","dispatchEvent","event","type","target","_i","_a","length","listener_1","call"],"sourceRoot":"","sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar XMLHttpRequestEventTarget = /** @class */ (function () {\n    function XMLHttpRequestEventTarget() {\n        this.listeners = {};\n    }\n    XMLHttpRequestEventTarget.prototype.addEventListener = function (eventType, listener) {\n        eventType = eventType.toLowerCase();\n        this.listeners[eventType] = this.listeners[eventType] || [];\n        this.listeners[eventType].push(listener.handleEvent || listener);\n    };\n    XMLHttpRequestEventTarget.prototype.removeEventListener = function (eventType, listener) {\n        eventType = eventType.toLowerCase();\n        if (!this.listeners[eventType]) {\n            return;\n        }\n        var index = this.listeners[eventType].indexOf(listener.handleEvent || listener);\n        if (index < 0) {\n            return;\n        }\n        this.listeners[eventType].splice(index, 1);\n    };\n    XMLHttpRequestEventTarget.prototype.dispatchEvent = function (event) {\n        var eventType = event.type.toLowerCase();\n        event.target = this; // TODO: set event.currentTarget?\n        if (this.listeners[eventType]) {\n            for (var _i = 0, _a = this.listeners[eventType]; _i < _a.length; _i++) {\n                var listener_1 = _a[_i];\n                listener_1.call(this, event);\n            }\n        }\n        var listener = this[\"on\" + eventType];\n        if (listener) {\n            listener.call(this, event);\n        }\n        return true;\n    };\n    return XMLHttpRequestEventTarget;\n}());\nexports.XMLHttpRequestEventTarget = XMLHttpRequestEventTarget;\n//# sourceMappingURL=xml-http-request-event-target.js.map"]},"metadata":{},"sourceType":"script"}