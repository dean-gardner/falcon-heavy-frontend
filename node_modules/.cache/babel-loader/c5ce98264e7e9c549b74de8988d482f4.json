{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n  return function (source) {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nvar TakeOperator = /*@__PURE__*/function () {\n  function TakeOperator(total) {\n    this.total = total;\n\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError();\n    }\n  }\n\n  TakeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  };\n\n  return TakeOperator;\n}();\n\nvar TakeSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TakeSubscriber, _super);\n\n  function TakeSubscriber(destination, total) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.total = total;\n    _this.count = 0;\n    return _this;\n  }\n\n  TakeSubscriber.prototype._next = function (value) {\n    var total = this.total;\n    var count = ++this.count;\n\n    if (count <= total) {\n      this.destination.next(value);\n\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  };\n\n  return TakeSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,uBAAT,QAAwC,iCAAxC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACxB,SAAO,UAAUC,MAAV,EAAkB;AACrB,QAAID,KAAK,KAAK,CAAd,EAAiB;AACb,aAAOF,KAAK,EAAZ;AACH,KAFD,MAGK;AACD,aAAOG,MAAM,CAACC,IAAP,CAAY,IAAIC,YAAJ,CAAiBH,KAAjB,CAAZ,CAAP;AACH;AACJ,GAPD;AAQH;;AACD,IAAIG,YAAY,GAAG,aAAe,YAAY;AAC1C,WAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,SAAKA,KAAL,GAAaA,KAAb;;AACA,QAAI,KAAKA,KAAL,GAAa,CAAjB,EAAoB;AAChB,YAAM,IAAIP,uBAAJ,EAAN;AACH;AACJ;;AACDM,cAAY,CAACE,SAAb,CAAuBC,IAAvB,GAA8B,UAAUC,UAAV,EAAsBN,MAAtB,EAA8B;AACxD,WAAOA,MAAM,CAACO,SAAP,CAAiB,IAAIC,cAAJ,CAAmBF,UAAnB,EAA+B,KAAKH,KAApC,CAAjB,CAAP;AACH,GAFD;;AAGA,SAAOD,YAAP;AACH,CAXiC,EAAlC;;AAYA,IAAIM,cAAc,GAAG,aAAe,UAAUC,MAAV,EAAkB;AAClDf,SAAO,CAACgB,SAAR,CAAkBF,cAAlB,EAAkCC,MAAlC;;AACA,WAASD,cAAT,CAAwBG,WAAxB,EAAqCR,KAArC,EAA4C;AACxC,QAAIS,KAAK,GAAGH,MAAM,CAACJ,IAAP,CAAY,IAAZ,EAAkBM,WAAlB,KAAkC,IAA9C;;AACAC,SAAK,CAACT,KAAN,GAAcA,KAAd;AACAS,SAAK,CAACb,KAAN,GAAc,CAAd;AACA,WAAOa,KAAP;AACH;;AACDJ,gBAAc,CAACJ,SAAf,CAAyBS,KAAzB,GAAiC,UAAUC,KAAV,EAAiB;AAC9C,QAAIX,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIJ,KAAK,GAAG,EAAE,KAAKA,KAAnB;;AACA,QAAIA,KAAK,IAAII,KAAb,EAAoB;AAChB,WAAKQ,WAAL,CAAiBI,IAAjB,CAAsBD,KAAtB;;AACA,UAAIf,KAAK,KAAKI,KAAd,EAAqB;AACjB,aAAKQ,WAAL,CAAiBK,QAAjB;AACA,aAAKC,WAAL;AACH;AACJ;AACJ,GAVD;;AAWA,SAAOT,cAAP;AACH,CApBmC,CAoBlCb,UApBkC,CAApC","names":["tslib_1","Subscriber","ArgumentOutOfRangeError","empty","take","count","source","lift","TakeOperator","total","prototype","call","subscriber","subscribe","TakeSubscriber","_super","__extends","destination","_this","_next","value","next","complete","unsubscribe"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/operators/take.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n"]},"metadata":{},"sourceType":"module"}