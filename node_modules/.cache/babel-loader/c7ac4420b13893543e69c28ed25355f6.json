{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { NETWORK_ADDRESS, BOND_CONTRACT_ADDRESS } from '../../config/index';\nconst options = {\n  name: \"Plenty Bonds Marketplace: Falcon Heavy\" // iconUrl: \"https://tezostaquito.io/img/favicon.png\",\n  // eventHandlers: {\n  //   PERMISSION_REQUEST_SUCCESS: {\n  //     handler: async (data: any) => {\n  //       console.log(\"permission data\", data);\n  //     },\n  //   },\n  // },\n\n};\nexport default function useBonds() {\n  _s();\n\n  const buyBond = useCallback(async () => {\n    // alert('Waiting for back-end');\n    const bondPrice = 1;\n    const LpToken = \"QUYPY\";\n    const LpTokenAmount = 10;\n    const Slippage = 0.5;\n    debugger;\n    const Tezos = new TezosToolkit(NETWORK_ADDRESS);\n    const wallet = new BeaconWallet(options);\n    const contract = await Tezos.wallet.at(BOND_CONTRACT_ADDRESS);\n    const activeAccount = await wallet.client.getActiveAccount();\n\n    if (activeAccount) {\n      // If defined, the user is connected to a wallet.\n      // You can now do an operation request, sign request, or send another permission request to switch wallet\n      console.log(\"Already connected:\", activeAccount.address);\n      myAddress = activeAccount.address;\n    } else {\n      await wallet.requestPermissions();\n      myAddress = await wallet.getPKH();\n      console.log(\"New connection:\", myAddress);\n    }\n\n    Tezos.contract.at(BOND_CONTRACT_ADDRESS).then(contract => {\n      return contract.methods.order(bondPrice, LpToken, LpTokenAmount, Slippage).send();\n    }); // const batch = await Tezos.wallet.batch()\n    //   .withContractCall(contract.methods.interact('defaul'))\n    //   .withContractCall(contract.methods.wait([['unit']]));\n    // const batchOp = await batch.send();\n    // console.log('Operation hash:', batchOp.hash);\n    // await batchOp.confirmation();\n  }, []);\n  return {\n    buyBond\n  };\n}\n\n_s(useBonds, \"98EULqhvGbXdXwBWcxxQNfx+sLQ=\");","map":{"version":3,"sources":["D:/work/projects/plenty/falcon-heavy-frontend/src/components/Bonds/hooks.ts"],"names":["useCallback","BeaconWallet","TezosToolkit","NETWORK_ADDRESS","BOND_CONTRACT_ADDRESS","options","name","useBonds","buyBond","bondPrice","LpToken","LpTokenAmount","Slippage","Tezos","wallet","contract","at","activeAccount","client","getActiveAccount","console","log","address","myAddress","requestPermissions","getPKH","then","methods","order","send"],"mappings":";;AAAA,SAASA,WAAT,QAAsC,OAAtC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,SAAQC,eAAR,EAAyBC,qBAAzB,QAAqD,oBAArD;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,wCADQ,CAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATc,CAAhB;AAYA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAMC,OAAO,GAAGR,WAAW,CAAC,YAAY;AACpC;AAEA,UAAMS,SAAS,GAAG,CAAlB;AACA,UAAMC,OAAO,GAAG,OAAhB;AACA,UAAMC,aAAa,GAAG,EAAtB;AACA,UAAMC,QAAQ,GAAG,GAAjB;AAEA;AACA,UAAMC,KAAK,GAAG,IAAIX,YAAJ,CAAiBC,eAAjB,CAAd;AACA,UAAMW,MAAM,GAAG,IAAIb,YAAJ,CAAiBI,OAAjB,CAAf;AAIA,UAAMU,QAAQ,GAAG,MAAMF,KAAK,CAACC,MAAN,CAAaE,EAAb,CAAgBZ,qBAAhB,CAAvB;AAEA,UAAMa,aAAa,GAAG,MAAMH,MAAM,CAACI,MAAP,CAAcC,gBAAd,EAA5B;;AACA,QAAIF,aAAJ,EAAmB;AACjB;AACA;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,aAAa,CAACK,OAAhD;AACAC,MAAAA,SAAS,GAAGN,aAAa,CAACK,OAA1B;AACD,KALD,MAKO;AACL,YAAMR,MAAM,CAACU,kBAAP,EAAN;AACAD,MAAAA,SAAS,GAAG,MAAMT,MAAM,CAACW,MAAP,EAAlB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,SAA/B;AACD;;AAIDV,IAAAA,KAAK,CAACE,QAAN,CAAeC,EAAf,CAAkBZ,qBAAlB,EAAyCsB,IAAzC,CAA8CX,QAAQ,IAAI;AACxD,aAAOA,QAAQ,CAACY,OAAT,CAAiBC,KAAjB,CAAuBnB,SAAvB,EAAkCC,OAAlC,EAA2CC,aAA3C,EAA0DC,QAA1D,EAAoEiB,IAApE,EAAP;AACD,KAFD,EA9BoC,CAkCpC;AACA;AACA;AAEA;AACA;AACA;AACH,GAzC0B,EAyCxB,EAzCwB,CAA3B;AA6CA,SAAO;AAAErB,IAAAA;AAAF,GAAP;AACD;;GAhDuBD,Q","sourcesContent":["import { useCallback, useState } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\n\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { NetworkType, PermissionScope } from \"@airgap/beacon-sdk\";\nimport {NETWORK_ADDRESS, BOND_CONTRACT_ADDRESS} from '../../config/index';\n\nconst options = {\n  name: \"Plenty Bonds Marketplace: Falcon Heavy\",\n  // iconUrl: \"https://tezostaquito.io/img/favicon.png\",\n  // eventHandlers: {\n  //   PERMISSION_REQUEST_SUCCESS: {\n  //     handler: async (data: any) => {\n  //       console.log(\"permission data\", data);\n  //     },\n  //   },\n  // },\n};\n\nexport default function useBonds() {\n\n  const buyBond = useCallback(async () => {\n      // alert('Waiting for back-end');\n      \n      const bondPrice = 1;\n      const LpToken = \"QUYPY\";\n      const LpTokenAmount = 10;\n      const Slippage = 0.5;\n\n      debugger;\n      const Tezos = new TezosToolkit(NETWORK_ADDRESS);\n      const wallet = new BeaconWallet(options);\n\n\n\n      const contract = await Tezos.wallet.at(BOND_CONTRACT_ADDRESS);\n      \n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount) {\n        // If defined, the user is connected to a wallet.\n        // You can now do an operation request, sign request, or send another permission request to switch wallet\n        console.log(\"Already connected:\", activeAccount.address);\n        myAddress = activeAccount.address;\n      } else {\n        await wallet.requestPermissions();\n        myAddress = await wallet.getPKH();\n        console.log(\"New connection:\", myAddress);\n      }\n\n\n\n      Tezos.contract.at(BOND_CONTRACT_ADDRESS).then(contract => {\n        return contract.methods.order(bondPrice, LpToken, LpTokenAmount, Slippage).send();\n      } );\n\n      // const batch = await Tezos.wallet.batch()\n      //   .withContractCall(contract.methods.interact('defaul'))\n      //   .withContractCall(contract.methods.wait([['unit']]));\n\n      // const batchOp = await batch.send();\n      // console.log('Operation hash:', batchOp.hash);\n      // await batchOp.confirmation();\n  }, []);\n\n\n\n  return { buyBond };\n}\n"]},"metadata":{},"sourceType":"module"}