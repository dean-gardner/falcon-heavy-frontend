{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\work\\\\projects\\\\plenty\\\\falcon-heavy-frontend\\\\src\\\\components\\\\Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, VStack, Text, Code, Divider } from \"@chakra-ui/react\";\nimport useBeacon from \"../hooks/useBeacon\";\nimport { ContractAddressInput } from \"./ContractAddressInput\";\nimport { ContractStorageInfo } from \"./ContractStorageInfo\";\nimport { validateContractAddress } from \"../utils\";\nimport { ContractBalanceInfo } from \"./ContractBalanceInfo\";\nimport { ContractTransferForm } from \"./ContractTransferForm\";\n\nconst AccountInfo = _ref => {\n  let {\n    pkh\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Text, {\n    children: [\"Your account: \", /*#__PURE__*/_jsxDEV(Code, {\n      children: pkh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_c = AccountInfo;\nexport function Dashboard() {\n  _s();\n\n  const {\n    connect,\n    pkh,\n    disconnect\n  } = useBeacon();\n  const [contractAddress, setContractAddress] = useState(\"KT19psPK1PZNMkaq8TuU1D77u7ipyFVQ3BmE\");\n  const [contractValid, setContractValid] = useState(false);\n  useEffect(() => {\n    setContractValid(validateContractAddress(contractAddress));\n  }, [contractAddress]);\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"6\",\n    alignItems: \"flex-start\",\n    className: \"text-center\",\n    children: !pkh ? /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-primary submit-btn\",\n      onClick: connect,\n      children: \"Connect wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-primary submit-btn\",\n        variant: \"outline\",\n        onClick: disconnect,\n        children: \"Disconnect wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n        pkh: pkh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContractAddressInput, {\n        value: contractAddress,\n        onChange: e => setContractAddress(e.target.value),\n        isInvalid: !contractValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), contractValid && contractAddress && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ContractStorageInfo, {\n          contractAddress: contractAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ContractBalanceInfo, {\n          contractAddress: contractAddress,\n          pkh: pkh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ContractTransferForm, {\n          contractAddress: contractAddress,\n          pkh: pkh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"ot+wF7B7q3U1OdmqNaWtjI/sgOY=\", false, function () {\n  return [useBeacon];\n});\n\n_c2 = Dashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccountInfo\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"sources":["D:/work/projects/plenty/falcon-heavy-frontend/src/components/Dashboard.tsx"],"names":["React","useEffect","useState","Button","VStack","Text","Code","Divider","useBeacon","ContractAddressInput","ContractStorageInfo","validateContractAddress","ContractBalanceInfo","ContractTransferForm","AccountInfo","pkh","Dashboard","connect","disconnect","contractAddress","setContractAddress","contractValid","setContractValid","e","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,OAArC,QAAoD,kBAApD;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,uBAAT,QAAwC,UAAxC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,oBAAT,QAAqC,wBAArC;;AAEA,MAAMC,WAEJ,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACH,QAAC,IAAD;AAAA,8CACgB,QAAC,IAAD;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YADhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADG;AAAA,CAFL;;KAAMD,W;AAQN,OAAO,SAASE,SAAT,GAAqB;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWF,IAAAA,GAAX;AAAgBG,IAAAA;AAAhB,MAA+BV,SAAS,EAA9C;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CACpD,sCADoD,CAAtD;AAGA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAU,KAAV,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,gBAAgB,CAACX,uBAAuB,CAACQ,eAAD,CAAxB,CAAhB;AACD,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;AAKA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,GAAhB;AAAoB,IAAA,UAAU,EAAC,YAA/B;AAA4C,IAAA,SAAS,EAAC,aAAtD;AAAA,cACG,CAACJ,GAAD,gBACC,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,4BAAlB;AAA+C,MAAA,OAAO,EAAEE,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAKC;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,4BAAlB;AAA+C,QAAA,OAAO,EAAC,SAAvD;AAAiE,QAAA,OAAO,EAAEC,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,WAAD;AAAa,QAAA,GAAG,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,oBAAD;AACE,QAAA,KAAK,EAAEI,eADT;AAEE,QAAA,QAAQ,EAAGI,CAAD,IAAOH,kBAAkB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAFrC;AAGE,QAAA,SAAS,EAAE,CAACJ;AAHd;AAAA;AAAA;AAAA;AAAA,cAPF,EAYGA,aAAa,IAAIF,eAAjB,iBACC;AAAA,gCACE,QAAC,mBAAD;AAAqB,UAAA,eAAe,EAAEA;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,mBAAD;AAAqB,UAAA,eAAe,EAAEA,eAAtC;AAAuD,UAAA,GAAG,EAAEJ;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,oBAAD;AAAsB,UAAA,eAAe,EAAEI,eAAvC;AAAwD,UAAA,GAAG,EAAEJ;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,sBAbJ;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA1CeC,S;UACuBR,S;;;MADvBQ,S","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, VStack, Text, Code, Divider } from \"@chakra-ui/react\";\n\nimport useBeacon from \"../hooks/useBeacon\";\nimport { ContractAddressInput } from \"./ContractAddressInput\";\nimport { ContractStorageInfo } from \"./ContractStorageInfo\";\nimport { validateContractAddress } from \"../utils\";\nimport { ContractBalanceInfo } from \"./ContractBalanceInfo\";\nimport { ContractTransferForm } from \"./ContractTransferForm\";\n\nconst AccountInfo: React.FC<{\n  pkh: string;\n}> = ({ pkh }) => (\n  <Text>\n    Your account: <Code>{pkh}</Code>\n  </Text>\n);\n\nexport function Dashboard() {\n  const { connect, pkh, disconnect } = useBeacon();\n  const [contractAddress, setContractAddress] = useState<string>(\n    \"KT19psPK1PZNMkaq8TuU1D77u7ipyFVQ3BmE\"\n  );\n  const [contractValid, setContractValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    setContractValid(validateContractAddress(contractAddress));\n  }, [contractAddress]);\n\n  \n  return (\n    <VStack spacing=\"6\" alignItems=\"flex-start\" className=\"text-center\">\n      {!pkh ? (\n        <Button className=\"btn btn-primary submit-btn\" onClick={connect}>\n          Connect wallet\n        </Button>\n      ) : (\n        <>\n          <Button className=\"btn btn-primary submit-btn\" variant=\"outline\" onClick={disconnect}>\n            Disconnect wallet\n          </Button>\n\n          <AccountInfo pkh={pkh} />\n          <Divider />\n          <ContractAddressInput\n            value={contractAddress}\n            onChange={(e) => setContractAddress(e.target.value)}\n            isInvalid={!contractValid}\n          />\n          {contractValid && contractAddress && (\n            <>\n              <ContractStorageInfo contractAddress={contractAddress} />\n              <ContractBalanceInfo contractAddress={contractAddress} pkh={pkh} />\n              <ContractTransferForm contractAddress={contractAddress} pkh={pkh} />\n            </>\n          )}\n        </>\n      )}\n    </VStack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}