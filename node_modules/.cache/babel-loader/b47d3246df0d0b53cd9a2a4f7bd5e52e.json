{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { callAll, cx, __DEV__, dataAttr } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useCheckboxGroupContext } from \"./checkbox-group\";\nimport { CheckboxIcon } from \"./checkbox-icon\";\nimport { useCheckbox } from \"./use-checkbox\";\nvar StyledControl = chakra(\"div\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar StyledContainer = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\",\n    _disabled: {\n      cursor: \"not-allowed\"\n    }\n  }\n});\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/components/checkbox\n */\n\nexport var Checkbox = /*#__PURE__*/forwardRef(function Checkbox(props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(mergedProps);\n\n  var {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon: Icon = /*#__PURE__*/React.createElement(CheckboxIcon, null),\n    isChecked: isCheckedProp,\n    onChange: onChangeProp\n  } = ownProps,\n      rest = _objectWithoutPropertiesLoose(ownProps, [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"onChange\"]);\n\n  var isChecked = isCheckedProp;\n\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    htmlProps\n  } = useCheckbox(_extends({}, rest, {\n    isChecked,\n    onChange\n  }));\n\n  var _className = cx(\"chakra-checkbox\", className);\n\n  var inputProps = getInputProps({}, ref);\n  var labelProps = getLabelProps();\n  var checkboxProps = getCheckboxProps();\n\n  var iconStyles = _extends({\n    opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n    transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n    transition: \"transform 200ms\",\n    fontSize: iconSize,\n    color: iconColor\n  }, styles.icon);\n\n  var clonedIcon = /*#__PURE__*/React.cloneElement(Icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(StyledContainer, _extends({\n    __css: styles.container,\n    \"data-disabled\": dataAttr(state.isDisabled),\n    className: _className\n  }, htmlProps), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, inputProps)), /*#__PURE__*/React.createElement(StyledControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, checkboxProps), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-checkbox__label\"\n  }, labelProps, {\n    __css: _extends({\n      ml: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}","map":{"version":3,"mappings":"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","names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","callAll","cx","__DEV__","dataAttr","React","useCheckboxGroupContext","CheckboxIcon","useCheckbox","StyledControl","baseStyle","display","alignItems","justifyContent","verticalAlign","userSelect","flexShrink","StyledContainer","cursor","position","_disabled","Checkbox","props","ref","group","mergedProps","styles","ownProps","spacing","className","children","iconColor","iconSize","icon","Icon","createElement","isChecked","isCheckedProp","onChange","onChangeProp","rest","value","includes","state","getInputProps","getCheckboxProps","getLabelProps","htmlProps","_className","inputProps","labelProps","checkboxProps","iconStyles","opacity","isIndeterminate","transform","transition","fontSize","color","clonedIcon","cloneElement","__css","container","isDisabled","control","div","ml","label","displayName"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/checkbox/dist/esm/checkbox.js"],"sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { callAll, cx, __DEV__, dataAttr } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useCheckboxGroupContext } from \"./checkbox-group\";\nimport { CheckboxIcon } from \"./checkbox-icon\";\nimport { useCheckbox } from \"./use-checkbox\";\nvar StyledControl = chakra(\"div\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar StyledContainer = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\",\n    _disabled: {\n      cursor: \"not-allowed\"\n    }\n  }\n});\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/components/checkbox\n */\nexport var Checkbox = /*#__PURE__*/forwardRef(function Checkbox(props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(mergedProps);\n\n  var {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon: Icon = /*#__PURE__*/React.createElement(CheckboxIcon, null),\n    isChecked: isCheckedProp,\n    onChange: onChangeProp\n  } = ownProps,\n      rest = _objectWithoutPropertiesLoose(ownProps, [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"onChange\"]);\n\n  var isChecked = isCheckedProp;\n\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    htmlProps\n  } = useCheckbox(_extends({}, rest, {\n    isChecked,\n    onChange\n  }));\n\n  var _className = cx(\"chakra-checkbox\", className);\n\n  var inputProps = getInputProps({}, ref);\n  var labelProps = getLabelProps();\n  var checkboxProps = getCheckboxProps();\n\n  var iconStyles = _extends({\n    opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n    transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n    transition: \"transform 200ms\",\n    fontSize: iconSize,\n    color: iconColor\n  }, styles.icon);\n\n  var clonedIcon = /*#__PURE__*/React.cloneElement(Icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(StyledContainer, _extends({\n    __css: styles.container,\n    \"data-disabled\": dataAttr(state.isDisabled),\n    className: _className\n  }, htmlProps), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, inputProps)), /*#__PURE__*/React.createElement(StyledControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, checkboxProps), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-checkbox__label\"\n  }, labelProps, {\n    __css: _extends({\n      ml: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n//# sourceMappingURL=checkbox.js.map"]},"metadata":{},"sourceType":"module"}