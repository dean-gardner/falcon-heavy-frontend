{"ast":null,"code":"import React, { forwardRef } from 'react';\n/**\r\n * Welcome to @reach/visually-hidden!\r\n *\r\n * Provides text for screen readers that is visually hidden.\r\n * It is the logical opposite of the `aria-hidden` attribute.\r\n *\r\n * @see https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\r\n * @see https://a11yproject.com/posts/how-to-hide-content/\r\n * @see Docs     https://reach.tech/visually-hidden\r\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/visually-hidden\r\n */\n\n/**\r\n * VisuallyHidden\r\n *\r\n * Provides text for screen readers that is visually hidden.\r\n * It is the logical opposite of the `aria-hidden` attribute.\r\n */\n\nvar VisuallyHidden = /*#__PURE__*/forwardRef(function VisuallyHidden(props, ref) {\n  return React.createElement(\"span\", Object.assign({\n    ref: ref,\n    style: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: \"1px\",\n      margin: \"-1px\",\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      width: \"1px\",\n      // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n      whiteSpace: \"nowrap\",\n      wordWrap: \"normal\"\n    }\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  VisuallyHidden.displayName = \"VisuallyHidden\";\n}\n\nexport default VisuallyHidden;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG,aAAaD,UAAU,CAAC,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,GAA/B,EAAoC;AAC/E,SAAOJ,KAAK,CAACK,aAAN,CAAoB,MAApB,EAA4BC,MAAM,CAACC,MAAP,CAAc;AAC/CH,OAAG,EAAEA,GAD0C;AAE/CI,SAAK,EAAE;AACLC,YAAM,EAAE,CADH;AAELC,UAAI,EAAE,eAFD;AAGLC,YAAM,EAAE,KAHH;AAILC,YAAM,EAAE,MAJH;AAKLC,cAAQ,EAAE,QALL;AAMLC,aAAO,EAAE,CANJ;AAOLC,cAAQ,EAAE,UAPL;AAQLC,WAAK,EAAE,KARF;AASL;AACAC,gBAAU,EAAE,QAVP;AAWLC,cAAQ,EAAE;AAXL;AAFwC,GAAd,EAehCf,KAfgC,CAA5B,CAAP;AAgBD,CAjB2C,CAA5C;;AAmBA,IAAIgB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCnB,gBAAc,CAACoB,WAAf,GAA6B,gBAA7B;AACD;;AAED,eAAepB,cAAf","names":["React","forwardRef","VisuallyHidden","props","ref","createElement","Object","assign","style","border","clip","height","margin","overflow","padding","position","width","whiteSpace","wordWrap","process","env","NODE_ENV","displayName"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/toast/node_modules/@reach/alert/node_modules/@reach/visually-hidden/dist/visually-hidden.esm.js"],"sourcesContent":["import React, { forwardRef } from 'react';\n\n/**\r\n * Welcome to @reach/visually-hidden!\r\n *\r\n * Provides text for screen readers that is visually hidden.\r\n * It is the logical opposite of the `aria-hidden` attribute.\r\n *\r\n * @see https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\r\n * @see https://a11yproject.com/posts/how-to-hide-content/\r\n * @see Docs     https://reach.tech/visually-hidden\r\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/visually-hidden\r\n */\n/**\r\n * VisuallyHidden\r\n *\r\n * Provides text for screen readers that is visually hidden.\r\n * It is the logical opposite of the `aria-hidden` attribute.\r\n */\n\nvar VisuallyHidden = /*#__PURE__*/forwardRef(function VisuallyHidden(props, ref) {\n  return React.createElement(\"span\", Object.assign({\n    ref: ref,\n    style: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: \"1px\",\n      margin: \"-1px\",\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      width: \"1px\",\n      // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n      whiteSpace: \"nowrap\",\n      wordWrap: \"normal\"\n    }\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  VisuallyHidden.displayName = \"VisuallyHidden\";\n}\n\nexport default VisuallyHidden;\n//# sourceMappingURL=visually-hidden.esm.js.map\n"]},"metadata":{},"sourceType":"module"}