{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/components/simplegrid\n */\n\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function SimpleGrid(props, ref) {\n  var {\n    columns,\n    spacingX,\n    spacingY,\n    spacing,\n    minChildWidth\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, value => isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\");\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, value => isNull(value) ? null : \"repeat(\" + value + \", 1fr)\");\n}","map":{"version":3,"mappings":"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","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","forwardRef","mapResponsive","isNumber","isNull","__DEV__","React","Grid","SimpleGrid","props","ref","columns","spacingX","spacingY","spacing","minChildWidth","rest","templateColumns","widthToColumns","countToColumns","createElement","gap","columnGap","rowGap","displayName","toPx","n","width","value","count"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/layout/dist/esm/simple-grid.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/components/simplegrid\n */\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function SimpleGrid(props, ref) {\n  var {\n    columns,\n    spacingX,\n    spacingY,\n    spacing,\n    minChildWidth\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, value => isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\");\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, value => isNull(value) ? null : \"repeat(\" + value + \", 1fr)\");\n}\n//# sourceMappingURL=simple-grid.js.map"]},"metadata":{},"sourceType":"module"}