{"ast":null,"code":"var win;\n/**\n * Note: Accessing \"window\" in IE11 is somewhat expensive, and calling \"typeof window\"\n * hits a memory leak, whereas aliasing it and calling \"typeof win\" does not.\n * Caching the window value at the file scope lets us minimize the impact.\n *\n * @see IE11 Memory Leak Issue https://github.com/microsoft/fluentui/pull/9010#issuecomment-490768427\n */\n\ntry {\n  win = window;\n} catch (e) {\n  /* no-op */\n}\n/**\n * Helper to get the window object. The helper will make sure to use a cached variable\n * of \"window\", to avoid overhead and memory leaks in IE11.\n */\n\n\nexport var getWindow = node => {\n  var _node$ownerDocument$d, _node$ownerDocument;\n\n  return (_node$ownerDocument$d = node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) != null ? _node$ownerDocument$d : win;\n};\n/**\n * Check if we can use the DOM. Useful for SSR purposes\n */\n\nfunction checkIsBrowser() {\n  var win = getWindow();\n  return Boolean(typeof win !== \"undefined\" && win.document && win.document.createElement);\n}\n\nexport var isBrowser = checkIsBrowser();\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\n\nexport function normalizeEventKey(event) {\n  var {\n    key,\n    keyCode\n  } = event;\n  var isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  var eventKey = isArrowKey ? \"Arrow\" + key : key;\n  return eventKey;\n}\nexport var dataAttr = condition => condition ? \"\" : undefined;\nexport var ariaAttr = condition => condition ? true : undefined;\nexport var getDocument = node => (node == null ? void 0 : node.ownerDocument) || isBrowser ? document : null;\nexport var cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\nexport function getActiveElement(node) {\n  var doc = getDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nexport function contains(parent, child) {\n  return parent === child || parent.contains(child);\n}","map":{"version":3,"mappings":"AAAA,IAAIA,GAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACFA,KAAG,GAAGC,MAAN;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU;AACV;AACD;AACD;AACA;AACA;AACA;;;AAGA,OAAO,IAAIC,SAAS,GAAGC,IAAI,IAAI;AAC7B,MAAIC,qBAAJ,EAA2BC,mBAA3B;;AAEA,SAAO,CAACD,qBAAqB,GAAGD,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwB,CAACE,mBAAmB,GAAGF,IAAI,CAACG,aAA5B,KAA8C,IAA9C,GAAqD,KAAK,CAA1D,GAA8DD,mBAAmB,CAACE,WAAnI,KAAmJ,IAAnJ,GAA0JH,qBAA1J,GAAkLL,GAAzL;AACD,CAJM;AAKP;AACA;AACA;;AAEA,SAASS,cAAT,GAA0B;AACxB,MAAIT,GAAG,GAAGG,SAAS,EAAnB;AACA,SAAOO,OAAO,CAAC,OAAOV,GAAP,KAAe,WAAf,IAA8BA,GAAG,CAACW,QAAlC,IAA8CX,GAAG,CAACW,QAAJ,CAAaC,aAA5D,CAAd;AACD;;AAED,OAAO,IAAIC,SAAS,GAAGJ,cAAc,EAA9B;AACP;AACA;AACA;AACA;;AAEA,OAAO,SAASK,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC,MAAI;AACFC,OADE;AAEFC;AAFE,MAGAF,KAHJ;AAIA,MAAIG,UAAU,GAAGD,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAI,EAA5B,IAAkCD,GAAG,CAACG,OAAJ,CAAY,OAAZ,MAAyB,CAA5E;AACA,MAAIC,QAAQ,GAAGF,UAAU,GAAG,UAAUF,GAAb,GAAmBA,GAA5C;AACA,SAAOI,QAAP;AACD;AACD,OAAO,IAAIC,QAAQ,GAAGC,SAAS,IAAIA,SAAS,GAAG,EAAH,GAAQC,SAA7C;AACP,OAAO,IAAIC,QAAQ,GAAGF,SAAS,IAAIA,SAAS,GAAG,IAAH,GAAUC,SAA/C;AACP,OAAO,IAAIE,WAAW,GAAGrB,IAAI,IAAI,CAACA,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACG,aAA9B,KAAgDM,SAAhD,GAA4DF,QAA5D,GAAuE,IAAjG;AACP,OAAO,IAAIe,EAAE,GAAG,SAASA,EAAT,GAAc;AAC5B,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,UAAU,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAA1C,EAA2DK,IAAI,GAAG,CAAvE,EAA0EA,IAAI,GAAGL,IAAjF,EAAuFK,IAAI,EAA3F,EAA+F;AAC7FF,cAAU,CAACE,IAAD,CAAV,GAAmBJ,SAAS,CAACI,IAAD,CAA5B;AACD;;AAED,SAAOF,UAAU,CAACG,MAAX,CAAkBvB,OAAlB,EAA2BwB,IAA3B,CAAgC,GAAhC,CAAP;AACD,CANM;AAOP,OAAO,SAASC,gBAAT,CAA0B/B,IAA1B,EAAgC;AACrC,MAAIgC,GAAG,GAAGX,WAAW,CAACrB,IAAD,CAArB;AACA,SAAOgC,GAAG,IAAI,IAAP,GAAc,KAAK,CAAnB,GAAuBA,GAAG,CAACC,aAAlC;AACD;AACD,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,KAA1B,EAAiC;AACtC,SAAOD,MAAM,KAAKC,KAAX,IAAoBD,MAAM,CAACD,QAAP,CAAgBE,KAAhB,CAA3B;AACD","names":["win","window","e","getWindow","node","_node$ownerDocument$d","_node$ownerDocument","ownerDocument","defaultView","checkIsBrowser","Boolean","document","createElement","isBrowser","normalizeEventKey","event","key","keyCode","isArrowKey","indexOf","eventKey","dataAttr","condition","undefined","ariaAttr","getDocument","cx","_len","arguments","length","classNames","Array","_key","filter","join","getActiveElement","doc","activeElement","contains","parent","child"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/utils/dist/esm/dom.js"],"sourcesContent":["var win;\n/**\n * Note: Accessing \"window\" in IE11 is somewhat expensive, and calling \"typeof window\"\n * hits a memory leak, whereas aliasing it and calling \"typeof win\" does not.\n * Caching the window value at the file scope lets us minimize the impact.\n *\n * @see IE11 Memory Leak Issue https://github.com/microsoft/fluentui/pull/9010#issuecomment-490768427\n */\n\ntry {\n  win = window;\n} catch (e) {\n  /* no-op */\n}\n/**\n * Helper to get the window object. The helper will make sure to use a cached variable\n * of \"window\", to avoid overhead and memory leaks in IE11.\n */\n\n\nexport var getWindow = node => {\n  var _node$ownerDocument$d, _node$ownerDocument;\n\n  return (_node$ownerDocument$d = node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) != null ? _node$ownerDocument$d : win;\n};\n/**\n * Check if we can use the DOM. Useful for SSR purposes\n */\n\nfunction checkIsBrowser() {\n  var win = getWindow();\n  return Boolean(typeof win !== \"undefined\" && win.document && win.document.createElement);\n}\n\nexport var isBrowser = checkIsBrowser();\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\n\nexport function normalizeEventKey(event) {\n  var {\n    key,\n    keyCode\n  } = event;\n  var isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  var eventKey = isArrowKey ? \"Arrow\" + key : key;\n  return eventKey;\n}\nexport var dataAttr = condition => condition ? \"\" : undefined;\nexport var ariaAttr = condition => condition ? true : undefined;\nexport var getDocument = node => (node == null ? void 0 : node.ownerDocument) || isBrowser ? document : null;\nexport var cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\nexport function getActiveElement(node) {\n  var doc = getDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nexport function contains(parent, child) {\n  return parent === child || parent.contains(child);\n}\n//# sourceMappingURL=dom.js.map"]},"metadata":{},"sourceType":"module"}