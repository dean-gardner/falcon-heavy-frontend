{"ast":null,"code":"/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n  return function (subscriber) {\n    var iterator = iterable[Symbol_iterator]();\n\n    do {\n      var item = void 0;\n\n      try {\n        item = iterator.next();\n      } catch (err) {\n        subscriber.error(err);\n        return subscriber;\n      }\n\n      if (item.done) {\n        subscriber.complete();\n        break;\n      }\n\n      subscriber.next(item.value);\n\n      if (subscriber.closed) {\n        break;\n      }\n    } while (true);\n\n    if (typeof iterator.return === 'function') {\n      subscriber.add(function () {\n        if (iterator.return) {\n          iterator.return();\n        }\n      });\n    }\n\n    return subscriber;\n  };\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,QAAQ,IAAIC,eAArB,QAA4C,oBAA5C;AACA,OAAO,IAAIC,mBAAmB,GAAG,UAAUC,QAAV,EAAoB;AACjD,SAAO,UAAUC,UAAV,EAAsB;AACzB,QAAIJ,QAAQ,GAAGG,QAAQ,CAACF,eAAD,CAAR,EAAf;;AACA,OAAG;AACC,UAAII,IAAI,GAAG,KAAK,CAAhB;;AACA,UAAI;AACAA,YAAI,GAAGL,QAAQ,CAACM,IAAT,EAAP;AACH,OAFD,CAGA,OAAOC,GAAP,EAAY;AACRH,kBAAU,CAACI,KAAX,CAAiBD,GAAjB;AACA,eAAOH,UAAP;AACH;;AACD,UAAIC,IAAI,CAACI,IAAT,EAAe;AACXL,kBAAU,CAACM,QAAX;AACA;AACH;;AACDN,gBAAU,CAACE,IAAX,CAAgBD,IAAI,CAACM,KAArB;;AACA,UAAIP,UAAU,CAACQ,MAAf,EAAuB;AACnB;AACH;AACJ,KAjBD,QAiBS,IAjBT;;AAkBA,QAAI,OAAOZ,QAAQ,CAACa,MAAhB,KAA2B,UAA/B,EAA2C;AACvCT,gBAAU,CAACU,GAAX,CAAe,YAAY;AACvB,YAAId,QAAQ,CAACa,MAAb,EAAqB;AACjBb,kBAAQ,CAACa,MAAT;AACH;AACJ,OAJD;AAKH;;AACD,WAAOT,UAAP;AACH,GA5BD;AA6BH,CA9BM","names":["iterator","Symbol_iterator","subscribeToIterable","iterable","subscriber","item","next","err","error","done","complete","value","closed","return","add"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js"],"sourcesContent":["/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator = iterable[Symbol_iterator]();\n        do {\n            var item = void 0;\n            try {\n                item = iterator.next();\n            }\n            catch (err) {\n                subscriber.error(err);\n                return subscriber;\n            }\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        if (typeof iterator.return === 'function') {\n            subscriber.add(function () {\n                if (iterator.return) {\n                    iterator.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToIterable.js.map\n"]},"metadata":{},"sourceType":"module"}