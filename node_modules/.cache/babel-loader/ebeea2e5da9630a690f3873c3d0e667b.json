{"ast":null,"code":"import { keyframes } from \"@chakra-ui/system\";\nimport { isFunction, valueToPercent } from \"@chakra-ui/utils\";\nexport var spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nexport var rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nexport var progress = keyframes({\n  \"0%\": {\n    left: \"-40%\"\n  },\n  \"100%\": {\n    left: \"100%\"\n  }\n});\nexport var stripe = keyframes({\n  from: {\n    backgroundPosition: \"1rem 0\"\n  },\n  to: {\n    backgroundPosition: \"0 0\"\n  }\n});\n/**\n * Get the common `aria-*` attributes for both the linear and circular\n * progress components.\n */\n\nexport function getProgressProps(options) {\n  var {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate\n  } = options;\n  var percent = valueToPercent(value, min, max);\n\n  var getAriaValueText = () => {\n    if (value == null) return undefined;\n    return isFunction(getValueText) ? getValueText(value, percent) : valueText;\n  };\n\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : undefined,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role: \"progressbar\"\n    },\n    percent\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,kBAA3C;AACA,OAAO,IAAIC,IAAI,GAAGH,SAAS,CAAC;AAC1B,QAAM;AACJI,mBAAe,EAAE,QADb;AAEJC,oBAAgB,EAAE;AAFd,GADoB;AAK1B,SAAO;AACLD,mBAAe,EAAE,UADZ;AAELC,oBAAgB,EAAE;AAFb,GALmB;AAS1B,UAAQ;AACND,mBAAe,EAAE,UADX;AAENC,oBAAgB,EAAE;AAFZ;AATkB,CAAD,CAApB;AAcP,OAAO,IAAIC,MAAM,GAAGN,SAAS,CAAC;AAC5B,QAAM;AACJO,aAAS,EAAE;AADP,GADsB;AAI5B,UAAQ;AACNA,aAAS,EAAE;AADL;AAJoB,CAAD,CAAtB;AAQP,OAAO,IAAIC,QAAQ,GAAGR,SAAS,CAAC;AAC9B,QAAM;AACJS,QAAI,EAAE;AADF,GADwB;AAI9B,UAAQ;AACNA,QAAI,EAAE;AADA;AAJsB,CAAD,CAAxB;AAQP,OAAO,IAAIC,MAAM,GAAGV,SAAS,CAAC;AAC5BW,MAAI,EAAE;AACJC,sBAAkB,EAAE;AADhB,GADsB;AAI5BC,IAAE,EAAE;AACFD,sBAAkB,EAAE;AADlB;AAJwB,CAAD,CAAtB;AASP;AACA;AACA;AACA;;AACA,OAAO,SAASE,gBAAT,CAA0BC,OAA1B,EAAmC;AACxC,MAAI;AACFC,SAAK,GAAG,CADN;AAEFC,OAFE;AAGFC,OAHE;AAIFC,aAJE;AAKFC,gBALE;AAMFC;AANE,MAOAN,OAPJ;AAQA,MAAIO,OAAO,GAAGpB,cAAc,CAACc,KAAD,EAAQC,GAAR,EAAaC,GAAb,CAA5B;;AAEA,MAAIK,gBAAgB,GAAG,MAAM;AAC3B,QAAIP,KAAK,IAAI,IAAb,EAAmB,OAAOQ,SAAP;AACnB,WAAOvB,UAAU,CAACmB,YAAD,CAAV,GAA2BA,YAAY,CAACJ,KAAD,EAAQM,OAAR,CAAvC,GAA0DH,SAAjE;AACD,GAHD;;AAKA,SAAO;AACLM,QAAI,EAAE;AACJ,4BAAsBJ,eAAe,GAAG,EAAH,GAAQG,SADzC;AAEJ,uBAAiBN,GAFb;AAGJ,uBAAiBD,GAHb;AAIJ,uBAAiBI,eAAe,GAAGG,SAAH,GAAeR,KAJ3C;AAKJ,wBAAkBO,gBAAgB,EAL9B;AAMJG,UAAI,EAAE;AANF,KADD;AASLJ;AATK,GAAP;AAWD","names":["keyframes","isFunction","valueToPercent","spin","strokeDasharray","strokeDashoffset","rotate","transform","progress","left","stripe","from","backgroundPosition","to","getProgressProps","options","value","min","max","valueText","getValueText","isIndeterminate","percent","getAriaValueText","undefined","bind","role"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/progress/dist/esm/progress.utils.js"],"sourcesContent":["import { keyframes } from \"@chakra-ui/system\";\nimport { isFunction, valueToPercent } from \"@chakra-ui/utils\";\nexport var spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nexport var rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nexport var progress = keyframes({\n  \"0%\": {\n    left: \"-40%\"\n  },\n  \"100%\": {\n    left: \"100%\"\n  }\n});\nexport var stripe = keyframes({\n  from: {\n    backgroundPosition: \"1rem 0\"\n  },\n  to: {\n    backgroundPosition: \"0 0\"\n  }\n});\n\n/**\n * Get the common `aria-*` attributes for both the linear and circular\n * progress components.\n */\nexport function getProgressProps(options) {\n  var {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate\n  } = options;\n  var percent = valueToPercent(value, min, max);\n\n  var getAriaValueText = () => {\n    if (value == null) return undefined;\n    return isFunction(getValueText) ? getValueText(value, percent) : valueText;\n  };\n\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : undefined,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role: \"progressbar\"\n    },\n    percent\n  };\n}\n//# sourceMappingURL=progress.utils.js.map"]},"metadata":{},"sourceType":"module"}