{"ast":null,"code":"import { objectKeys } from \"@chakra-ui/utils\";\nvar group = {\n  hover: selector => selector + \":hover &, \" + selector + \"[data-hover] &\",\n  focus: selector => selector + \":focus &, \" + selector + \"[data-focus] &\",\n  active: selector => selector + \":active &, \" + selector + \"[data-active] &\",\n  disabled: selector => selector + \":disabled &, \" + selector + \"[data-disabled] &\",\n  invalid: selector => selector + \":invalid &, \" + selector + \"[data-invalid] &\",\n  checked: selector => selector + \":checked &, \" + selector + \"[data-checked] &\",\n  indeterminate: selector => selector + \":indeterminate &, \" + selector + \"[aria-checked=mixed] &, \" + selector + \"[data-indeterminate] &\",\n  readOnly: selector => selector + \":read-only &, \" + selector + \"[readonly] &, \" + selector + \"[data-read-only] &\",\n  expanded: selector => selector + \":read-only &, \" + selector + \"[aria-expanded=true] &, \" + selector + \"[data-expanded] &\"\n};\n\nfunction toGroup(fn) {\n  return merge(fn, \"[role=group]\", \"[data-group]\");\n}\n\nfunction merge(fn) {\n  for (var _len = arguments.length, selectors = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    selectors[_key - 1] = arguments[_key];\n  }\n\n  return selectors.map(fn).join(\", \");\n}\n\nvar disabled = selector => selector + \", \" + selector + \":focus, \" + selector + \":hover\";\n\nvar disabledSelector = merge(disabled, \"&[disabled]\", \"&[aria-disabled=true]\", \"&[data-disabled]\");\nexport var pseudoSelectors = {\n  /**\n   * Styles for CSS selector `&:hover`\n   */\n  _hover: \"&:hover, &[data-hover]\",\n\n  /**\n   * Styles for CSS Selector `&:active`\n   */\n  _active: \"&:active, &[data-active]\",\n\n  /**\n   * Styles for CSS selector `&:focus`\n   *\n   */\n  _focus: \"&:focus, &[data-focus]\",\n\n  /**\n   * Styles for the highlighted state.\n   */\n  _highlighted: \"&[data-highlighted]\",\n\n  /**\n   * Styles to apply when a child of this element has received focus\n   * - CSS Selector `&:focus-within`\n   */\n  _focusWithin: \"&:focus-within\",\n  _focusVisible: \"&:focus-visible\",\n\n  /**\n   * Styles to apply when this element is disabled. The passed styles are applied to these CSS selectors:\n   * - `&[aria-disabled=true]`\n   * - `&:disabled`\n   * - `&:disabled:focus`\n   * - `&:disabled:hover`\n   * - `&:focus[aria-disabled=true]`\n   * - `&:hover[aria-disabled=true]`\n   */\n  _disabled: disabledSelector,\n\n  /**\n   * Styles for CSS Selector `&:readonly`\n   */\n  _readOnly: \"&[aria-readonly=true], &[readonly], &[data-readonly]\",\n\n  /**\n   * Styles for CSS selector `&::before`\n   *\n   * NOTE:When using this, ensure the `content` is wrapped in a backtick.\n   * @example\n   * ```jsx\n   * <Box _before={{content:`\"\"` }}/>\n   * ```\n   */\n  _before: \"&::before\",\n\n  /**\n   * Styles for CSS selector `&::after`\n   *\n   * NOTE:When using this, ensure the `content` is wrapped in a backtick.\n   * @example\n   * ```jsx\n   * <Box _after={{content:`\"\"` }}/>\n   * ```\n   */\n  _after: \"&::after\",\n  _empty: \"&:empty\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-expanded` is `true`\n   * - CSS selector `&[aria-expanded=true]`\n   */\n  _expanded: \"&[aria-expanded=true], &[data-expanded]\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-checked` is `true`\n   * - CSS selector `&[aria-checked=true]`\n   */\n  _checked: \"&[aria-checked=true], &[data-checked]\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-grabbed` is `true`\n   * - CSS selector `&[aria-grabbed=true]`\n   */\n  _grabbed: \"&[aria-grabbed=true], &[data-grabbed]\",\n\n  /**\n   * Styles for CSS Selector `&[aria-pressed=true]`\n   * Typically used to style the current \"pressed\" state of toggle buttons\n   */\n  _pressed: \"&[aria-pressed=true], &[data-pressed]\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-invalid` is `true`\n   * - CSS selector `&[aria-invalid=true]`\n   */\n  _invalid: \"&[aria-invalid=true], &[data-invalid]\",\n\n  /**\n   * Styles for the valid state\n   * - CSS selector `&[data-valid], &[data-state=valid]`\n   */\n  _valid: \"&[data-valid], &[data-state=valid]\",\n\n  /**\n   * Styles for CSS Selector `&[aria-busy=true]` or `&[data-loading=true]`.\n   * Useful for styling loading states\n   */\n  _loading: \"&[data-loading], &[aria-busy=true]\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-selected` is `true`\n   *\n   * - CSS selector `&[aria-selected=true]`\n   */\n  _selected: \"&[aria-selected=true], &[data-selected]\",\n\n  /**\n   * Styles for CSS Selector `[hidden=true]`\n   */\n  _hidden: \"&[hidden], &[data-hidden]\",\n\n  /**\n   * Styles for CSS Selector `&:-webkit-autofill`\n   */\n  _autofill: \"&:-webkit-autofill\",\n\n  /**\n   * Styles for CSS Selector `&:nth-child(even)`\n   */\n  _even: \"&:nth-of-type(even)\",\n\n  /**\n   * Styles for CSS Selector `&:nth-child(odd)`\n   */\n  _odd: \"&:nth-of-type(odd)\",\n\n  /**\n   * Styles for CSS Selector `&:first-of-type`\n   */\n  _first: \"&:first-of-type\",\n\n  /**\n   * Styles for CSS Selector `&:last-of-type`\n   */\n  _last: \"&:last-of-type\",\n\n  /**\n   * Styles for CSS Selector `&:not(:first-of-type)`\n   */\n  _notFirst: \"&:not(:first-of-type)\",\n\n  /**\n   * Styles for CSS Selector `&:not(:last-of-type)`\n   */\n  _notLast: \"&:not(:last-of-type)\",\n\n  /**\n   * Styles for CSS Selector `&:visited`\n   */\n  _visited: \"&:visited\",\n\n  /**\n   * Used to style the active link in a navigation\n   * Styles for CSS Selector `&[aria-current=page]`\n   */\n  _activeLink: \"&[aria-current=page]\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-checked` is `mixed`\n   * - CSS selector `&[aria-checked=mixed]`\n   */\n  _indeterminate: \"&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]\",\n\n  /**\n   * Styles to apply when parent is hovered\n   */\n  _groupHover: toGroup(group.hover),\n\n  /**\n   * Styles to apply when parent is focused\n   */\n  _groupFocus: toGroup(group.focus),\n\n  /**\n   * Styles to apply when parent is active\n   */\n  _groupActive: toGroup(group.active),\n\n  /**\n   * Styles to apply when parent is disabled\n   */\n  _groupDisabled: toGroup(group.disabled),\n\n  /**\n   * Styles to apply when parent is invalid\n   */\n  _groupInvalid: toGroup(group.invalid),\n\n  /**\n   * Styles to apply when parent is checked\n   */\n  _groupChecked: toGroup(group.checked),\n\n  /**\n   * Styles for CSS Selector `&::placeholder`.\n   */\n  _placeholder: \"&::placeholder\",\n\n  /**\n   * Styles for CSS Selector `&:fullscreen`.\n   */\n  _fullScreen: \"&:fullscreen\",\n\n  /**\n   * Styles for CSS Selector `&::selection`\n   */\n  _selection: \"&::selection\"\n};\nexport var pseudoPropNames = objectKeys(pseudoSelectors);","map":{"version":3,"mappings":"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","names":["objectKeys","group","hover","selector","focus","active","disabled","invalid","checked","indeterminate","readOnly","expanded","toGroup","fn","merge","_len","arguments","length","selectors","Array","_key","map","join","disabledSelector","pseudoSelectors","_hover","_active","_focus","_highlighted","_focusWithin","_focusVisible","_disabled","_readOnly","_before","_after","_empty","_expanded","_checked","_grabbed","_pressed","_invalid","_valid","_loading","_selected","_hidden","_autofill","_even","_odd","_first","_last","_notFirst","_notLast","_visited","_activeLink","_indeterminate","_groupHover","_groupFocus","_groupActive","_groupDisabled","_groupInvalid","_groupChecked","_placeholder","_fullScreen","_selection","pseudoPropNames"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/skeleton/node_modules/@chakra-ui/styled-system/dist/esm/pseudo/pseudo.selector.js"],"sourcesContent":["import { objectKeys } from \"@chakra-ui/utils\";\nvar group = {\n  hover: selector => selector + \":hover &, \" + selector + \"[data-hover] &\",\n  focus: selector => selector + \":focus &, \" + selector + \"[data-focus] &\",\n  active: selector => selector + \":active &, \" + selector + \"[data-active] &\",\n  disabled: selector => selector + \":disabled &, \" + selector + \"[data-disabled] &\",\n  invalid: selector => selector + \":invalid &, \" + selector + \"[data-invalid] &\",\n  checked: selector => selector + \":checked &, \" + selector + \"[data-checked] &\",\n  indeterminate: selector => selector + \":indeterminate &, \" + selector + \"[aria-checked=mixed] &, \" + selector + \"[data-indeterminate] &\",\n  readOnly: selector => selector + \":read-only &, \" + selector + \"[readonly] &, \" + selector + \"[data-read-only] &\",\n  expanded: selector => selector + \":read-only &, \" + selector + \"[aria-expanded=true] &, \" + selector + \"[data-expanded] &\"\n};\n\nfunction toGroup(fn) {\n  return merge(fn, \"[role=group]\", \"[data-group]\");\n}\n\nfunction merge(fn) {\n  for (var _len = arguments.length, selectors = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    selectors[_key - 1] = arguments[_key];\n  }\n\n  return selectors.map(fn).join(\", \");\n}\n\nvar disabled = selector => selector + \", \" + selector + \":focus, \" + selector + \":hover\";\n\nvar disabledSelector = merge(disabled, \"&[disabled]\", \"&[aria-disabled=true]\", \"&[data-disabled]\");\nexport var pseudoSelectors = {\n  /**\n   * Styles for CSS selector `&:hover`\n   */\n  _hover: \"&:hover, &[data-hover]\",\n\n  /**\n   * Styles for CSS Selector `&:active`\n   */\n  _active: \"&:active, &[data-active]\",\n\n  /**\n   * Styles for CSS selector `&:focus`\n   *\n   */\n  _focus: \"&:focus, &[data-focus]\",\n\n  /**\n   * Styles for the highlighted state.\n   */\n  _highlighted: \"&[data-highlighted]\",\n\n  /**\n   * Styles to apply when a child of this element has received focus\n   * - CSS Selector `&:focus-within`\n   */\n  _focusWithin: \"&:focus-within\",\n  _focusVisible: \"&:focus-visible\",\n\n  /**\n   * Styles to apply when this element is disabled. The passed styles are applied to these CSS selectors:\n   * - `&[aria-disabled=true]`\n   * - `&:disabled`\n   * - `&:disabled:focus`\n   * - `&:disabled:hover`\n   * - `&:focus[aria-disabled=true]`\n   * - `&:hover[aria-disabled=true]`\n   */\n  _disabled: disabledSelector,\n\n  /**\n   * Styles for CSS Selector `&:readonly`\n   */\n  _readOnly: \"&[aria-readonly=true], &[readonly], &[data-readonly]\",\n\n  /**\n   * Styles for CSS selector `&::before`\n   *\n   * NOTE:When using this, ensure the `content` is wrapped in a backtick.\n   * @example\n   * ```jsx\n   * <Box _before={{content:`\"\"` }}/>\n   * ```\n   */\n  _before: \"&::before\",\n\n  /**\n   * Styles for CSS selector `&::after`\n   *\n   * NOTE:When using this, ensure the `content` is wrapped in a backtick.\n   * @example\n   * ```jsx\n   * <Box _after={{content:`\"\"` }}/>\n   * ```\n   */\n  _after: \"&::after\",\n  _empty: \"&:empty\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-expanded` is `true`\n   * - CSS selector `&[aria-expanded=true]`\n   */\n  _expanded: \"&[aria-expanded=true], &[data-expanded]\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-checked` is `true`\n   * - CSS selector `&[aria-checked=true]`\n   */\n  _checked: \"&[aria-checked=true], &[data-checked]\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-grabbed` is `true`\n   * - CSS selector `&[aria-grabbed=true]`\n   */\n  _grabbed: \"&[aria-grabbed=true], &[data-grabbed]\",\n\n  /**\n   * Styles for CSS Selector `&[aria-pressed=true]`\n   * Typically used to style the current \"pressed\" state of toggle buttons\n   */\n  _pressed: \"&[aria-pressed=true], &[data-pressed]\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-invalid` is `true`\n   * - CSS selector `&[aria-invalid=true]`\n   */\n  _invalid: \"&[aria-invalid=true], &[data-invalid]\",\n\n  /**\n   * Styles for the valid state\n   * - CSS selector `&[data-valid], &[data-state=valid]`\n   */\n  _valid: \"&[data-valid], &[data-state=valid]\",\n\n  /**\n   * Styles for CSS Selector `&[aria-busy=true]` or `&[data-loading=true]`.\n   * Useful for styling loading states\n   */\n  _loading: \"&[data-loading], &[aria-busy=true]\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-selected` is `true`\n   *\n   * - CSS selector `&[aria-selected=true]`\n   */\n  _selected: \"&[aria-selected=true], &[data-selected]\",\n\n  /**\n   * Styles for CSS Selector `[hidden=true]`\n   */\n  _hidden: \"&[hidden], &[data-hidden]\",\n\n  /**\n   * Styles for CSS Selector `&:-webkit-autofill`\n   */\n  _autofill: \"&:-webkit-autofill\",\n\n  /**\n   * Styles for CSS Selector `&:nth-child(even)`\n   */\n  _even: \"&:nth-of-type(even)\",\n\n  /**\n   * Styles for CSS Selector `&:nth-child(odd)`\n   */\n  _odd: \"&:nth-of-type(odd)\",\n\n  /**\n   * Styles for CSS Selector `&:first-of-type`\n   */\n  _first: \"&:first-of-type\",\n\n  /**\n   * Styles for CSS Selector `&:last-of-type`\n   */\n  _last: \"&:last-of-type\",\n\n  /**\n   * Styles for CSS Selector `&:not(:first-of-type)`\n   */\n  _notFirst: \"&:not(:first-of-type)\",\n\n  /**\n   * Styles for CSS Selector `&:not(:last-of-type)`\n   */\n  _notLast: \"&:not(:last-of-type)\",\n\n  /**\n   * Styles for CSS Selector `&:visited`\n   */\n  _visited: \"&:visited\",\n\n  /**\n   * Used to style the active link in a navigation\n   * Styles for CSS Selector `&[aria-current=page]`\n   */\n  _activeLink: \"&[aria-current=page]\",\n\n  /**\n   * Styles to apply when the ARIA attribute `aria-checked` is `mixed`\n   * - CSS selector `&[aria-checked=mixed]`\n   */\n  _indeterminate: \"&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]\",\n\n  /**\n   * Styles to apply when parent is hovered\n   */\n  _groupHover: toGroup(group.hover),\n\n  /**\n   * Styles to apply when parent is focused\n   */\n  _groupFocus: toGroup(group.focus),\n\n  /**\n   * Styles to apply when parent is active\n   */\n  _groupActive: toGroup(group.active),\n\n  /**\n   * Styles to apply when parent is disabled\n   */\n  _groupDisabled: toGroup(group.disabled),\n\n  /**\n   * Styles to apply when parent is invalid\n   */\n  _groupInvalid: toGroup(group.invalid),\n\n  /**\n   * Styles to apply when parent is checked\n   */\n  _groupChecked: toGroup(group.checked),\n\n  /**\n   * Styles for CSS Selector `&::placeholder`.\n   */\n  _placeholder: \"&::placeholder\",\n\n  /**\n   * Styles for CSS Selector `&:fullscreen`.\n   */\n  _fullScreen: \"&:fullscreen\",\n\n  /**\n   * Styles for CSS Selector `&::selection`\n   */\n  _selection: \"&::selection\"\n};\nexport var pseudoPropNames = objectKeys(pseudoSelectors);\n//# sourceMappingURL=pseudo.selector.js.map"]},"metadata":{},"sourceType":"module"}