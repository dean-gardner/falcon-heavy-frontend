{"ast":null,"code":"export var BeaconErrorType;\n\n(function (BeaconErrorType) {\n  BeaconErrorType[\"BROADCAST_ERROR\"] = \"BROADCAST_ERROR\";\n  BeaconErrorType[\"NETWORK_NOT_SUPPORTED\"] = \"NETWORK_NOT_SUPPORTED\";\n  BeaconErrorType[\"NO_ADDRESS_ERROR\"] = \"NO_ADDRESS_ERROR\";\n  BeaconErrorType[\"NO_PRIVATE_KEY_FOUND_ERROR\"] = \"NO_PRIVATE_KEY_FOUND_ERROR\";\n  BeaconErrorType[\"NOT_GRANTED_ERROR\"] = \"NOT_GRANTED_ERROR\";\n  BeaconErrorType[\"PARAMETERS_INVALID_ERROR\"] = \"PARAMETERS_INVALID_ERROR\";\n  BeaconErrorType[\"TOO_MANY_OPERATIONS\"] = \"TOO_MANY_OPERATIONS\";\n  BeaconErrorType[\"TRANSACTION_INVALID_ERROR\"] = \"TRANSACTION_INVALID_ERROR\";\n  BeaconErrorType[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Used as a wildcard if an unexpected error occured.\n})(BeaconErrorType || (BeaconErrorType = {}));","map":{"version":3,"mappings":"AAAA,OAAO,IAAIA,eAAJ;;AACP,CAAC,UAAUA,eAAV,EAA2B;AACxBA,iBAAe,CAAC,iBAAD,CAAf,GAAqC,iBAArC;AACAA,iBAAe,CAAC,uBAAD,CAAf,GAA2C,uBAA3C;AACAA,iBAAe,CAAC,kBAAD,CAAf,GAAsC,kBAAtC;AACAA,iBAAe,CAAC,4BAAD,CAAf,GAAgD,4BAAhD;AACAA,iBAAe,CAAC,mBAAD,CAAf,GAAuC,mBAAvC;AACAA,iBAAe,CAAC,0BAAD,CAAf,GAA8C,0BAA9C;AACAA,iBAAe,CAAC,qBAAD,CAAf,GAAyC,qBAAzC;AACAA,iBAAe,CAAC,2BAAD,CAAf,GAA+C,2BAA/C;AACAA,iBAAe,CAAC,eAAD,CAAf,GAAmC,eAAnC,CATwB,CAS4B;AACvD,CAVD,EAUGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CAVlB","names":["BeaconErrorType"],"sourceRoot":"","sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@airgap/beacon-sdk/dist/esm/types/BeaconErrorType.js"],"sourcesContent":["export var BeaconErrorType;\n(function (BeaconErrorType) {\n    BeaconErrorType[\"BROADCAST_ERROR\"] = \"BROADCAST_ERROR\";\n    BeaconErrorType[\"NETWORK_NOT_SUPPORTED\"] = \"NETWORK_NOT_SUPPORTED\";\n    BeaconErrorType[\"NO_ADDRESS_ERROR\"] = \"NO_ADDRESS_ERROR\";\n    BeaconErrorType[\"NO_PRIVATE_KEY_FOUND_ERROR\"] = \"NO_PRIVATE_KEY_FOUND_ERROR\";\n    BeaconErrorType[\"NOT_GRANTED_ERROR\"] = \"NOT_GRANTED_ERROR\";\n    BeaconErrorType[\"PARAMETERS_INVALID_ERROR\"] = \"PARAMETERS_INVALID_ERROR\";\n    BeaconErrorType[\"TOO_MANY_OPERATIONS\"] = \"TOO_MANY_OPERATIONS\";\n    BeaconErrorType[\"TRANSACTION_INVALID_ERROR\"] = \"TRANSACTION_INVALID_ERROR\";\n    BeaconErrorType[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Used as a wildcard if an unexpected error occured.\n})(BeaconErrorType || (BeaconErrorType = {}));\n//# sourceMappingURL=BeaconErrorType.js.map"]},"metadata":{},"sourceType":"module"}