{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { ExposedPromise } from '../../utils/exposed-promise';\nimport { generateGUID } from '../../utils/generate-uuid';\nimport { getKeypairFromSeed, toHex } from '../../utils/crypto';\nimport { StorageKey } from '../..';\nimport { BeaconEventHandler } from '../../events';\nimport { SDK_VERSION } from '../../constants';\nexport class BeaconClient {\n  constructor(config) {\n    this._beaconId = new ExposedPromise();\n    this.events = new BeaconEventHandler();\n    this._keyPair = new ExposedPromise();\n    this.name = config.name;\n    this.storage = config.storage;\n    this.initSDK().catch(console.error);\n  }\n\n  get beaconId() {\n    return this._beaconId.promise;\n  }\n\n  get keyPair() {\n    return this._keyPair.promise;\n  }\n\n  resetSDK() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.removeBeaconEntriesFromStorage();\n    });\n  }\n\n  initSDK() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.storage.set(StorageKey.BEACON_SDK_VERSION, SDK_VERSION).catch(console.error);\n      this.loadOrCreateBeaconSecret().catch(console.error);\n      return this.keyPair.then(keyPair => {\n        this._beaconId.resolve(toHex(keyPair.publicKey));\n      });\n    });\n  }\n\n  removeBeaconEntriesFromStorage() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const allKeys = Object.values(StorageKey);\n      yield Promise.all(allKeys.map(key => this.storage.delete(key)));\n    });\n  }\n\n  loadOrCreateBeaconSecret() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const storageValue = yield this.storage.get(StorageKey.BEACON_SDK_SECRET_SEED);\n\n      if (storageValue && typeof storageValue === 'string') {\n        this._keyPair.resolve(yield getKeypairFromSeed(storageValue));\n      } else {\n        const key = generateGUID();\n        yield this.storage.set(StorageKey.BEACON_SDK_SECRET_SEED, key);\n\n        this._keyPair.resolve(yield getKeypairFromSeed(key));\n      }\n    });\n  }\n\n}","map":{"version":3,"mappings":"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","names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","ExposedPromise","generateGUID","getKeypairFromSeed","toHex","StorageKey","BeaconEventHandler","SDK_VERSION","BeaconClient","constructor","config","_beaconId","events","_keyPair","name","storage","initSDK","catch","console","error","beaconId","promise","keyPair","resetSDK","removeBeaconEntriesFromStorage","set","BEACON_SDK_VERSION","loadOrCreateBeaconSecret","publicKey","allKeys","Object","values","all","map","key","delete","storageValue","get","BEACON_SDK_SECRET_SEED"],"sourceRoot":"","sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@airgap/beacon-sdk/dist/esm/clients/beacon-client/BeaconClient.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ExposedPromise } from '../../utils/exposed-promise';\nimport { generateGUID } from '../../utils/generate-uuid';\nimport { getKeypairFromSeed, toHex } from '../../utils/crypto';\nimport { StorageKey } from '../..';\nimport { BeaconEventHandler } from '../../events';\nimport { SDK_VERSION } from '../../constants';\nexport class BeaconClient {\n    constructor(config) {\n        this._beaconId = new ExposedPromise();\n        this.events = new BeaconEventHandler();\n        this._keyPair = new ExposedPromise();\n        this.name = config.name;\n        this.storage = config.storage;\n        this.initSDK().catch(console.error);\n    }\n    get beaconId() {\n        return this._beaconId.promise;\n    }\n    get keyPair() {\n        return this._keyPair.promise;\n    }\n    resetSDK() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.removeBeaconEntriesFromStorage();\n        });\n    }\n    initSDK() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.storage.set(StorageKey.BEACON_SDK_VERSION, SDK_VERSION).catch(console.error);\n            this.loadOrCreateBeaconSecret().catch(console.error);\n            return this.keyPair.then((keyPair) => {\n                this._beaconId.resolve(toHex(keyPair.publicKey));\n            });\n        });\n    }\n    removeBeaconEntriesFromStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allKeys = Object.values(StorageKey);\n            yield Promise.all(allKeys.map((key) => this.storage.delete(key)));\n        });\n    }\n    loadOrCreateBeaconSecret() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const storageValue = yield this.storage.get(StorageKey.BEACON_SDK_SECRET_SEED);\n            if (storageValue && typeof storageValue === 'string') {\n                this._keyPair.resolve(yield getKeypairFromSeed(storageValue));\n            }\n            else {\n                const key = generateGUID();\n                yield this.storage.set(StorageKey.BEACON_SDK_SECRET_SEED, key);\n                this._keyPair.resolve(yield getKeypairFromSeed(key));\n            }\n        });\n    }\n}\n//# sourceMappingURL=BeaconClient.js.map"]},"metadata":{},"sourceType":"module"}