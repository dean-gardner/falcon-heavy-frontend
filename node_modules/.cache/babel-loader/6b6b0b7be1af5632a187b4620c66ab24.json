{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0];\n    } else {\n      return observables[0];\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator());\n}\n\nvar RaceOperator = /*@__PURE__*/function () {\n  function RaceOperator() {}\n\n  RaceOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  };\n\n  return RaceOperator;\n}();\n\nexport { RaceOperator };\n\nvar RaceSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RaceSubscriber, _super);\n\n  function RaceSubscriber(destination) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.hasFirst = false;\n    _this.observables = [];\n    _this.subscriptions = [];\n    return _this;\n  }\n\n  RaceSubscriber.prototype._next = function (observable) {\n    this.observables.push(observable);\n  };\n\n  RaceSubscriber.prototype._complete = function () {\n    var observables = this.observables;\n    var len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (var i = 0; i < len && !this.hasFirst; i++) {\n        var observable = observables[i];\n        var subscription = subscribeToResult(this, observable, undefined, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n\n        this.add(subscription);\n      }\n\n      this.observables = null;\n    }\n  };\n\n  RaceSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (var i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          var subscription = this.subscriptions[i];\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  };\n\n  return RaceSubscriber;\n}(OuterSubscriber);\n\nexport { RaceSubscriber };","map":{"version":3,"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAO,SAASC,IAAT,GAAgB;AACnB,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,eAAW,CAACC,EAAD,CAAX,GAAkBC,SAAS,CAACD,EAAD,CAA3B;AACH;;AACD,MAAID,WAAW,CAACG,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,QAAIR,OAAO,CAACK,WAAW,CAAC,CAAD,CAAZ,CAAX,EAA6B;AACzBA,iBAAW,GAAGA,WAAW,CAAC,CAAD,CAAzB;AACH,KAFD,MAGK;AACD,aAAOA,WAAW,CAAC,CAAD,CAAlB;AACH;AACJ;;AACD,SAAOJ,SAAS,CAACI,WAAD,EAAcI,SAAd,CAAT,CAAkCC,IAAlC,CAAuC,IAAIC,YAAJ,EAAvC,CAAP;AACH;;AACD,IAAIA,YAAY,GAAG,aAAe,YAAY;AAC1C,WAASA,YAAT,GAAwB,CACvB;;AACDA,cAAY,CAACC,SAAb,CAAuBC,IAAvB,GAA8B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8B;AACxD,WAAOA,MAAM,CAACC,SAAP,CAAiB,IAAIC,cAAJ,CAAmBH,UAAnB,CAAjB,CAAP;AACH,GAFD;;AAGA,SAAOH,YAAP;AACH,CAPiC,EAAlC;;AAQA,SAASA,YAAT;;AACA,IAAIM,cAAc,GAAG,aAAe,UAAUC,MAAV,EAAkB;AAClDnB,SAAO,CAACoB,SAAR,CAAkBF,cAAlB,EAAkCC,MAAlC;;AACA,WAASD,cAAT,CAAwBG,WAAxB,EAAqC;AACjC,QAAIC,KAAK,GAAGH,MAAM,CAACL,IAAP,CAAY,IAAZ,EAAkBO,WAAlB,KAAkC,IAA9C;;AACAC,SAAK,CAACC,QAAN,GAAiB,KAAjB;AACAD,SAAK,CAAChB,WAAN,GAAoB,EAApB;AACAgB,SAAK,CAACE,aAAN,GAAsB,EAAtB;AACA,WAAOF,KAAP;AACH;;AACDJ,gBAAc,CAACL,SAAf,CAAyBY,KAAzB,GAAiC,UAAUC,UAAV,EAAsB;AACnD,SAAKpB,WAAL,CAAiBqB,IAAjB,CAAsBD,UAAtB;AACH,GAFD;;AAGAR,gBAAc,CAACL,SAAf,CAAyBe,SAAzB,GAAqC,YAAY;AAC7C,QAAItB,WAAW,GAAG,KAAKA,WAAvB;AACA,QAAIuB,GAAG,GAAGvB,WAAW,CAACG,MAAtB;;AACA,QAAIoB,GAAG,KAAK,CAAZ,EAAe;AACX,WAAKR,WAAL,CAAiBS,QAAjB;AACH,KAFD,MAGK;AACD,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAJ,IAAW,CAAC,KAAKN,QAAjC,EAA2CQ,CAAC,EAA5C,EAAgD;AAC5C,YAAIL,UAAU,GAAGpB,WAAW,CAACyB,CAAD,CAA5B;AACA,YAAIC,YAAY,GAAG5B,iBAAiB,CAAC,IAAD,EAAOsB,UAAP,EAAmBhB,SAAnB,EAA8BqB,CAA9B,CAApC;;AACA,YAAI,KAAKP,aAAT,EAAwB;AACpB,eAAKA,aAAL,CAAmBG,IAAnB,CAAwBK,YAAxB;AACH;;AACD,aAAKC,GAAL,CAASD,YAAT;AACH;;AACD,WAAK1B,WAAL,GAAmB,IAAnB;AACH;AACJ,GAjBD;;AAkBAY,gBAAc,CAACL,SAAf,CAAyBqB,UAAzB,GAAsC,UAAUC,WAAV,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+C;AACjF,QAAI,CAAC,KAAKd,QAAV,EAAoB;AAChB,WAAKA,QAAL,GAAgB,IAAhB;;AACA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKP,aAAL,CAAmBf,MAAvC,EAA+CsB,CAAC,EAAhD,EAAoD;AAChD,YAAIA,CAAC,KAAKM,UAAV,EAAsB;AAClB,cAAIL,YAAY,GAAG,KAAKR,aAAL,CAAmBO,CAAnB,CAAnB;AACAC,sBAAY,CAACM,WAAb;AACA,eAAKC,MAAL,CAAYP,YAAZ;AACH;AACJ;;AACD,WAAKR,aAAL,GAAqB,IAArB;AACH;;AACD,SAAKH,WAAL,CAAiBmB,IAAjB,CAAsBJ,UAAtB;AACH,GAbD;;AAcA,SAAOlB,cAAP;AACH,CA7CmC,CA6ClCf,eA7CkC,CAApC;;AA8CA,SAASe,cAAT","names":["tslib_1","isArray","fromArray","OuterSubscriber","subscribeToResult","race","observables","_i","arguments","length","undefined","lift","RaceOperator","prototype","call","subscriber","source","subscribe","RaceSubscriber","_super","__extends","destination","_this","hasFirst","subscriptions","_next","observable","push","_complete","len","complete","i","subscription","add","notifyNext","_outerValue","innerValue","outerIndex","unsubscribe","remove","next"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/observable/race.js"],"sourcesContent":["/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nvar RaceOperator = /*@__PURE__*/ (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexport { RaceOperator };\nvar RaceSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasFirst = false;\n        _this.observables = [];\n        _this.subscriptions = [];\n        return _this;\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult(this, observable, undefined, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber));\nexport { RaceSubscriber };\n//# sourceMappingURL=race.js.map\n"]},"metadata":{},"sourceType":"module"}