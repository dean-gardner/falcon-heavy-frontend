{"ast":null,"code":"/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\nvar Observable = /*@__PURE__*/function () {\n  function Observable(subscribe) {\n    this._isScalar = false;\n\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  Observable.prototype.lift = function (operator) {\n    var observable = new Observable();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  };\n\n  Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n    var operator = this.operator;\n    var sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(this.source || config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  };\n\n  Observable.prototype._trySubscribe = function (sink) {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  };\n\n  Observable.prototype.forEach = function (next, promiseCtor) {\n    var _this = this;\n\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var subscription;\n      subscription = _this.subscribe(function (value) {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    });\n  };\n\n  Observable.prototype._subscribe = function (subscriber) {\n    var source = this.source;\n    return source && source.subscribe(subscriber);\n  };\n\n  Observable.prototype[Symbol_observable] = function () {\n    return this;\n  };\n\n  Observable.prototype.pipe = function () {\n    var operations = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operations[_i] = arguments[_i];\n    }\n\n    if (operations.length === 0) {\n      return this;\n    }\n\n    return pipeFromArray(operations)(this);\n  };\n\n  Observable.prototype.toPromise = function (promiseCtor) {\n    var _this = this;\n\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var value;\n\n      _this.subscribe(function (x) {\n        return value = x;\n      }, function (err) {\n        return reject(err);\n      }, function () {\n        return resolve(value);\n      });\n    });\n  };\n\n  Observable.create = function (subscribe) {\n    return new Observable(subscribe);\n  };\n\n  return Observable;\n}();\n\nexport { Observable };\n\nfunction getPromiseCtor(promiseCtor) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}","map":{"version":3,"mappings":"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","names":["canReportError","toSubscriber","observable","Symbol_observable","pipeFromArray","config","Observable","subscribe","_isScalar","_subscribe","prototype","lift","operator","source","observerOrNext","error","complete","sink","add","call","useDeprecatedSynchronousErrorHandling","syncErrorThrowable","_trySubscribe","syncErrorThrown","syncErrorValue","err","console","warn","forEach","next","promiseCtor","_this","getPromiseCtor","resolve","reject","subscription","value","unsubscribe","subscriber","pipe","operations","_i","arguments","length","toPromise","x","create","Promise","Error"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/rxjs/_esm5/internal/Observable.js"],"sourcesContent":["/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n"]},"metadata":{},"sourceType":"module"}