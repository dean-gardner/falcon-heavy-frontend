{"ast":null,"code":"import * as React from \"react\";\nimport { isBrowser } from \"@chakra-ui/utils\";\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nexport function useMediaQuery(query) {\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in window;\n  var [matches, setMatches] = React.useState(queries.map(query => isSupported ? !!window.matchMedia(query).matches : false));\n  useSafeLayoutEffect(() => {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(query => window.matchMedia(query));\n    var listenerList = mediaQueryList.map((mediaQuery, index) => {\n      var listener = () => setMatches(prev => prev.map((prevValue, idx) => index === idx ? !!mediaQuery.matches : prevValue));\n\n      mediaQuery.addListener(listener);\n      return listener;\n    });\n    return () => {\n      mediaQueryList.forEach((mediaQuery, index) => {\n        mediaQuery.removeListener(listenerList[index]);\n      });\n    };\n  }, [query]);\n  return matches;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,IAAIC,mBAAmB,GAAGD,SAAS,GAAGD,KAAK,CAACG,eAAT,GAA2BH,KAAK,CAACI,SAApE;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACnC,MAAIC,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAA7C;AACA,MAAII,WAAW,GAAGT,SAAS,IAAI,gBAAgBU,MAA/C;AACA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBb,KAAK,CAACc,QAAN,CAAeP,OAAO,CAACQ,GAAR,CAAYT,KAAK,IAAII,WAAW,GAAG,CAAC,CAACC,MAAM,CAACK,UAAP,CAAkBV,KAAlB,EAAyBM,OAA9B,GAAwC,KAAxE,CAAf,CAA5B;AACAV,qBAAmB,CAAC,MAAM;AACxB,QAAI,CAACQ,WAAL,EAAkB,OAAOO,SAAP;AAClB,QAAIC,cAAc,GAAGX,OAAO,CAACQ,GAAR,CAAYT,KAAK,IAAIK,MAAM,CAACK,UAAP,CAAkBV,KAAlB,CAArB,CAArB;AACA,QAAIa,YAAY,GAAGD,cAAc,CAACH,GAAf,CAAmB,CAACK,UAAD,EAAaC,KAAb,KAAuB;AAC3D,UAAIC,QAAQ,GAAG,MAAMT,UAAU,CAACU,IAAI,IAAIA,IAAI,CAACR,GAAL,CAAS,CAACS,SAAD,EAAYC,GAAZ,KAAoBJ,KAAK,KAAKI,GAAV,GAAgB,CAAC,CAACL,UAAU,CAACR,OAA7B,GAAuCY,SAApE,CAAT,CAA/B;;AAEAJ,gBAAU,CAACM,WAAX,CAAuBJ,QAAvB;AACA,aAAOA,QAAP;AACD,KALkB,CAAnB;AAMA,WAAO,MAAM;AACXJ,oBAAc,CAACS,OAAf,CAAuB,CAACP,UAAD,EAAaC,KAAb,KAAuB;AAC5CD,kBAAU,CAACQ,cAAX,CAA0BT,YAAY,CAACE,KAAD,CAAtC;AACD,OAFD;AAGD,KAJD;AAKD,GAdkB,EAchB,CAACf,KAAD,CAdgB,CAAnB;AAeA,SAAOM,OAAP;AACD","names":["React","isBrowser","useSafeLayoutEffect","useLayoutEffect","useEffect","useMediaQuery","query","queries","Array","isArray","isSupported","window","matches","setMatches","useState","map","matchMedia","undefined","mediaQueryList","listenerList","mediaQuery","index","listener","prev","prevValue","idx","addListener","forEach","removeListener"],"sources":["D:/work/projects/plenty/falcon-heavy-frontend/node_modules/@chakra-ui/media-query/dist/esm/use-media-query.js"],"sourcesContent":["import * as React from \"react\";\nimport { isBrowser } from \"@chakra-ui/utils\";\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nexport function useMediaQuery(query) {\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in window;\n  var [matches, setMatches] = React.useState(queries.map(query => isSupported ? !!window.matchMedia(query).matches : false));\n  useSafeLayoutEffect(() => {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(query => window.matchMedia(query));\n    var listenerList = mediaQueryList.map((mediaQuery, index) => {\n      var listener = () => setMatches(prev => prev.map((prevValue, idx) => index === idx ? !!mediaQuery.matches : prevValue));\n\n      mediaQuery.addListener(listener);\n      return listener;\n    });\n    return () => {\n      mediaQueryList.forEach((mediaQuery, index) => {\n        mediaQuery.removeListener(listenerList[index]);\n      });\n    };\n  }, [query]);\n  return matches;\n}\n//# sourceMappingURL=use-media-query.js.map"]},"metadata":{},"sourceType":"module"}