/// <reference types="node" />
import * as sodium from 'libsodium-wrappers';
export declare function toHex(value: any): string;
export declare function getHexHash(key: string | Buffer | Uint8Array): Promise<string>;
export declare function getKeypairFromSeed(seed: string): Promise<sodium.KeyPair>;
export declare function encryptCryptoboxPayload(message: string, sharedKey: Uint8Array): Promise<string>;
export declare function decryptCryptoboxPayload(payload: Uint8Array, sharedKey: Uint8Array): Promise<string>;
export declare function sealCryptobox(payload: string | Buffer, publicKey: Uint8Array): Promise<string>;
export declare function openCryptobox(encryptedPayload: string | Buffer, publicKey: Uint8Array, privateKey: Uint8Array): Promise<string>;
export declare function getAddressFromPublicKey(publicKey: string): Promise<string>;
export declare function recipientString(recipientHash: string, relayServer: string): string;
