"use strict";
// eslint-disable-next-line spaced-comment
/// <reference types="chrome"/>
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChromeMessageTransport = void 0;
var Logger_1 = require("../utils/Logger");
var __1 = require("..");
var logger = new Logger_1.Logger('ChromeMessageTransport');
var ChromeMessageTransport = /** @class */ (function (_super) {
    __extends(ChromeMessageTransport, _super);
    function ChromeMessageTransport(name) {
        var _this = _super.call(this, name) || this;
        _this.type = __1.TransportType.CHROME_MESSAGE;
        _this.init().catch(function (error) { return console.error(error); });
        return _this;
    }
    ChromeMessageTransport.isAvailable = function () {
        return __awaiter(this, void 0, void 0, function () {
            var isAvailable;
            return __generator(this, function (_a) {
                isAvailable = !!(window.chrome && chrome.runtime && chrome.runtime.id);
                return [2 /*return*/, Promise.resolve(isAvailable)];
            });
        });
    };
    ChromeMessageTransport.prototype.send = function (payload) {
        return __awaiter(this, void 0, void 0, function () {
            var message;
            return __generator(this, function (_a) {
                message = {
                    target: __1.ExtensionMessageTarget.PAGE,
                    payload: payload
                };
                chrome.runtime.sendMessage(message, function (data) {
                    logger.log('send', 'got response', data);
                });
                return [2 /*return*/];
            });
        });
    };
    ChromeMessageTransport.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                chrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {
                    logger.log('init', 'receiving chrome message', message, sender);
                    var connectionContext = {
                        origin: __1.Origin.WEBSITE,
                        id: sender.url ? sender.url : '',
                        extras: { sender: sender, sendResponse: sendResponse }
                    };
                    _this.notifyListeners(message, connectionContext).catch(function (error) { return logger.error(error); });
                    // return true from the event listener to indicate you wish to send a response asynchronously
                    // (this will keep the message channel open to the other end until sendResponse is called).
                    return true;
                });
                return [2 /*return*/];
            });
        });
    };
    return ChromeMessageTransport;
}(__1.Transport));
exports.ChromeMessageTransport = ChromeMessageTransport;
//# sourceMappingURL=ChromeMessageTransport.js.map