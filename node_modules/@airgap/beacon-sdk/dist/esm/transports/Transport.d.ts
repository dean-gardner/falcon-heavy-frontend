import { ConnectionContext } from '../types/ConnectionContext';
import { TransportType, TransportStatus } from '..';
export declare abstract class Transport {
    readonly type: TransportType;
    protected readonly name: string;
    protected _isConnected: TransportStatus;
    private listeners;
    get connectionStatus(): TransportStatus;
    constructor(name: string);
    static isAvailable(): Promise<boolean>;
    connect(): Promise<void>;
    reconnect(): Promise<void>;
    send(message: string, recipient?: string): Promise<void>;
    addListener(listener: (message: unknown, connectionInfo: ConnectionContext) => void): Promise<void>;
    removeListener(listener: (message: string, connectionInfo: ConnectionContext) => void): Promise<void>;
    protected notifyListeners(message: unknown, connectionInfo: ConnectionContext): Promise<void>;
}
