var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { NetworkType } from '..';
export const getAccountBlockExplorerLinkForNetwork = (network, address) => __awaiter(void 0, void 0, void 0, function* () {
    const urls = {
        [NetworkType.MAINNET]: 'https://tezblock.io/account/',
        [NetworkType.CARTHAGENET]: 'https://carthagenet.tezblock.io/account/',
        [NetworkType.DELPHINET]: 'https://delphinet.tezblock.io/account/',
        [NetworkType.CUSTOM]: 'https://delphinet.tezblock.io/account/'
    };
    const url = urls[network ? network.type : NetworkType.MAINNET];
    return `${url}${address}`;
});
export const getTransactionBlockExplorerLinkForNetwork = (network, transactionHash) => __awaiter(void 0, void 0, void 0, function* () {
    const urls = {
        [NetworkType.MAINNET]: 'https://tezblock.io/transaction/',
        [NetworkType.CARTHAGENET]: 'https://carthagenet.tezblock.io/transaction/',
        [NetworkType.DELPHINET]: 'https://delphinet.tezblock.io/transaction/',
        [NetworkType.CUSTOM]: 'https://delphinet.tezblock.io/transaction/'
    };
    const url = urls[network ? network.type : NetworkType.MAINNET];
    return `${url}${transactionHash}`;
});
//# sourceMappingURL=block-explorer.js.map