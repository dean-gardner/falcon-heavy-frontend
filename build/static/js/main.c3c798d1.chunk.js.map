{"version":3,"sources":["ColorModeSwitcher.tsx","config/index.js","hooks/useBeacon.ts","components/ContractAddressInput.tsx","hooks/usePendingPromise.ts","components/Preloader.tsx","components/ContractStorageInfo.tsx","utils.ts","components/ContractBalanceInfo.tsx","components/ContractTransferForm.tsx","components/Dashboard.tsx","components/Bonds/hooks.ts","components/BondsList/BondItem.tsx","components/BondsList/BondsModal.tsx","components/BondsList/BondsList.tsx","components/Bonds/BuyBond.tsx","components/Layout/Layout.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","aria-label","NETWORK_ADDRESS","Tezos","TezosToolkit","wallet","BeaconWallet","name","useBeacon","useState","pkh","setUserPkh","connect","useCallback","a","requestPermissions","scopes","PermissionScope","OPERATION_REQUEST","SIGN","THRESHOLD","getPKH","_pkh","disconnect","client","removeAllAccounts","setWalletProvider","ContractAddressInput","w","align","marginBottom","children","AtSign","usePendingPromise","fetcher","transformer","fetching","setFetching","error","setError","data","setStorage","useEffect","isUnmounted","undefined","result","toString","Preloader","thickness","speed","emptyColor","alignSelf","ContractStorageInfo","contractAddress","contract","at","storage","JSON","stringify","readOnly","defaultValue","isInvalid","validateContractAddress","addr","validateAddress","validateTezosAddress","startsWith","ContractBalanceInfo","views","getBalance","read","catch","balance","ContractTransferForm","amount","setAmount","to","setTo","handleClick","methods","transfer","Number","send","op","confirmation","alert","console","mx","d","placeholder","value","onChange","e","target","width","type","AccountInfo","Dashboard","setContractAddress","contractValid","setContractValid","className","options","network","BondItem","setActiveItem","setModalActive","item","log","pair1_token_code","pair2_token_code","market_price_in_usd","ROI","vesting_days_period","BondModal","active","setActive","stopPropagation","BondsList","modalActive","keys","setKeys","activeItem","tokenAmount","setTokenAmount","getKeys","bigMapId","axios","get","headers","res","then","c","bigmapId","bonds_marketplace","id","keysValues","map","parseInt","key","for","max_payout","total_bonds_purchased_price_usd","BuyBond","buyBond","myAddress","bondPrice","LpToken","LpTokenAmount","Slippage","getActiveAccount","order","from","useBonds","href","Layout","rel","integrity","src","height","alt","path","element","App","theme","minH","p","justifySelf","spacing","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c3c798d1.chunk.js","sourcesContent":["import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","// const {\n//   NETWORK_ADDRESS,\n// } = process.env;\n\n// https://mainnet-tezos.giganode.io\n//https://delphinet-tezos.giganode.io\n//https://hangzhounet.api.tez.ie\n//https://testnet-tezos.giganode.io\nconst NETWORK_ADDRESS = 'https://hangzhounet.api.tez.ie/';\n\n\n//'mainnet' | 'granadanet' | 'hangzhounet' | 'custom'\nconst NETWORK_TYPE = 'hangzhounet';\n\nconst BOND_CONTRACT_ADDRESS = 'KT1V9gTAvhuXgb7egVjn6BtCfU4BMtjfvWfR';\nconst LP_TOKEN_CONTRACT_ADDRESS =  \"KT1GgNMoJhfeWUoqh1RJaFXE1H66tja7L1eU\";\nconst TREASURY_CONTRACT_ADDRESS =  \"KT1VX4MV7RXzBq1bpnxfSG8V2sTtpT5N2TCh\";\nconst REWARD_TOKEN_CONTRACT_ADDRESS =  \"KT1GxEuEZyPe2ba4aVVxPWQDzqEhi62ZruxU\";\nconst LP_TOKEN = \"KT1GgNMoJhfeWUoqh1RJaFXE1H66tja7L1eU\";\n\nexport {\n  NETWORK_ADDRESS,\n  BOND_CONTRACT_ADDRESS,\n  NETWORK_TYPE,\n  LP_TOKEN_CONTRACT_ADDRESS,\n  TREASURY_CONTRACT_ADDRESS,\n  REWARD_TOKEN_CONTRACT_ADDRESS,\n  LP_TOKEN\n}; ","import { useCallback, useState } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\n\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { NetworkType, PermissionScope } from \"@airgap/beacon-sdk\";\n\nimport {NETWORK_ADDRESS, BOND_CONTRACT_ADDRESS, NETWORK_TYPE} from '../config/index';\n\nconst options = {\n  name: \"Plenty Bonds Marketplace: Falcon Heavy\",\n  // iconUrl: \"https://tezostaquito.io/img/favicon.png\",\n  // eventHandlers: {\n  //   PERMISSION_REQUEST_SUCCESS: {\n  //     handler: async (data: any) => {\n  //       console.log(\"permission data\", data);\n  //     },\n  //   },\n  // },\n};\n\nclass LambdaViewSigner {\n  async publicKeyHash() {\n    return \"tz1fVQangAfb9J1hRRMP2bSB6LvASD6KpY8A\";\n  }\n\n  async publicKey() {\n    return \"edpkvWbk81uh1DEvdWKR4g1bjyTGhdu1mDvznPUFE2zDwNsLXrEb9K\";\n  }\n\n  async secretKey(): Promise<string> {\n    throw new Error(\"Secret key cannot be exposed\");\n  }\n\n  async sign(): Promise<{\n    bytes: string;\n    sig: string;\n    prefixSig: string;\n    sbytes: string;\n  }> {\n    throw new Error(\"Cannot sign\");\n  }\n}\n\nconst Tezos = new TezosToolkit(NETWORK_ADDRESS);\n\nconst wallet = new BeaconWallet(options);\n\n\nTezos.setWalletProvider(wallet);\n//Tezos.setSignerProvider(new LambdaViewSigner());\n\nexport default function useBeacon() {\n  const [pkh, setUserPkh] = useState<string>();\n\n  const connect = useCallback(async () => {\n    await wallet.requestPermissions({\n      scopes: [\n             PermissionScope.OPERATION_REQUEST,\n             PermissionScope.SIGN,\n             PermissionScope.THRESHOLD,\n           ]\n    });\n\n    // {\n    //   network: { type: NetworkType.DELPHINET },\n    //   scopes: [\n    //     PermissionScope.OPERATION_REQUEST,\n    //     PermissionScope.SIGN,\n    //     PermissionScope.THRESHOLD,\n    //   ],\n    // }\n\n    const _pkh = await wallet.getPKH();\n    setUserPkh(_pkh);\n  }, []);\n\n const disconnect = useCallback(async() => {\n    await wallet.client.removeAllAccounts();\n }, []);\n\n\n  return { connect, disconnect, pkh, Tezos };\n}\n","import { InputProps, Box, Text, InputGroup, InputLeftElement, Input } from '@chakra-ui/react';\nimport { AtSignIcon } from '@chakra-ui/icons';\nimport React from 'react';\n\nexport const ContractAddressInput: React.FC<InputProps> = (props) => (\n  <Box w=\"full\">\n    <Text size=\"sm\" align=\"left\" marginBottom=\"2\">Contract address:</Text>\n    <InputGroup>\n      <InputLeftElement children={<AtSignIcon />} />\n      <Input {...props} />\n    </InputGroup>\n  </Box>\n)","import { useState, useEffect } from \"react\";\n\nexport const usePendingPromise = <T extends unknown>(\n  fetcher: () => Promise<T>,\n  transformer?: (result: T) => any\n) => {\n  const [fetching, setFetching] = useState<boolean>();\n  const [error, setError] = useState<string>();\n  const [data, setStorage] = useState<string>();\n\n  useEffect(() => {\n    let isUnmounted = false;\n    (async () => {\n      try {\n        setFetching(true);\n        setError(undefined);\n\n        const result = await fetcher();\n        !isUnmounted && setStorage(transformer ? transformer(result) : result);\n      } catch (e) {\n        !isUnmounted &&\n          setError(\n            \"Something went wrong while fetching storage: \" + e.toString()\n          );\n      } finally {\n        !isUnmounted && setFetching(false);\n      }\n    })();\n\n    return () => {\n      isUnmounted = true;\n    };\n  }, [fetcher, transformer]);\n\n  return { fetching, error, data };\n};\n","import React from \"react\";\nimport { Spinner, SpinnerProps } from \"@chakra-ui/react\";\n\nexport const Preloader: React.FC<SpinnerProps> = (props) => (\n  <Spinner\n    thickness=\"4px\"\n    speed=\"0.65s\"\n    emptyColor=\"gray.200\"\n    color=\"blue.500\"\n    size=\"xl\"\n    alignSelf=\"center\"\n    {...props}\n  />\n);\n","import React, { useCallback } from \"react\";\nimport { Box, Textarea, Text } from \"@chakra-ui/react\";\nimport useBeacon from \"../hooks/useBeacon\";\nimport { usePendingPromise } from \"../hooks/usePendingPromise\";\nimport { Preloader } from \"./Preloader\";\n\nexport const ContractStorageInfo: React.FC<{ contractAddress: string }> = ({\n  contractAddress,\n}) => {\n  const { Tezos } = useBeacon();\n\n  const fetcher = useCallback(\n    async () => (await Tezos.contract.at(contractAddress)).storage(),\n    [Tezos.contract, contractAddress]\n  );\n\n  const { fetching, data: storage, error } = usePendingPromise(\n    fetcher,\n    JSON.stringify\n  );\n\n  return !fetching && (storage || error) ? (\n    <Box w=\"full\">\n      <Text size=\"sm\" align=\"left\" marginBottom=\"2\">\n        Contract storage:\n      </Text>\n      <Textarea readOnly defaultValue={error || storage} isInvalid={!!error} />\n    </Box>\n  ) : (\n    <Preloader />\n  );\n};\n","import { validateAddress } from \"@taquito/utils\";\n\nexport const validateTezosAddress = (addr: string) =>\n  validateAddress(addr) === 3;\n\nexport const validateContractAddress = (addr: string) =>\n  validateTezosAddress(addr) && addr.startsWith(\"KT1\");\n","import { Box, Textarea, Text } from \"@chakra-ui/react\";\nimport React, { useCallback } from \"react\";\nimport useBeacon from \"../hooks/useBeacon\";\nimport { usePendingPromise } from \"../hooks/usePendingPromise\";\nimport { Preloader } from \"./Preloader\";\n\nexport const ContractBalanceInfo: React.FC<{\n  contractAddress: string;\n  pkh: string;\n}> = ({ contractAddress, pkh }) => {\n  const { Tezos } = useBeacon();\n  const fetcher = useCallback(async () => {\n    const contract = await Tezos.contract.at(contractAddress);\n    return contract.views\n      .getBalance(pkh)\n      .read()\n      .catch(() => 0);\n  }, [contractAddress, pkh, Tezos.contract]);\n\n  const { fetching, data: balance, error } = usePendingPromise(fetcher);\n  return !fetching && (balance || error) ? (\n    <Box w=\"full\">\n      <Text size=\"sm\" align=\"left\" marginBottom=\"2\">\n        Balance for your account:\n      </Text>\n      <Textarea readOnly defaultValue={error || balance} isInvalid={!!error} />\n    </Box>\n  ) : (\n    <Preloader />\n  );\n};\n","import {\n  Box,\n  Button,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Text,\n} from \"@chakra-ui/react\";\nimport React, { useCallback, useState } from \"react\";\nimport useBeacon from \"../hooks/useBeacon\";\nimport { Preloader } from \"./Preloader\";\n\nexport const ContractTransferForm: React.FC<{\n  contractAddress: string;\n  pkh: string;\n}> = ({ contractAddress, pkh }) => {\n  const { Tezos } = useBeacon();\n  const [amount, setAmount] = useState(\"10\");\n  const [to, setTo] = useState(\"\");\n  const [fetching, setFetching] = useState(false);\n\n  const handleClick = useCallback(async () => {\n    setFetching(true);\n    try {\n      const contract = await Tezos.wallet.at(contractAddress);\n      const op = await contract.methods\n        .transfer(pkh, to, Number(amount))\n        .send();\n\n      await op.confirmation(1);\n\n      alert(\"One confirmation has been received from the network!\");\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setFetching(false);\n    }\n  }, [contractAddress, pkh, amount, to, setFetching, Tezos.wallet]);\n\n  return (\n    <Box w=\"full\">\n      <Text size=\"sm\" align=\"left\" marginBottom=\"2\">\n        Transfer:\n      </Text>\n      {!fetching ? (\n        <>\n          <Input\n            placeholder=\"tz1QLY8gCFzrezkqkQpHAHBRPvgtV9Z1KuML\"\n            value={to}\n            onChange={(e) => setTo(e.target.value)}\n            marginBottom=\"4\"\n          />\n          <InputGroup>\n            <InputRightElement\n              width=\"7rem\"\n              children={\n                <Button size=\"sm\" onClick={handleClick}>\n                  Transfer\n                </Button>\n              }\n            />\n            <Input\n              type=\"number\"\n              onChange={(e) => setAmount(e.target.value)}\n              value={amount}\n            />\n          </InputGroup>\n        </>\n      ) : (\n        <Preloader mx=\"auto\" d=\"block\" />\n      )}\n    </Box>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Button, VStack, Text, Code, Divider } from \"@chakra-ui/react\";\n\nimport useBeacon from \"../hooks/useBeacon\";\nimport { ContractAddressInput } from \"./ContractAddressInput\";\nimport { ContractStorageInfo } from \"./ContractStorageInfo\";\nimport { validateContractAddress } from \"../utils\";\nimport { ContractBalanceInfo } from \"./ContractBalanceInfo\";\nimport { ContractTransferForm } from \"./ContractTransferForm\";\n\nconst AccountInfo: React.FC<{\n  pkh: string;\n}> = ({ pkh }) => (\n  <Text>\n    Your account: <Code>{pkh}</Code>\n  </Text>\n);\n\nexport function Dashboard() {\n  const { connect, pkh, disconnect } = useBeacon();\n  const [contractAddress, setContractAddress] = useState<string>(\n    \"KT19psPK1PZNMkaq8TuU1D77u7ipyFVQ3BmE\"\n  );\n  const [contractValid, setContractValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    setContractValid(validateContractAddress(contractAddress));\n  }, [contractAddress]);\n\n  \n  return (\n    <div className=\"text-center\">\n      {!pkh ? (\n        <Button className=\"btn btn-primary submit-btn\" onClick={connect}>\n          Connect wallet\n        </Button>\n      ) : (\n        <>\n          <Button className=\"btn btn-primary submit-btn\" variant=\"outline\" onClick={disconnect}>\n            Disconnect wallet\n          </Button>\n\n          <AccountInfo pkh={pkh} />\n          <Divider />\n          <ContractAddressInput\n            value={contractAddress}\n            onChange={(e) => setContractAddress(e.target.value)}\n            isInvalid={!contractValid}\n          />\n          {contractValid && contractAddress && (\n            <>\n              <ContractStorageInfo contractAddress={contractAddress} />\n              <ContractBalanceInfo contractAddress={contractAddress} pkh={pkh} />\n              <ContractTransferForm contractAddress={contractAddress} pkh={pkh} />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","import { useCallback, useState } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\n\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { NetworkType, PermissionScope } from \"@airgap/beacon-sdk\";\n  \n  import {NETWORK_ADDRESS, TREASURY_CONTRACT_ADDRESS, BOND_CONTRACT_ADDRESS, NETWORK_TYPE, LP_TOKEN_CONTRACT_ADDRESS, LP_TOKEN}\n   from '../../config/index';\n\nconst options = {\n  name: \"Plenty Bonds Marketplace: Falcon Heavy\",\n  network: {\n    type: NETWORK_TYPE,\n  }\n};\n\nexport default function useBonds() {\n  let myAddress: string | undefined;\n\n  const buyBond = useCallback(async () => {\n      // alert('Waiting for back-end');\n      \n      const bondPrice = 1;\n      const LpToken = LP_TOKEN;\n      const LpTokenAmount = 1000;\n      const Slippage = 0.5;\n\n      const Tezos = new TezosToolkit(NETWORK_ADDRESS);\n      const wallet = new BeaconWallet(options);\n\n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount && false) {\n\n        console.log(\"Already connected:\", activeAccount.address);\n        myAddress = activeAccount.address;\n        //const permissions = await wallet.client.requestPermissions(options);\n\n      } else {\n        await wallet.requestPermissions(options);\n        myAddress = await wallet.getPKH();\n        console.log(\"New connection:\", myAddress);\n      }\n\n      Tezos.setWalletProvider(wallet);\n\n      // Tezos.wallet.at(LP_TOKEN_CONTRACT_ADDRESS).then(contract => {\n      //   return contract.methods.approve(TREASURY_CONTRACT_ADDRESS, LpTokenAmount).send({from: myAddress});\n      // } );\n\n      Tezos.wallet.at(BOND_CONTRACT_ADDRESS).then(contract => {\n        // bond_price_requested_in_usd: bondPrice, lp_token : LpToken, \n        //   lp_token_amount: LpTokenAmount, slippage: Slippage\n        return contract.methods.order(bondPrice, LpTokenAmount, LpToken, Slippage).send({from: myAddress});\n          } );\n\n\n      // const batch = await Tezos.wallet.batch()\n      //   .withContractCall(contract.methods.interact('defaul'))\n      //   .withContractCall(contract.methods.wait([['unit']]));\n\n      // const batchOp = await batch.send();\n      // console.log('Operation hash:', batchOp.hash);\n      // await batchOp.confirmation();\n  }, []);\n\n\n\n  return { buyBond };\n}\n","import React, { useEffect, useState } from \"react\";\nimport './BondItem.css';\n\n\n\n\nexport function BondItem({setActiveItem,setModalActive,item}) {\n\n    console.log('item',item)\n    return (\n        <tr>\n            <td>{item.icon}</td>\n            <td>{item.pair1_token_code} {item.pair2_token_code}</td>\n            <td>{item.market_price_in_usd}</td>\n            <td>{item.ROI}</td>\n            <td>{item.vesting_days_period}</td>\n            <td><button onClick={()=>{\n                setActiveItem(item);\n                setModalActive(true);\n                }} \n                className=\"bond_btn\">Bond</button></td>\n        </tr>\n               )\n\n}","import React, { useEffect, useState } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport './BondsModal.css';\n\n\n\nexport function BondModal({active,setActive,children}) {\n    return (\n       <div className={active ? 'modal active' : 'modal'} onClick={()=> setActive(false)}>\n           <div className={active ? 'modal__content active' : 'modal__content'} onClick={e => e.stopPropagation()}>\n            {children}\n           </div>\n       </div>\n               )\n\n}","import React,{useEffect,useState} from \"react\";\nimport axios from 'axios';\nimport { BondItem } from \"./BondItem\";\nimport {TezosToolkit} from '@taquito/taquito'\nimport './BondsList.css';\nimport {BondModal} from './BondsModal';\n\n\nexport function  BondsList() {\n    const [modalActive,setModalActive]  = useState(false);\n    const [keys,setKeys] = useState([]);\n    const [activeItem,setActiveItem] = useState({} as any);\n    const [tokenAmount, setTokenAmount] = useState(0);\n    const getKeys = async (bigMapId : any = 153491) => {\n       // const endPoint = 'https://api.hangzhou.tzstats.com';\n        const res = await axios.\n        get(`https://api.hangzhou2net.tzkt.io/v1/bigmaps/${bigMapId}/keys`, {\n    headers: {\n        'Access-Control-Allow-Origin': '*',\n    }\n      })\n     return res.data\n    }\n    \n    useEffect(() => {\n      //  getKeys()\n            const tezos = new TezosToolkit('https://hangzhounet.api.tez.ie');\n           tezos.contract.at('KT1AfWJCfbmpGqdSB8rfRCR4Jb1VsBLmhGCV').then(c => {\n               c.storage().then((storage: any) => {\n                const bigmapId = storage.bonds_marketplace.id.c[0]; \n                 console.log('bigmapId',bigmapId)\n                getKeys(bigmapId).then((keys) => {\n                    setKeys(keys)\n                    console.log('keys',keys);\n                    console.log('value',keys[0].value)\n                    const keysValues = keys.map((item: any) => (parseInt(item.key)) );\n                    console.log('keysValues')\n                    console.log('storage.bonds_marketplace',storage.bonds_marketplace.get(keysValues[0]));\n                    console.log('keysValues[0]',keysValues)\n                })\n               })\n           })\n    },[])\n\n\n    return (\n        <>\n        <table>\n        <tr>\n    <th>Item icons</th>\n    <th>Item name</th>\n    <th>Market price USD</th>\n    <th>ROI</th>\n    <th>Duration</th>\n            </tr>\n        { keys.map((key) =>(\n        <BondItem setActiveItem={setActiveItem} setModalActive={setModalActive} item={key.value}/>\n    ))}\n            </table>\n            <BondModal  active={modalActive} setActive={setModalActive}>\n                {console.log('active Item',activeItem)}\n                <div>\n                    <div>TOKENS {activeItem.pair1_token_code} {activeItem.pair2_token_code}</div>\n                    <label className=\"token__label\" for='amount'>Token amount</label>\n                    <input type='number' id='amount' onChange={\n                        (e)=>{\n                            setTokenAmount(e.target.value)\n                        }\n                        } value={tokenAmount} type='number'></input>\n                        {tokenAmount > parseInt(activeItem.max_payout) &&<span>Error</span>}\n                    <div>ROI {tokenAmount * parseInt(activeItem.ROI)}</div>\n                    <div>VESTING period {activeItem.vesting_days_period} months</div>\n                    <div>TBV {activeItem.total_bonds_purchased_price_usd}</div>\n                </div>\n                <div className=\"buttons\">\n                    <button className=\"modal__btn\">Confirm</button>\n                    <button className=\"modal__btn cancel__btn\" onClick={()=>setModalActive(false)}>Cancel</button>\n                </div>\n            </BondModal>\n            </>\n    )\n    \n}\n\n/* \n  При нажатии кнопки Бонд будет попап виндоу где будет Бонд прайс - инпут с к-вом токенов \n    модерация max_payout: \"100\"  чтоб это было  больше чем юзер получит как 110 процентов \n\n   и название токена  в паре \n    pair1_token_code: \"CO1\"\n    pair2_token_code: \"CO2\"\n\n  + Рои в процентах - сумма вознаграждения в зависимости от введеного значения в инпут\n  1 инпут - \n\n\n  --- LATER     рядом 2 поля -   к-во Пленти и к-во второго токена\n\n\n\n  Еще выводим Вестинг период (з сервера берем его)\n  Конфирм Баттон и Баттон Отмена\n  Значение TBV - Total Bonded Value  total_bonds_purchased_price_usd: \"1\"\n*/","import React, { useEffect, useState } from \"react\";\nimport { Button, Link, VStack, Text, Code, Divider } from \"@chakra-ui/react\";\nimport './BuyBond.css';\nimport useBonds from './hooks';\nimport { BondsList } from \"../BondsList/BondsList\";\n\nexport function BuyBond() {\n  const { buyBond } = useBonds();\n\n  return (\n    <>\n       <div className=\"content\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n\t\t\t\t\t\t<div className=\"crypto-exchange buy-form\">\n\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t<div className=\"card-title text-center\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"text-primary\">Bond: PLENTY-QUIPU LP</h4>\n\t\t\t\t\t\t\t\t</div>\n\n                <div>\n                <div className=\"row\">\n                      <div className=\"col-lg-6 text-center card-title\">\n                        <h4  className=\"text-primary\">Bond Price</h4>\n                        <h2 className=\"text-primary\">$3.03</h2>\n                      </div>\n                      <div className=\"col-lg-6 text-center card-title\">\n                        <h4  className=\"text-primary\">Market Price</h4>\n                        <h2 className=\"text-primary\">$3.01</h2>\n                      </div>\n                    </div>\n                    \n                </div>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n               \n\n\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-12 \">\n\t\t\t\t\t\t\t\t\t\t<div className=\"exchange-form\">\n\t\t\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-row \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-12 offset-lg-3\">\n                          <Button className=\"btn btn-primary btn-lg btn-block\" onClick={buyBond}>\n                            Buy\n                          </Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n                <BondsList />\n\n              <div className=\"row\">\n              <div className=\"col-lg-12 details-contatiner\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-6 \">Your Balance</div>\n                      <div className=\"col-lg-6 text-right\">0 PLENTY-QUIPU LP\n                        <div><a href='https://www.plentydefi.com/liquidity?tokenB=QUIPU' target=\"_blank\" className='gray-link'>Buy PLENTY-QUIPU LP token</a></div>\n                      </div>\n\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6 \">Duration</div>\n                      <div className=\"col-lg-6 text-right\">5 days</div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6 \">ROI</div>\n                      <div className=\"col-lg-6 text-right\">3%</div>\n                    </div>\n                    \n                  </div>\n              </div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n                    </div>\n                </div>\n            </div>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Dashboard } from \"../Dashboard\";\nimport {BuyBond} from \"../Bonds/BuyBond\";\n\nimport {\n  BrowserRouter as Router,\n  Routes ,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './Layout.css';\n\n\nexport function Layout() {\n\n  \n  return (\n    <>\n    <Router>\n       <link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\n  integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\n/>\n\n    <div className=\"main-wrapper\">\n      {/* Header */}\n      <div className=\"header\">\n        <div className=\"header-left\">\n          <a href=\"index.html\" className=\"logo\">\n            <img src=\"assets/img/logo.png\" width={35} height={35} alt=\"\" />{\" \"}\n            <span>Falcon Heavy</span>\n          </a>\n        </div>\n      </div>\n      {/* /Header */}\n\n      {/* Sidebar */}\n      <div className=\"sidebar\" id=\"sidebar\">\n        <div className=\"sidebar-inner slimscroll\">\n          <div id=\"sidebar-menu\" className=\"sidebar-menu\">\n            <ul>\n              <li>\n                <Link to=\"/\">Dashboard</Link>\n              </li>\n              <li >\n                <Link to=\"/buy-bond\">Buy bond</Link>\n              </li>\n          \n            </ul>\n          </div>\n        </div>\n      </div>\n      {/* /Sidebar */}\n\n      {/* Content */}\n      <div className=\"page-wrapper exchange-wrapper bg-wrapper\">\n        <div className=\"content\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n            <Routes >\n                <Route path=\"/buy-bond\"  element={<BuyBond/>}>\n                </Route>\n                <Route path=\"/users\">\n                  <>users</>\n\n                </Route>\n                <Route path=\"/\" element={<Dashboard/>}>\n                </Route>\n           </Routes >\n            \n            </div>\n          </div>\n        </div>\n     \n      </div>\n    </div>\n    </Router>\n  </>\n );\n}\n","import * as React from \"react\";\nimport { ChakraProvider, Box, VStack, Grid, theme } from \"@chakra-ui/react\";\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\nimport { Layout } from \"./components/Layout/Layout\";\n\nimport { Logo } from \"./Logo\";\n\nexport const App = () => (\n  <ChakraProvider theme={theme}>\n    <Box fontSize=\"xl\">\n      <Grid minH=\"100vh\" p={3}>\n        <ColorModeSwitcher justifySelf=\"flex-end\" />\n        <VStack spacing={8}>\n          <Layout />\n        </VStack>\n      </Grid>\n    </Box>\n  </ChakraProvider>\n);\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}